{
	"id": "1ec14363d59a1fe957d5f2dbb2120521",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TamboToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n// Importamos los contratos necesarios desde OpenZeppelin\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\n\r\ncontract TamboToken is ERC20, Ownable, Pausable {\r\n    uint256 public maxSupply; // Suministro máximo de tokens\r\n    mapping(address => uint256) public stakedTokens; // Tokens en staking\r\n    mapping(address => uint256) public stakingRewards; // Recompensas de staking\r\n\r\n    // Constructor del token\r\n    constructor(uint256 initialSupply, uint256 _maxSupply) ERC20(\"TamboToken\", \"TBT\") Ownable(msg.sender) {\r\n        maxSupply = _maxSupply * (10 ** decimals()); // Definimos el suministro máximo\r\n        _mint(msg.sender, initialSupply * (10 ** decimals())); // El propietario recibe el suministro inicial\r\n    }\r\n\r\n    // Función para emitir tokens siempre que no se supere el suministro máximo\r\n    function rewardTokens(address recipient, uint256 amount) external onlyOwner whenNotPaused {\r\n        uint256 amountWithDecimals = amount * (10 ** decimals());\r\n        require(totalSupply() + amountWithDecimals <= maxSupply, \"No se pueden acuniar mas tokens, se excede el maximo.\");\r\n        _mint(recipient, amountWithDecimals); // Emitimos tokens sin superar el maxSupply\r\n    }\r\n\r\n    // Función para canjear tokens (quemarlos)\r\n    function redeemTokens(uint256 amount) external whenNotPaused {\r\n        _burn(msg.sender, amount * (10 ** decimals()));\r\n    }\r\n\r\n    // Función para transferir tokens entre usuarios\r\n    function transferTokens(address recipient, uint256 amount) external whenNotPaused {\r\n        transfer(recipient, amount * (10 ** decimals()));\r\n    }\r\n\r\n    // Función para pausar el contrato (solo el propietario puede pausar)\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    // Función para reanudar el contrato (solo el propietario puede reanudar)\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    // Función para hacer staking (bloquear tokens para recompensas)\r\n    function stakeTokens(uint256 amount) external whenNotPaused {\r\n        require(balanceOf(msg.sender) >= amount * (10 ** decimals()), \"No tienes suficientes tokens para hacer staking.\");\r\n        _burn(msg.sender, amount * (10 ** decimals())); // Quemamos los tokens para hacer staking\r\n        stakedTokens[msg.sender] += amount * (10 ** decimals()); // Actualizamos el balance de staking\r\n    }\r\n\r\n    // Función para reclamar recompensas por staking\r\n    function claimStakingRewards() external whenNotPaused {\r\n        uint256 rewards = calculateRewards(msg.sender);\r\n        require(rewards > 0, \"No tienes recompensas pendientes.\");\r\n        stakingRewards[msg.sender] = 0; // Reseteamos las recompensas\r\n        _mint(msg.sender, rewards); // Emitimos las recompensas al usuario\r\n    }\r\n\r\n    // Función para calcular las recompensas basadas en el staking\r\n    function calculateRewards(address staker) public view returns (uint256) {\r\n        return stakedTokens[staker] / 10; // Ejemplo simple: 10% de los tokens en staking\r\n    }\r\n\r\n    // Eventos para monitorear actividades\r\n    event TokensRewarded(address indexed recipient, uint256 amount);\r\n    event TokensRedeemed(address indexed redeemer, uint256 amount);\r\n    event TokensStaked(address indexed staker, uint256 amount);\r\n    event RewardsClaimed(address indexed staker, uint256 amount);\r\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TamboToken.sol": {
				"TamboToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "redeemer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensRedeemed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensRewarded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "staker",
									"type": "address"
								}
							],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimStakingRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redeemTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rewardTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TamboToken.sol\":289:3513  contract TamboToken is ERC20, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TamboToken.sol\":596:906  constructor(uint256 initialSupply, uint256 _maxSupply) ERC20(\"TamboToken\", \"TBT\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TamboToken.sol\":686:696  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x54616d626f546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5442540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TamboToken.sol\":741:751  decimals() */\n  tag_20\n    /* \"contracts/TamboToken.sol\":741:749  decimals */\n  shl(0x20, tag_21)\n    /* \"contracts/TamboToken.sol\":741:751  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/TamboToken.sol\":735:737  10 */\n  0x0a\n    /* \"contracts/TamboToken.sol\":735:751  10 ** decimals() */\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"contracts/TamboToken.sol\":721:731  _maxSupply */\n  dup2\n    /* \"contracts/TamboToken.sol\":721:752  _maxSupply * (10 ** decimals()) */\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"contracts/TamboToken.sol\":709:718  maxSupply */\n  0x06\n    /* \"contracts/TamboToken.sol\":709:752  maxSupply = _maxSupply * (10 ** decimals()) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TamboToken.sol\":798:851  _mint(msg.sender, initialSupply * (10 ** decimals())) */\n  tag_26\n    /* \"contracts/TamboToken.sol\":804:814  msg.sender */\n  caller\n    /* \"contracts/TamboToken.sol\":839:849  decimals() */\n  tag_27\n    /* \"contracts/TamboToken.sol\":839:847  decimals */\n  shl(0x20, tag_21)\n    /* \"contracts/TamboToken.sol\":839:849  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/TamboToken.sol\":833:835  10 */\n  0x0a\n    /* \"contracts/TamboToken.sol\":833:849  10 ** decimals() */\n  tag_28\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_28:\n    /* \"contracts/TamboToken.sol\":816:829  initialSupply */\n  dup5\n    /* \"contracts/TamboToken.sol\":816:850  initialSupply * (10 ** decimals()) */\n  tag_29\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_29:\n    /* \"contracts/TamboToken.sol\":798:803  _mint */\n  shl(0x20, tag_30)\n    /* \"contracts/TamboToken.sol\":798:851  _mint(msg.sender, initialSupply * (10 ** decimals())) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"contracts/TamboToken.sol\":596:906  constructor(uint256 initialSupply, uint256 _maxSupply) ERC20(\"TamboToken\", \"TBT\") Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contracts/TamboToken.sol\":289:3513  contract TamboToken is ERC20, Ownable, Pausable {... */\n  jump(tag_31)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_37\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_38)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_41\n  swap2\n  swap1\n  tag_42\n  jump\t// in\ntag_41:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_43)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_45\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_47\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_48)\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_49\n  swap2\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_52:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_54:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_55:\n    /* \"#utility.yul\":490:514   */\n  tag_91\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_54\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_92:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_56:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_94\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_55\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1201   */\ntag_3:\n    /* \"#utility.yul\":773:779   */\n  0x00\n    /* \"#utility.yul\":781:787   */\n  dup1\n    /* \"#utility.yul\":830:832   */\n  0x40\n    /* \"#utility.yul\":818:827   */\n  dup4\n    /* \"#utility.yul\":809:816   */\n  dup6\n    /* \"#utility.yul\":805:828   */\n  sub\n    /* \"#utility.yul\":801:833   */\n  slt\n    /* \"#utility.yul\":798:917   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":836:915   */\n  tag_97\n  tag_52\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":798:917   */\ntag_96:\n    /* \"#utility.yul\":956:957   */\n  0x00\n    /* \"#utility.yul\":981:1045   */\n  tag_98\n    /* \"#utility.yul\":1037:1044   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1017:1026   */\n  dup7\n    /* \"#utility.yul\":1013:1035   */\n  add\n    /* \"#utility.yul\":981:1045   */\n  tag_56\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":971:1045   */\n  swap3\n  pop\n    /* \"#utility.yul\":927:1055   */\n  pop\n    /* \"#utility.yul\":1094:1096   */\n  0x20\n    /* \"#utility.yul\":1120:1184   */\n  tag_99\n    /* \"#utility.yul\":1176:1183   */\n  dup6\n    /* \"#utility.yul\":1167:1173   */\n  dup3\n    /* \"#utility.yul\":1156:1165   */\n  dup7\n    /* \"#utility.yul\":1152:1174   */\n  add\n    /* \"#utility.yul\":1120:1184   */\n  tag_56\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1110:1184   */\n  swap2\n  pop\n    /* \"#utility.yul\":1065:1194   */\n  pop\n    /* \"#utility.yul\":694:1201   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1207:1306   */\ntag_57:\n    /* \"#utility.yul\":1259:1265   */\n  0x00\n    /* \"#utility.yul\":1293:1298   */\n  dup2\n    /* \"#utility.yul\":1287:1299   */\n  mload\n    /* \"#utility.yul\":1277:1299   */\n  swap1\n  pop\n    /* \"#utility.yul\":1207:1306   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1312:1492   */\ntag_58:\n    /* \"#utility.yul\":1360:1437   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1357:1358   */\n  0x00\n    /* \"#utility.yul\":1350:1438   */\n  mstore\n    /* \"#utility.yul\":1457:1461   */\n  0x41\n    /* \"#utility.yul\":1454:1455   */\n  0x04\n    /* \"#utility.yul\":1447:1462   */\n  mstore\n    /* \"#utility.yul\":1481:1485   */\n  0x24\n    /* \"#utility.yul\":1478:1479   */\n  0x00\n    /* \"#utility.yul\":1471:1486   */\n  revert\n    /* \"#utility.yul\":1498:1678   */\ntag_59:\n    /* \"#utility.yul\":1546:1623   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1543:1544   */\n  0x00\n    /* \"#utility.yul\":1536:1624   */\n  mstore\n    /* \"#utility.yul\":1643:1647   */\n  0x22\n    /* \"#utility.yul\":1640:1641   */\n  0x04\n    /* \"#utility.yul\":1633:1648   */\n  mstore\n    /* \"#utility.yul\":1667:1671   */\n  0x24\n    /* \"#utility.yul\":1664:1665   */\n  0x00\n    /* \"#utility.yul\":1657:1672   */\n  revert\n    /* \"#utility.yul\":1684:2004   */\ntag_60:\n    /* \"#utility.yul\":1728:1734   */\n  0x00\n    /* \"#utility.yul\":1765:1766   */\n  0x02\n    /* \"#utility.yul\":1759:1763   */\n  dup3\n    /* \"#utility.yul\":1755:1767   */\n  div\n    /* \"#utility.yul\":1745:1767   */\n  swap1\n  pop\n    /* \"#utility.yul\":1812:1813   */\n  0x01\n    /* \"#utility.yul\":1806:1810   */\n  dup3\n    /* \"#utility.yul\":1802:1814   */\n  and\n    /* \"#utility.yul\":1833:1851   */\n  dup1\n    /* \"#utility.yul\":1823:1904   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":1889:1893   */\n  0x7f\n    /* \"#utility.yul\":1881:1887   */\n  dup3\n    /* \"#utility.yul\":1877:1894   */\n  and\n    /* \"#utility.yul\":1867:1894   */\n  swap2\n  pop\n    /* \"#utility.yul\":1823:1904   */\ntag_104:\n    /* \"#utility.yul\":1951:1953   */\n  0x20\n    /* \"#utility.yul\":1943:1949   */\n  dup3\n    /* \"#utility.yul\":1940:1954   */\n  lt\n    /* \"#utility.yul\":1920:1938   */\n  dup2\n    /* \"#utility.yul\":1917:1955   */\n  sub\n    /* \"#utility.yul\":1914:1998   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1970:1988   */\n  tag_106\n  tag_59\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1914:1998   */\ntag_105:\n    /* \"#utility.yul\":1735:2004   */\n  pop\n    /* \"#utility.yul\":1684:2004   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2010:2151   */\ntag_61:\n    /* \"#utility.yul\":2059:2063   */\n  0x00\n    /* \"#utility.yul\":2082:2085   */\n  dup2\n    /* \"#utility.yul\":2074:2085   */\n  swap1\n  pop\n    /* \"#utility.yul\":2105:2108   */\n  dup2\n    /* \"#utility.yul\":2102:2103   */\n  0x00\n    /* \"#utility.yul\":2095:2109   */\n  mstore\n    /* \"#utility.yul\":2139:2143   */\n  0x20\n    /* \"#utility.yul\":2136:2137   */\n  0x00\n    /* \"#utility.yul\":2126:2144   */\n  keccak256\n    /* \"#utility.yul\":2118:2144   */\n  swap1\n  pop\n    /* \"#utility.yul\":2010:2151   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2157:2250   */\ntag_62:\n    /* \"#utility.yul\":2194:2200   */\n  0x00\n    /* \"#utility.yul\":2241:2243   */\n  0x20\n    /* \"#utility.yul\":2236:2238   */\n  0x1f\n    /* \"#utility.yul\":2229:2234   */\n  dup4\n    /* \"#utility.yul\":2225:2239   */\n  add\n    /* \"#utility.yul\":2221:2244   */\n  div\n    /* \"#utility.yul\":2211:2244   */\n  swap1\n  pop\n    /* \"#utility.yul\":2157:2250   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2256:2363   */\ntag_63:\n    /* \"#utility.yul\":2300:2308   */\n  0x00\n    /* \"#utility.yul\":2350:2355   */\n  dup3\n    /* \"#utility.yul\":2344:2348   */\n  dup3\n    /* \"#utility.yul\":2340:2356   */\n  shl\n    /* \"#utility.yul\":2319:2356   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2363   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2369:2762   */\ntag_64:\n    /* \"#utility.yul\":2438:2444   */\n  0x00\n    /* \"#utility.yul\":2488:2489   */\n  0x08\n    /* \"#utility.yul\":2476:2486   */\n  dup4\n    /* \"#utility.yul\":2472:2490   */\n  mul\n    /* \"#utility.yul\":2511:2608   */\n  tag_111\n    /* \"#utility.yul\":2541:2607   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2530:2539   */\n  dup3\n    /* \"#utility.yul\":2511:2608   */\n  tag_63\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2629:2668   */\n  tag_112\n    /* \"#utility.yul\":2659:2667   */\n  dup7\n    /* \"#utility.yul\":2648:2657   */\n  dup4\n    /* \"#utility.yul\":2629:2668   */\n  tag_63\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2617:2668   */\n  swap6\n  pop\n    /* \"#utility.yul\":2701:2705   */\n  dup1\n    /* \"#utility.yul\":2697:2706   */\n  not\n    /* \"#utility.yul\":2690:2695   */\n  dup5\n    /* \"#utility.yul\":2686:2707   */\n  and\n    /* \"#utility.yul\":2677:2707   */\n  swap4\n  pop\n    /* \"#utility.yul\":2750:2754   */\n  dup1\n    /* \"#utility.yul\":2740:2748   */\n  dup7\n    /* \"#utility.yul\":2736:2755   */\n  and\n    /* \"#utility.yul\":2729:2734   */\n  dup5\n    /* \"#utility.yul\":2726:2756   */\n  or\n    /* \"#utility.yul\":2716:2756   */\n  swap3\n  pop\n    /* \"#utility.yul\":2445:2762   */\n  pop\n  pop\n    /* \"#utility.yul\":2369:2762   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2768:2828   */\ntag_65:\n    /* \"#utility.yul\":2796:2799   */\n  0x00\n    /* \"#utility.yul\":2817:2822   */\n  dup2\n    /* \"#utility.yul\":2810:2822   */\n  swap1\n  pop\n    /* \"#utility.yul\":2768:2828   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2834:2976   */\ntag_66:\n    /* \"#utility.yul\":2884:2893   */\n  0x00\n    /* \"#utility.yul\":2917:2970   */\n  tag_115\n    /* \"#utility.yul\":2935:2969   */\n  tag_116\n    /* \"#utility.yul\":2944:2968   */\n  tag_117\n    /* \"#utility.yul\":2962:2967   */\n  dup5\n    /* \"#utility.yul\":2944:2968   */\n  tag_54\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2935:2969   */\n  tag_65\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":2917:2970   */\n  tag_54\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2904:2970   */\n  swap1\n  pop\n    /* \"#utility.yul\":2834:2976   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2982:3057   */\ntag_67:\n    /* \"#utility.yul\":3025:3028   */\n  0x00\n    /* \"#utility.yul\":3046:3051   */\n  dup2\n    /* \"#utility.yul\":3039:3051   */\n  swap1\n  pop\n    /* \"#utility.yul\":2982:3057   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3063:3332   */\ntag_68:\n    /* \"#utility.yul\":3173:3212   */\n  tag_120\n    /* \"#utility.yul\":3204:3211   */\n  dup4\n    /* \"#utility.yul\":3173:3212   */\n  tag_66\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3234:3325   */\n  tag_121\n    /* \"#utility.yul\":3283:3324   */\n  tag_122\n    /* \"#utility.yul\":3307:3323   */\n  dup3\n    /* \"#utility.yul\":3283:3324   */\n  tag_67\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3275:3281   */\n  dup5\n    /* \"#utility.yul\":3268:3272   */\n  dup5\n    /* \"#utility.yul\":3262:3273   */\n  sload\n    /* \"#utility.yul\":3234:3325   */\n  tag_64\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3228:3232   */\n  dup3\n    /* \"#utility.yul\":3221:3326   */\n  sstore\n    /* \"#utility.yul\":3139:3332   */\n  pop\n    /* \"#utility.yul\":3063:3332   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3338:3411   */\ntag_69:\n    /* \"#utility.yul\":3383:3386   */\n  0x00\n    /* \"#utility.yul\":3338:3411   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3417:3606   */\ntag_70:\n    /* \"#utility.yul\":3494:3526   */\n  tag_125\n  tag_69\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3535:3600   */\n  tag_126\n    /* \"#utility.yul\":3593:3599   */\n  dup2\n    /* \"#utility.yul\":3585:3591   */\n  dup5\n    /* \"#utility.yul\":3579:3583   */\n  dup5\n    /* \"#utility.yul\":3535:3600   */\n  tag_68\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3470:3606   */\n  pop\n    /* \"#utility.yul\":3417:3606   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3612:3798   */\ntag_71:\n    /* \"#utility.yul\":3672:3792   */\ntag_128:\n    /* \"#utility.yul\":3689:3692   */\n  dup2\n    /* \"#utility.yul\":3682:3687   */\n  dup2\n    /* \"#utility.yul\":3679:3693   */\n  lt\n    /* \"#utility.yul\":3672:3792   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":3743:3782   */\n  tag_131\n    /* \"#utility.yul\":3780:3781   */\n  0x00\n    /* \"#utility.yul\":3773:3778   */\n  dup3\n    /* \"#utility.yul\":3743:3782   */\n  tag_70\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3716:3717   */\n  0x01\n    /* \"#utility.yul\":3709:3714   */\n  dup2\n    /* \"#utility.yul\":3705:3718   */\n  add\n    /* \"#utility.yul\":3696:3718   */\n  swap1\n  pop\n    /* \"#utility.yul\":3672:3792   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":3612:3798   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3804:4347   */\ntag_72:\n    /* \"#utility.yul\":3905:3907   */\n  0x1f\n    /* \"#utility.yul\":3900:3903   */\n  dup3\n    /* \"#utility.yul\":3897:3908   */\n  gt\n    /* \"#utility.yul\":3894:4340   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":3939:3977   */\n  tag_134\n    /* \"#utility.yul\":3971:3976   */\n  dup2\n    /* \"#utility.yul\":3939:3977   */\n  tag_61\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4023:4052   */\n  tag_135\n    /* \"#utility.yul\":4041:4051   */\n  dup5\n    /* \"#utility.yul\":4023:4052   */\n  tag_62\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4013:4021   */\n  dup2\n    /* \"#utility.yul\":4009:4053   */\n  add\n    /* \"#utility.yul\":4206:4208   */\n  0x20\n    /* \"#utility.yul\":4194:4204   */\n  dup6\n    /* \"#utility.yul\":4191:4209   */\n  lt\n    /* \"#utility.yul\":4188:4237   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4227:4235   */\n  dup2\n    /* \"#utility.yul\":4212:4235   */\n  swap1\n  pop\n    /* \"#utility.yul\":4188:4237   */\ntag_136:\n    /* \"#utility.yul\":4250:4330   */\n  tag_137\n    /* \"#utility.yul\":4306:4328   */\n  tag_138\n    /* \"#utility.yul\":4324:4327   */\n  dup6\n    /* \"#utility.yul\":4306:4328   */\n  tag_62\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4296:4304   */\n  dup4\n    /* \"#utility.yul\":4292:4329   */\n  add\n    /* \"#utility.yul\":4279:4290   */\n  dup3\n    /* \"#utility.yul\":4250:4330   */\n  tag_71\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":3909:4340   */\n  pop\n  pop\n    /* \"#utility.yul\":3894:4340   */\ntag_133:\n    /* \"#utility.yul\":3804:4347   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4353:4470   */\ntag_73:\n    /* \"#utility.yul\":4407:4415   */\n  0x00\n    /* \"#utility.yul\":4457:4462   */\n  dup3\n    /* \"#utility.yul\":4451:4455   */\n  dup3\n    /* \"#utility.yul\":4447:4463   */\n  shr\n    /* \"#utility.yul\":4426:4463   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4470   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4476:4645   */\ntag_74:\n    /* \"#utility.yul\":4520:4526   */\n  0x00\n    /* \"#utility.yul\":4553:4604   */\n  tag_141\n    /* \"#utility.yul\":4601:4602   */\n  0x00\n    /* \"#utility.yul\":4597:4603   */\n  not\n    /* \"#utility.yul\":4589:4594   */\n  dup5\n    /* \"#utility.yul\":4586:4587   */\n  0x08\n    /* \"#utility.yul\":4582:4595   */\n  mul\n    /* \"#utility.yul\":4553:4604   */\n  tag_73\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":4549:4605   */\n  not\n    /* \"#utility.yul\":4634:4638   */\n  dup1\n    /* \"#utility.yul\":4628:4632   */\n  dup4\n    /* \"#utility.yul\":4624:4639   */\n  and\n    /* \"#utility.yul\":4614:4639   */\n  swap2\n  pop\n    /* \"#utility.yul\":4527:4645   */\n  pop\n    /* \"#utility.yul\":4476:4645   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4650:4945   */\ntag_75:\n    /* \"#utility.yul\":4726:4730   */\n  0x00\n    /* \"#utility.yul\":4872:4901   */\n  tag_143\n    /* \"#utility.yul\":4897:4900   */\n  dup4\n    /* \"#utility.yul\":4891:4895   */\n  dup4\n    /* \"#utility.yul\":4872:4901   */\n  tag_74\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":4864:4901   */\n  swap2\n  pop\n    /* \"#utility.yul\":4934:4937   */\n  dup3\n    /* \"#utility.yul\":4931:4932   */\n  0x02\n    /* \"#utility.yul\":4927:4938   */\n  mul\n    /* \"#utility.yul\":4921:4925   */\n  dup3\n    /* \"#utility.yul\":4918:4939   */\n  or\n    /* \"#utility.yul\":4910:4939   */\n  swap1\n  pop\n    /* \"#utility.yul\":4650:4945   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4950:6345   */\ntag_10:\n    /* \"#utility.yul\":5067:5104   */\n  tag_145\n    /* \"#utility.yul\":5100:5103   */\n  dup3\n    /* \"#utility.yul\":5067:5104   */\n  tag_57\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5169:5187   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5161:5167   */\n  dup2\n    /* \"#utility.yul\":5158:5188   */\n  gt\n    /* \"#utility.yul\":5155:5211   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":5191:5209   */\n  tag_147\n  tag_58\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5155:5211   */\ntag_146:\n    /* \"#utility.yul\":5235:5273   */\n  tag_148\n    /* \"#utility.yul\":5267:5271   */\n  dup3\n    /* \"#utility.yul\":5261:5272   */\n  sload\n    /* \"#utility.yul\":5235:5273   */\n  tag_60\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5320:5387   */\n  tag_149\n    /* \"#utility.yul\":5380:5386   */\n  dup3\n    /* \"#utility.yul\":5372:5378   */\n  dup3\n    /* \"#utility.yul\":5366:5370   */\n  dup6\n    /* \"#utility.yul\":5320:5387   */\n  tag_72\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5414:5415   */\n  0x00\n    /* \"#utility.yul\":5438:5442   */\n  0x20\n    /* \"#utility.yul\":5425:5442   */\n  swap1\n  pop\n    /* \"#utility.yul\":5470:5472   */\n  0x1f\n    /* \"#utility.yul\":5462:5468   */\n  dup4\n    /* \"#utility.yul\":5459:5473   */\n  gt\n    /* \"#utility.yul\":5487:5488   */\n  0x01\n    /* \"#utility.yul\":5482:6100   */\n  dup2\n  eq\n  tag_151\n  jumpi\n    /* \"#utility.yul\":6144:6145   */\n  0x00\n    /* \"#utility.yul\":6161:6167   */\n  dup5\n    /* \"#utility.yul\":6158:6235   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6210:6219   */\n  dup3\n    /* \"#utility.yul\":6205:6208   */\n  dup8\n    /* \"#utility.yul\":6201:6220   */\n  add\n    /* \"#utility.yul\":6195:6221   */\n  mload\n    /* \"#utility.yul\":6186:6221   */\n  swap1\n  pop\n    /* \"#utility.yul\":6158:6235   */\ntag_152:\n    /* \"#utility.yul\":6261:6328   */\n  tag_153\n    /* \"#utility.yul\":6321:6327   */\n  dup6\n    /* \"#utility.yul\":6314:6319   */\n  dup3\n    /* \"#utility.yul\":6261:6328   */\n  tag_75\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6255:6259   */\n  dup7\n    /* \"#utility.yul\":6248:6329   */\n  sstore\n    /* \"#utility.yul\":6117:6339   */\n  pop\n    /* \"#utility.yul\":5452:6339   */\n  jump(tag_150)\n    /* \"#utility.yul\":5482:6100   */\ntag_151:\n    /* \"#utility.yul\":5534:5538   */\n  0x1f\n    /* \"#utility.yul\":5530:5539   */\n  not\n    /* \"#utility.yul\":5522:5528   */\n  dup5\n    /* \"#utility.yul\":5518:5540   */\n  and\n    /* \"#utility.yul\":5568:5605   */\n  tag_154\n    /* \"#utility.yul\":5600:5604   */\n  dup7\n    /* \"#utility.yul\":5568:5605   */\n  tag_61\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5627:5628   */\n  0x00\n    /* \"#utility.yul\":5641:5849   */\ntag_155:\n    /* \"#utility.yul\":5655:5662   */\n  dup3\n    /* \"#utility.yul\":5652:5653   */\n  dup2\n    /* \"#utility.yul\":5649:5663   */\n  lt\n    /* \"#utility.yul\":5641:5849   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":5734:5743   */\n  dup5\n    /* \"#utility.yul\":5729:5732   */\n  dup10\n    /* \"#utility.yul\":5725:5744   */\n  add\n    /* \"#utility.yul\":5719:5745   */\n  mload\n    /* \"#utility.yul\":5711:5717   */\n  dup3\n    /* \"#utility.yul\":5704:5746   */\n  sstore\n    /* \"#utility.yul\":5785:5786   */\n  0x01\n    /* \"#utility.yul\":5777:5783   */\n  dup3\n    /* \"#utility.yul\":5773:5787   */\n  add\n    /* \"#utility.yul\":5763:5787   */\n  swap2\n  pop\n    /* \"#utility.yul\":5832:5834   */\n  0x20\n    /* \"#utility.yul\":5821:5830   */\n  dup6\n    /* \"#utility.yul\":5817:5835   */\n  add\n    /* \"#utility.yul\":5804:5835   */\n  swap5\n  pop\n    /* \"#utility.yul\":5678:5682   */\n  0x20\n    /* \"#utility.yul\":5675:5676   */\n  dup2\n    /* \"#utility.yul\":5671:5683   */\n  add\n    /* \"#utility.yul\":5666:5683   */\n  swap1\n  pop\n    /* \"#utility.yul\":5641:5849   */\n  jump(tag_155)\ntag_157:\n    /* \"#utility.yul\":5877:5883   */\n  dup7\n    /* \"#utility.yul\":5868:5875   */\n  dup4\n    /* \"#utility.yul\":5865:5884   */\n  lt\n    /* \"#utility.yul\":5862:6041   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":5935:5944   */\n  dup5\n    /* \"#utility.yul\":5930:5933   */\n  dup10\n    /* \"#utility.yul\":5926:5945   */\n  add\n    /* \"#utility.yul\":5920:5946   */\n  mload\n    /* \"#utility.yul\":5978:6026   */\n  tag_159\n    /* \"#utility.yul\":6020:6024   */\n  0x1f\n    /* \"#utility.yul\":6012:6018   */\n  dup10\n    /* \"#utility.yul\":6008:6025   */\n  and\n    /* \"#utility.yul\":5997:6006   */\n  dup3\n    /* \"#utility.yul\":5978:6026   */\n  tag_74\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":5970:5976   */\n  dup4\n    /* \"#utility.yul\":5963:6027   */\n  sstore\n    /* \"#utility.yul\":5885:6041   */\n  pop\n    /* \"#utility.yul\":5862:6041   */\ntag_158:\n    /* \"#utility.yul\":6087:6088   */\n  0x01\n    /* \"#utility.yul\":6083:6084   */\n  0x02\n    /* \"#utility.yul\":6075:6081   */\n  dup9\n    /* \"#utility.yul\":6071:6085   */\n  mul\n    /* \"#utility.yul\":6067:6089   */\n  add\n    /* \"#utility.yul\":6061:6065   */\n  dup9\n    /* \"#utility.yul\":6054:6090   */\n  sstore\n    /* \"#utility.yul\":5489:6100   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5452:6339   */\ntag_150:\n  pop\n    /* \"#utility.yul\":5042:6345   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4950:6345   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6351:6477   */\ntag_76:\n    /* \"#utility.yul\":6388:6395   */\n  0x00\n    /* \"#utility.yul\":6428:6470   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6421:6426   */\n  dup3\n    /* \"#utility.yul\":6417:6471   */\n  and\n    /* \"#utility.yul\":6406:6471   */\n  swap1\n  pop\n    /* \"#utility.yul\":6351:6477   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6483:6579   */\ntag_77:\n    /* \"#utility.yul\":6520:6527   */\n  0x00\n    /* \"#utility.yul\":6549:6573   */\n  tag_162\n    /* \"#utility.yul\":6567:6572   */\n  dup3\n    /* \"#utility.yul\":6549:6573   */\n  tag_76\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6538:6573   */\n  swap1\n  pop\n    /* \"#utility.yul\":6483:6579   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6585:6703   */\ntag_78:\n    /* \"#utility.yul\":6672:6696   */\n  tag_164\n    /* \"#utility.yul\":6690:6695   */\n  dup2\n    /* \"#utility.yul\":6672:6696   */\n  tag_77\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6667:6670   */\n  dup3\n    /* \"#utility.yul\":6660:6697   */\n  mstore\n    /* \"#utility.yul\":6585:6703   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6709:6931   */\ntag_15:\n    /* \"#utility.yul\":6802:6806   */\n  0x00\n    /* \"#utility.yul\":6840:6842   */\n  0x20\n    /* \"#utility.yul\":6829:6838   */\n  dup3\n    /* \"#utility.yul\":6825:6843   */\n  add\n    /* \"#utility.yul\":6817:6843   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:6924   */\n  tag_166\n    /* \"#utility.yul\":6921:6922   */\n  0x00\n    /* \"#utility.yul\":6910:6919   */\n  dup4\n    /* \"#utility.yul\":6906:6923   */\n  add\n    /* \"#utility.yul\":6897:6903   */\n  dup5\n    /* \"#utility.yul\":6853:6924   */\n  tag_78\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6709:6931   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6937:7117   */\ntag_79:\n    /* \"#utility.yul\":6985:7062   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6982:6983   */\n  0x00\n    /* \"#utility.yul\":6975:7063   */\n  mstore\n    /* \"#utility.yul\":7082:7086   */\n  0x11\n    /* \"#utility.yul\":7079:7080   */\n  0x04\n    /* \"#utility.yul\":7072:7087   */\n  mstore\n    /* \"#utility.yul\":7106:7110   */\n  0x24\n    /* \"#utility.yul\":7103:7104   */\n  0x00\n    /* \"#utility.yul\":7096:7111   */\n  revert\n    /* \"#utility.yul\":7123:7225   */\ntag_80:\n    /* \"#utility.yul\":7165:7173   */\n  0x00\n    /* \"#utility.yul\":7212:7217   */\n  dup2\n    /* \"#utility.yul\":7209:7210   */\n  0x01\n    /* \"#utility.yul\":7205:7218   */\n  shr\n    /* \"#utility.yul\":7184:7218   */\n  swap1\n  pop\n    /* \"#utility.yul\":7123:7225   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7231:8079   */\ntag_81:\n    /* \"#utility.yul\":7292:7297   */\n  0x00\n    /* \"#utility.yul\":7299:7303   */\n  dup1\n    /* \"#utility.yul\":7323:7329   */\n  dup3\n    /* \"#utility.yul\":7314:7329   */\n  swap2\n  pop\n    /* \"#utility.yul\":7347:7352   */\n  dup4\n    /* \"#utility.yul\":7338:7352   */\n  swap1\n  pop\n    /* \"#utility.yul\":7361:8073   */\ntag_170:\n    /* \"#utility.yul\":7382:7383   */\n  0x01\n    /* \"#utility.yul\":7372:7380   */\n  dup6\n    /* \"#utility.yul\":7369:7384   */\n  gt\n    /* \"#utility.yul\":7361:8073   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":7477:7481   */\n  dup1\n    /* \"#utility.yul\":7472:7475   */\n  dup7\n    /* \"#utility.yul\":7468:7482   */\n  div\n    /* \"#utility.yul\":7462:7466   */\n  dup2\n    /* \"#utility.yul\":7459:7483   */\n  gt\n    /* \"#utility.yul\":7456:7506   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":7486:7504   */\n  tag_174\n  tag_79\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7456:7506   */\ntag_173:\n    /* \"#utility.yul\":7536:7537   */\n  0x01\n    /* \"#utility.yul\":7526:7534   */\n  dup6\n    /* \"#utility.yul\":7522:7538   */\n  and\n    /* \"#utility.yul\":7519:7970   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":7951:7955   */\n  dup1\n    /* \"#utility.yul\":7944:7949   */\n  dup3\n    /* \"#utility.yul\":7940:7956   */\n  mul\n    /* \"#utility.yul\":7931:7956   */\n  swap2\n  pop\n    /* \"#utility.yul\":7519:7970   */\ntag_175:\n    /* \"#utility.yul\":8001:8005   */\n  dup1\n    /* \"#utility.yul\":7995:7999   */\n  dup2\n    /* \"#utility.yul\":7991:8006   */\n  mul\n    /* \"#utility.yul\":7983:8006   */\n  swap1\n  pop\n    /* \"#utility.yul\":8031:8063   */\n  tag_176\n    /* \"#utility.yul\":8054:8062   */\n  dup6\n    /* \"#utility.yul\":8031:8063   */\n  tag_80\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8019:8063   */\n  swap5\n  pop\n    /* \"#utility.yul\":7361:8073   */\n  jump(tag_170)\ntag_172:\n    /* \"#utility.yul\":7231:8079   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8085:9158   */\ntag_82:\n    /* \"#utility.yul\":8139:8144   */\n  0x00\n    /* \"#utility.yul\":8330:8338   */\n  dup3\n    /* \"#utility.yul\":8320:8360   */\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8351:8352   */\n  0x01\n    /* \"#utility.yul\":8342:8352   */\n  swap1\n  pop\n    /* \"#utility.yul\":8353:8358   */\n  jump(tag_177)\n    /* \"#utility.yul\":8320:8360   */\ntag_178:\n    /* \"#utility.yul\":8379:8383   */\n  dup2\n    /* \"#utility.yul\":8369:8405   */\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8396:8397   */\n  0x00\n    /* \"#utility.yul\":8387:8397   */\n  swap1\n  pop\n    /* \"#utility.yul\":8398:8403   */\n  jump(tag_177)\n    /* \"#utility.yul\":8369:8405   */\ntag_179:\n    /* \"#utility.yul\":8465:8469   */\n  dup2\n    /* \"#utility.yul\":8513:8514   */\n  0x01\n    /* \"#utility.yul\":8508:8535   */\n  dup2\n  eq\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8549:8550   */\n  0x02\n    /* \"#utility.yul\":8544:8735   */\n  dup2\n  eq\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8458:8735   */\n  jump(tag_180)\n    /* \"#utility.yul\":8508:8535   */\ntag_181:\n    /* \"#utility.yul\":8526:8527   */\n  0x01\n    /* \"#utility.yul\":8517:8527   */\n  swap2\n  pop\n    /* \"#utility.yul\":8528:8533   */\n  pop\n  jump(tag_177)\n    /* \"#utility.yul\":8544:8735   */\ntag_182:\n    /* \"#utility.yul\":8589:8592   */\n  0xff\n    /* \"#utility.yul\":8579:8587   */\n  dup5\n    /* \"#utility.yul\":8576:8593   */\n  gt\n    /* \"#utility.yul\":8573:8616   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8596:8614   */\n  tag_184\n  tag_79\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8573:8616   */\ntag_183:\n    /* \"#utility.yul\":8645:8653   */\n  dup4\n    /* \"#utility.yul\":8642:8643   */\n  0x02\n    /* \"#utility.yul\":8638:8654   */\n  exp\n    /* \"#utility.yul\":8629:8654   */\n  swap2\n  pop\n    /* \"#utility.yul\":8680:8683   */\n  dup5\n    /* \"#utility.yul\":8673:8678   */\n  dup3\n    /* \"#utility.yul\":8670:8684   */\n  gt\n    /* \"#utility.yul\":8667:8707   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8687:8705   */\n  tag_186\n  tag_79\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8667:8707   */\ntag_185:\n    /* \"#utility.yul\":8720:8725   */\n  pop\n  jump(tag_177)\n    /* \"#utility.yul\":8458:8735   */\ntag_180:\n  pop\n    /* \"#utility.yul\":8844:8846   */\n  0x20\n    /* \"#utility.yul\":8834:8842   */\n  dup4\n    /* \"#utility.yul\":8831:8847   */\n  lt\n    /* \"#utility.yul\":8825:8828   */\n  0x0133\n    /* \"#utility.yul\":8819:8823   */\n  dup4\n    /* \"#utility.yul\":8816:8829   */\n  lt\n    /* \"#utility.yul\":8812:8848   */\n  and\n    /* \"#utility.yul\":8794:8796   */\n  0x4e\n    /* \"#utility.yul\":8784:8792   */\n  dup5\n    /* \"#utility.yul\":8781:8797   */\n  lt\n    /* \"#utility.yul\":8776:8778   */\n  0x0b\n    /* \"#utility.yul\":8770:8774   */\n  dup5\n    /* \"#utility.yul\":8767:8779   */\n  lt\n    /* \"#utility.yul\":8763:8798   */\n  and\n    /* \"#utility.yul\":8747:8858   */\n  or\n    /* \"#utility.yul\":8744:8990   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":8900:8908   */\n  dup3\n    /* \"#utility.yul\":8894:8898   */\n  dup3\n    /* \"#utility.yul\":8890:8909   */\n  exp\n    /* \"#utility.yul\":8881:8909   */\n  swap1\n  pop\n    /* \"#utility.yul\":8935:8938   */\n  dup4\n    /* \"#utility.yul\":8928:8933   */\n  dup2\n    /* \"#utility.yul\":8925:8939   */\n  gt\n    /* \"#utility.yul\":8922:8962   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_189\n  tag_79\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8922:8962   */\ntag_188:\n    /* \"#utility.yul\":8975:8980   */\n  jump(tag_177)\n    /* \"#utility.yul\":8744:8990   */\ntag_187:\n    /* \"#utility.yul\":9015:9057   */\n  tag_190\n    /* \"#utility.yul\":9053:9056   */\n  dup5\n    /* \"#utility.yul\":9043:9051   */\n  dup5\n    /* \"#utility.yul\":9037:9041   */\n  dup5\n    /* \"#utility.yul\":9034:9035   */\n  0x01\n    /* \"#utility.yul\":9015:9057   */\n  tag_81\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9000:9057   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":9089:9093   */\n  dup2\n    /* \"#utility.yul\":9084:9087   */\n  dup5\n    /* \"#utility.yul\":9080:9094   */\n  div\n    /* \"#utility.yul\":9073:9078   */\n  dup2\n    /* \"#utility.yul\":9070:9095   */\n  gt\n    /* \"#utility.yul\":9067:9118   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":9098:9116   */\n  tag_192\n  tag_79\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9067:9118   */\ntag_191:\n    /* \"#utility.yul\":9147:9151   */\n  dup2\n    /* \"#utility.yul\":9140:9145   */\n  dup2\n    /* \"#utility.yul\":9136:9152   */\n  mul\n    /* \"#utility.yul\":9127:9152   */\n  swap1\n  pop\n    /* \"#utility.yul\":8085:9158   */\ntag_177:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9164:9250   */\ntag_83:\n    /* \"#utility.yul\":9199:9206   */\n  0x00\n    /* \"#utility.yul\":9239:9243   */\n  0xff\n    /* \"#utility.yul\":9232:9237   */\n  dup3\n    /* \"#utility.yul\":9228:9244   */\n  and\n    /* \"#utility.yul\":9217:9244   */\n  swap1\n  pop\n    /* \"#utility.yul\":9164:9250   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9256:9537   */\ntag_23:\n    /* \"#utility.yul\":9314:9319   */\n  0x00\n    /* \"#utility.yul\":9338:9361   */\n  tag_195\n    /* \"#utility.yul\":9356:9360   */\n  dup3\n    /* \"#utility.yul\":9338:9361   */\n  tag_54\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9330:9361   */\n  swap2\n  pop\n    /* \"#utility.yul\":9382:9407   */\n  tag_196\n    /* \"#utility.yul\":9398:9406   */\n  dup4\n    /* \"#utility.yul\":9382:9407   */\n  tag_83\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9370:9407   */\n  swap3\n  pop\n    /* \"#utility.yul\":9426:9530   */\n  tag_197\n    /* \"#utility.yul\":9463:9529   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9453:9461   */\n  dup5\n    /* \"#utility.yul\":9447:9451   */\n  dup5\n    /* \"#utility.yul\":9426:9530   */\n  tag_82\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9417:9530   */\n  swap1\n  pop\n    /* \"#utility.yul\":9256:9537   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9543:9953   */\ntag_25:\n    /* \"#utility.yul\":9583:9590   */\n  0x00\n    /* \"#utility.yul\":9606:9626   */\n  tag_199\n    /* \"#utility.yul\":9624:9625   */\n  dup3\n    /* \"#utility.yul\":9606:9626   */\n  tag_54\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9601:9626   */\n  swap2\n  pop\n    /* \"#utility.yul\":9640:9660   */\n  tag_200\n    /* \"#utility.yul\":9658:9659   */\n  dup4\n    /* \"#utility.yul\":9640:9660   */\n  tag_54\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9635:9660   */\n  swap3\n  pop\n    /* \"#utility.yul\":9695:9696   */\n  dup3\n    /* \"#utility.yul\":9692:9693   */\n  dup3\n    /* \"#utility.yul\":9688:9697   */\n  mul\n    /* \"#utility.yul\":9717:9747   */\n  tag_201\n    /* \"#utility.yul\":9735:9746   */\n  dup2\n    /* \"#utility.yul\":9717:9747   */\n  tag_54\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":9706:9747   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9897   */\n  dup3\n    /* \"#utility.yul\":9887:9894   */\n  dup3\n    /* \"#utility.yul\":9883:9898   */\n  div\n    /* \"#utility.yul\":9880:9881   */\n  dup5\n    /* \"#utility.yul\":9877:9899   */\n  eq\n    /* \"#utility.yul\":9857:9858   */\n  dup4\n    /* \"#utility.yul\":9850:9859   */\n  iszero\n    /* \"#utility.yul\":9830:9913   */\n  or\n    /* \"#utility.yul\":9807:9946   */\n  tag_202\n  jumpi\n    /* \"#utility.yul\":9926:9944   */\n  tag_203\n  tag_79\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9807:9946   */\ntag_202:\n    /* \"#utility.yul\":9591:9953   */\n  pop\n    /* \"#utility.yul\":9543:9953   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9959:10150   */\ntag_42:\n    /* \"#utility.yul\":9999:10002   */\n  0x00\n    /* \"#utility.yul\":10018:10038   */\n  tag_205\n    /* \"#utility.yul\":10036:10037   */\n  dup3\n    /* \"#utility.yul\":10018:10038   */\n  tag_54\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":10013:10038   */\n  swap2\n  pop\n    /* \"#utility.yul\":10052:10072   */\n  tag_206\n    /* \"#utility.yul\":10070:10071   */\n  dup4\n    /* \"#utility.yul\":10052:10072   */\n  tag_54\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10047:10072   */\n  swap3\n  pop\n    /* \"#utility.yul\":10095:10096   */\n  dup3\n    /* \"#utility.yul\":10092:10093   */\n  dup3\n    /* \"#utility.yul\":10088:10097   */\n  add\n    /* \"#utility.yul\":10081:10097   */\n  swap1\n  pop\n    /* \"#utility.yul\":10116:10119   */\n  dup1\n    /* \"#utility.yul\":10113:10114   */\n  dup3\n    /* \"#utility.yul\":10110:10120   */\n  gt\n    /* \"#utility.yul\":10107:10143   */\n  iszero\n  tag_207\n  jumpi\n    /* \"#utility.yul\":10123:10141   */\n  tag_208\n  tag_79\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10107:10143   */\ntag_207:\n    /* \"#utility.yul\":9959:10150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10156:10274   */\ntag_84:\n    /* \"#utility.yul\":10243:10267   */\n  tag_210\n    /* \"#utility.yul\":10261:10266   */\n  dup2\n    /* \"#utility.yul\":10243:10267   */\n  tag_54\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10238:10241   */\n  dup3\n    /* \"#utility.yul\":10231:10268   */\n  mstore\n    /* \"#utility.yul\":10156:10274   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10280:10722   */\ntag_46:\n    /* \"#utility.yul\":10429:10433   */\n  0x00\n    /* \"#utility.yul\":10467:10469   */\n  0x60\n    /* \"#utility.yul\":10456:10465   */\n  dup3\n    /* \"#utility.yul\":10452:10470   */\n  add\n    /* \"#utility.yul\":10444:10470   */\n  swap1\n  pop\n    /* \"#utility.yul\":10480:10551   */\n  tag_212\n    /* \"#utility.yul\":10548:10549   */\n  0x00\n    /* \"#utility.yul\":10537:10546   */\n  dup4\n    /* \"#utility.yul\":10533:10550   */\n  add\n    /* \"#utility.yul\":10524:10530   */\n  dup7\n    /* \"#utility.yul\":10480:10551   */\n  tag_78\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10561:10633   */\n  tag_213\n    /* \"#utility.yul\":10629:10631   */\n  0x20\n    /* \"#utility.yul\":10618:10627   */\n  dup4\n    /* \"#utility.yul\":10614:10632   */\n  add\n    /* \"#utility.yul\":10605:10611   */\n  dup6\n    /* \"#utility.yul\":10561:10633   */\n  tag_84\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":10643:10715   */\n  tag_214\n    /* \"#utility.yul\":10711:10713   */\n  0x40\n    /* \"#utility.yul\":10700:10709   */\n  dup4\n    /* \"#utility.yul\":10696:10714   */\n  add\n    /* \"#utility.yul\":10687:10693   */\n  dup5\n    /* \"#utility.yul\":10643:10715   */\n  tag_84\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10280:10722   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10728:10950   */\ntag_50:\n    /* \"#utility.yul\":10821:10825   */\n  0x00\n    /* \"#utility.yul\":10859:10861   */\n  0x20\n    /* \"#utility.yul\":10848:10857   */\n  dup3\n    /* \"#utility.yul\":10844:10862   */\n  add\n    /* \"#utility.yul\":10836:10862   */\n  swap1\n  pop\n    /* \"#utility.yul\":10872:10943   */\n  tag_216\n    /* \"#utility.yul\":10940:10941   */\n  0x00\n    /* \"#utility.yul\":10929:10938   */\n  dup4\n    /* \"#utility.yul\":10925:10942   */\n  add\n    /* \"#utility.yul\":10916:10922   */\n  dup5\n    /* \"#utility.yul\":10872:10943   */\n  tag_84\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":10728:10950   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TamboToken.sol\":289:3513  contract TamboToken is ERC20, Ownable, Pausable {... */\ntag_31:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TamboToken.sol\":289:3513  contract TamboToken is ERC20, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7547c7a3\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa6e158f8\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xa6e158f8\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbec3fa17\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x7547c7a3\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x81a4af15\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa5b39cfb\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x499d7f96\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x499d7f96\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x64ab8675\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6b69e05b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TamboToken.sol\":2007:2074  function unpause() external onlyOwner {... */\n    tag_8:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/TamboToken.sol\":482:531  mapping(address => uint256) public stakingRewards */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_10:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TamboToken.sol\":3022:3193  function calculateRewards(address staker) public view returns (uint256) {... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TamboToken.sol\":2611:2945  function claimStakingRewards() external whenNotPaused {... */\n    tag_12:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/TamboToken.sol\":2153:2548  function stakeTokens(uint256 amount) external whenNotPaused {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/TamboToken.sol\":997:1377  function rewardTokens(address recipient, uint256 amount) external onlyOwner whenNotPaused {... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/TamboToken.sol\":1856:1919  function pause() external onlyOwner {... */\n    tag_17:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TamboToken.sol\":407:454  mapping(address => uint256) public stakedTokens */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TamboToken.sol\":1434:1560  function redeemTokens(uint256 amount) external whenNotPaused {... */\n    tag_21:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_22:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TamboToken.sol\":1623:1772  function transferTokens(address recipient, uint256 amount) external whenNotPaused {... */\n    tag_23:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/TamboToken.sol\":344:368  uint256 public maxSupply */\n    tag_24:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_118\n      jump\t// in\n    tag_119:\n      dup1\n      iszero\n      tag_120\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_121\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_120)\n    tag_121:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_122:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_122\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":2007:2074  function unpause() external onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/TamboToken.sol\":2056:2066  _unpause() */\n      tag_140\n        /* \"contracts/TamboToken.sol\":2056:2064  _unpause */\n      tag_141\n        /* \"contracts/TamboToken.sol\":2056:2066  _unpause() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/TamboToken.sol\":2007:2074  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":482:531  mapping(address => uint256) public stakingRewards */\n    tag_58:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":3022:3193  function calculateRewards(address staker) public view returns (uint256) {... */\n    tag_65:\n        /* \"contracts/TamboToken.sol\":3085:3092  uint256 */\n      0x00\n        /* \"contracts/TamboToken.sol\":3135:3137  10 */\n      0x0a\n        /* \"contracts/TamboToken.sol\":3112:3124  stakedTokens */\n      0x07\n        /* \"contracts/TamboToken.sol\":3112:3132  stakedTokens[staker] */\n      0x00\n        /* \"contracts/TamboToken.sol\":3125:3131  staker */\n      dup5\n        /* \"contracts/TamboToken.sol\":3112:3132  stakedTokens[staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/TamboToken.sol\":3112:3137  stakedTokens[staker] / 10 */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"contracts/TamboToken.sol\":3105:3137  return stakedTokens[staker] / 10 */\n      swap1\n      pop\n        /* \"contracts/TamboToken.sol\":3022:3193  function calculateRewards(address staker) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":2611:2945  function claimStakingRewards() external whenNotPaused {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_147\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_148\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/TamboToken.sol\":2676:2691  uint256 rewards */\n      0x00\n        /* \"contracts/TamboToken.sol\":2694:2722  calculateRewards(msg.sender) */\n      tag_150\n        /* \"contracts/TamboToken.sol\":2711:2721  msg.sender */\n      caller\n        /* \"contracts/TamboToken.sol\":2694:2710  calculateRewards */\n      tag_65\n        /* \"contracts/TamboToken.sol\":2694:2722  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/TamboToken.sol\":2676:2722  uint256 rewards = calculateRewards(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/TamboToken.sol\":2751:2752  0 */\n      0x00\n        /* \"contracts/TamboToken.sol\":2741:2748  rewards */\n      dup2\n        /* \"contracts/TamboToken.sol\":2741:2752  rewards > 0 */\n      gt\n        /* \"contracts/TamboToken.sol\":2733:2790  require(rewards > 0, \"No tienes recompensas pendientes.\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/TamboToken.sol\":2830:2831  0 */\n      0x00\n        /* \"contracts/TamboToken.sol\":2801:2815  stakingRewards */\n      0x08\n        /* \"contracts/TamboToken.sol\":2801:2827  stakingRewards[msg.sender] */\n      0x00\n        /* \"contracts/TamboToken.sol\":2816:2826  msg.sender */\n      caller\n        /* \"contracts/TamboToken.sol\":2801:2827  stakingRewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TamboToken.sol\":2801:2831  stakingRewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TamboToken.sol\":2872:2898  _mint(msg.sender, rewards) */\n      tag_154\n        /* \"contracts/TamboToken.sol\":2878:2888  msg.sender */\n      caller\n        /* \"contracts/TamboToken.sol\":2890:2897  rewards */\n      dup3\n        /* \"contracts/TamboToken.sol\":2872:2877  _mint */\n      tag_155\n        /* \"contracts/TamboToken.sol\":2872:2898  _mint(msg.sender, rewards) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/TamboToken.sol\":2665:2945  {... */\n      pop\n        /* \"contracts/TamboToken.sol\":2611:2945  function claimStakingRewards() external whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":2153:2548  function stakeTokens(uint256 amount) external whenNotPaused {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_163\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_148\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/TamboToken.sol\":2273:2283  decimals() */\n      tag_165\n        /* \"contracts/TamboToken.sol\":2273:2281  decimals */\n      tag_50\n        /* \"contracts/TamboToken.sol\":2273:2283  decimals() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/TamboToken.sol\":2267:2269  10 */\n      0x0a\n        /* \"contracts/TamboToken.sol\":2267:2283  10 ** decimals() */\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"contracts/TamboToken.sol\":2257:2263  amount */\n      dup2\n        /* \"contracts/TamboToken.sol\":2257:2284  amount * (10 ** decimals()) */\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"contracts/TamboToken.sol\":2232:2253  balanceOf(msg.sender) */\n      tag_170\n        /* \"contracts/TamboToken.sol\":2242:2252  msg.sender */\n      caller\n        /* \"contracts/TamboToken.sol\":2232:2241  balanceOf */\n      tag_71\n        /* \"contracts/TamboToken.sol\":2232:2253  balanceOf(msg.sender) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/TamboToken.sol\":2232:2284  balanceOf(msg.sender) >= amount * (10 ** decimals()) */\n      lt\n      iszero\n        /* \"contracts/TamboToken.sol\":2224:2337  require(balanceOf(msg.sender) >= amount * (10 ** decimals()), \"No tienes suficientes tokens para hacer staking.\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/TamboToken.sol\":2348:2394  _burn(msg.sender, amount * (10 ** decimals())) */\n      tag_174\n        /* \"contracts/TamboToken.sol\":2354:2364  msg.sender */\n      caller\n        /* \"contracts/TamboToken.sol\":2382:2392  decimals() */\n      tag_175\n        /* \"contracts/TamboToken.sol\":2382:2390  decimals */\n      tag_50\n        /* \"contracts/TamboToken.sol\":2382:2392  decimals() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/TamboToken.sol\":2376:2378  10 */\n      0x0a\n        /* \"contracts/TamboToken.sol\":2376:2392  10 ** decimals() */\n      tag_176\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_176:\n        /* \"contracts/TamboToken.sol\":2366:2372  amount */\n      dup4\n        /* \"contracts/TamboToken.sol\":2366:2393  amount * (10 ** decimals()) */\n      tag_177\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_177:\n        /* \"contracts/TamboToken.sol\":2348:2353  _burn */\n      tag_178\n        /* \"contracts/TamboToken.sol\":2348:2394  _burn(msg.sender, amount * (10 ** decimals())) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/TamboToken.sol\":2491:2501  decimals() */\n      tag_179\n        /* \"contracts/TamboToken.sol\":2491:2499  decimals */\n      tag_50\n        /* \"contracts/TamboToken.sol\":2491:2501  decimals() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/TamboToken.sol\":2485:2487  10 */\n      0x0a\n        /* \"contracts/TamboToken.sol\":2485:2501  10 ** decimals() */\n      tag_180\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_180:\n        /* \"contracts/TamboToken.sol\":2475:2481  amount */\n      dup2\n        /* \"contracts/TamboToken.sol\":2475:2502  amount * (10 ** decimals()) */\n      tag_181\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_181:\n        /* \"contracts/TamboToken.sol\":2447:2459  stakedTokens */\n      0x07\n        /* \"contracts/TamboToken.sol\":2447:2471  stakedTokens[msg.sender] */\n      0x00\n        /* \"contracts/TamboToken.sol\":2460:2470  msg.sender */\n      caller\n        /* \"contracts/TamboToken.sol\":2447:2471  stakedTokens[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TamboToken.sol\":2447:2502  stakedTokens[msg.sender] += amount * (10 ** decimals()) */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TamboToken.sol\":2153:2548  function stakeTokens(uint256 amount) external whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":997:1377  function rewardTokens(address recipient, uint256 amount) external onlyOwner whenNotPaused {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_187\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_148\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/TamboToken.sol\":1098:1124  uint256 amountWithDecimals */\n      0x00\n        /* \"contracts/TamboToken.sol\":1143:1153  decimals() */\n      tag_189\n        /* \"contracts/TamboToken.sol\":1143:1151  decimals */\n      tag_50\n        /* \"contracts/TamboToken.sol\":1143:1153  decimals() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/TamboToken.sol\":1137:1139  10 */\n      0x0a\n        /* \"contracts/TamboToken.sol\":1137:1153  10 ** decimals() */\n      tag_190\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_190:\n        /* \"contracts/TamboToken.sol\":1127:1133  amount */\n      dup3\n        /* \"contracts/TamboToken.sol\":1127:1154  amount * (10 ** decimals()) */\n      tag_191\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_191:\n        /* \"contracts/TamboToken.sol\":1098:1154  uint256 amountWithDecimals = amount * (10 ** decimals()) */\n      swap1\n      pop\n        /* \"contracts/TamboToken.sol\":1211:1220  maxSupply */\n      sload(0x06)\n        /* \"contracts/TamboToken.sol\":1189:1207  amountWithDecimals */\n      dup2\n        /* \"contracts/TamboToken.sol\":1173:1186  totalSupply() */\n      tag_192\n        /* \"contracts/TamboToken.sol\":1173:1184  totalSupply */\n      tag_41\n        /* \"contracts/TamboToken.sol\":1173:1186  totalSupply() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/TamboToken.sol\":1173:1207  totalSupply() + amountWithDecimals */\n      tag_193\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_193:\n        /* \"contracts/TamboToken.sol\":1173:1220  totalSupply() + amountWithDecimals <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/TamboToken.sol\":1165:1278  require(totalSupply() + amountWithDecimals <= maxSupply, \"No se pueden acuniar mas tokens, se excede el maximo.\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contracts/TamboToken.sol\":1289:1325  _mint(recipient, amountWithDecimals) */\n      tag_197\n        /* \"contracts/TamboToken.sol\":1295:1304  recipient */\n      dup4\n        /* \"contracts/TamboToken.sol\":1306:1324  amountWithDecimals */\n      dup3\n        /* \"contracts/TamboToken.sol\":1289:1294  _mint */\n      tag_155\n        /* \"contracts/TamboToken.sol\":1289:1325  _mint(recipient, amountWithDecimals) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/TamboToken.sol\":1087:1377  {... */\n      pop\n        /* \"contracts/TamboToken.sol\":997:1377  function rewardTokens(address recipient, uint256 amount) external onlyOwner whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":1856:1919  function pause() external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/TamboToken.sol\":1903:1911  _pause() */\n      tag_201\n        /* \"contracts/TamboToken.sol\":1903:1909  _pause */\n      tag_202\n        /* \"contracts/TamboToken.sol\":1903:1911  _pause() */\n      jump\t// in\n    tag_201:\n        /* \"contracts/TamboToken.sol\":1856:1919  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_205\n      swap1\n      tag_118\n      jump\t// in\n    tag_205:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_206\n      swap1\n      tag_118\n      jump\t// in\n    tag_206:\n      dup1\n      iszero\n      tag_207\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_208\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_207)\n    tag_208:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_209:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_209\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":407:454  mapping(address => uint256) public stakedTokens */\n    tag_93:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":1434:1560  function redeemTokens(uint256 amount) external whenNotPaused {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_211\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_148\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/TamboToken.sol\":1506:1552  _burn(msg.sender, amount * (10 ** decimals())) */\n      tag_213\n        /* \"contracts/TamboToken.sol\":1512:1522  msg.sender */\n      caller\n        /* \"contracts/TamboToken.sol\":1540:1550  decimals() */\n      tag_214\n        /* \"contracts/TamboToken.sol\":1540:1548  decimals */\n      tag_50\n        /* \"contracts/TamboToken.sol\":1540:1550  decimals() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/TamboToken.sol\":1534:1536  10 */\n      0x0a\n        /* \"contracts/TamboToken.sol\":1534:1550  10 ** decimals() */\n      tag_215\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_215:\n        /* \"contracts/TamboToken.sol\":1524:1530  amount */\n      dup4\n        /* \"contracts/TamboToken.sol\":1524:1551  amount * (10 ** decimals()) */\n      tag_216\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_216:\n        /* \"contracts/TamboToken.sol\":1506:1511  _burn */\n      tag_178\n        /* \"contracts/TamboToken.sol\":1506:1552  _burn(msg.sender, amount * (10 ** decimals())) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/TamboToken.sol\":1434:1560  function redeemTokens(uint256 amount) external whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":1623:1772  function transferTokens(address recipient, uint256 amount) external whenNotPaused {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_221\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_148\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/TamboToken.sol\":1716:1764  transfer(recipient, amount * (10 ** decimals())) */\n      tag_223\n        /* \"contracts/TamboToken.sol\":1725:1734  recipient */\n      dup3\n        /* \"contracts/TamboToken.sol\":1752:1762  decimals() */\n      tag_224\n        /* \"contracts/TamboToken.sol\":1752:1760  decimals */\n      tag_50\n        /* \"contracts/TamboToken.sol\":1752:1762  decimals() */\n      jump\t// in\n    tag_224:\n        /* \"contracts/TamboToken.sol\":1746:1748  10 */\n      0x0a\n        /* \"contracts/TamboToken.sol\":1746:1762  10 ** decimals() */\n      tag_225\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_225:\n        /* \"contracts/TamboToken.sol\":1736:1742  amount */\n      dup4\n        /* \"contracts/TamboToken.sol\":1736:1763  amount * (10 ** decimals()) */\n      tag_226\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_226:\n        /* \"contracts/TamboToken.sol\":1716:1724  transfer */\n      tag_100\n        /* \"contracts/TamboToken.sol\":1716:1764  transfer(recipient, amount * (10 ** decimals())) */\n      jump\t// in\n    tag_223:\n      pop\n        /* \"contracts/TamboToken.sol\":1623:1772  function transferTokens(address recipient, uint256 amount) external whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TamboToken.sol\":344:368  uint256 public maxSupply */\n    tag_106:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_259\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_260\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_262\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_125\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_263\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_265\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_61\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_279\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_148\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_281\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_125\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_282\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_292\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_292:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_293)\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_297)\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_298\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_300\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_61\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_304:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_305:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_306:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_307:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_308:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_347\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_304\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":711:782   */\n      tag_348\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_305\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_349\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_306\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":881:910   */\n      tag_350\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_307\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_33:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_352\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_308\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_310:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_312:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_313:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_358\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_312\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_314:\n        /* \"#utility.yul\":1876:1900   */\n      tag_360\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_313\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_361:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_315:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_363\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_314\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_316:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_317:\n        /* \"#utility.yul\":2232:2256   */\n      tag_366\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_316\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_367:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_318:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_369\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_317\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_36:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_372\n      tag_310\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2525:2644   */\n    tag_371:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_373\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_315\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_374\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_318\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_319:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_320:\n        /* \"#utility.yul\":3089:3110   */\n      tag_377\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_319\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_39:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_379\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_320\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_321:\n        /* \"#utility.yul\":3426:3450   */\n      tag_381\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_316\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_43:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_383\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_321\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_46:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_386\n      tag_310\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3801:3920   */\n    tag_385:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_387\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_315\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_388\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_315\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_389\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_318\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_322:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_323:\n        /* \"#utility.yul\":4491:4513   */\n      tag_392\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_322\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_52:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_394\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_323\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_57:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_397\n      tag_310\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4822:4941   */\n    tag_396:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_398\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_315\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_77:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_401\n      tag_310\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5157:5276   */\n    tag_400:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_402\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_318\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_324:\n        /* \"#utility.yul\":5503:5527   */\n      tag_404\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_313\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_87:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_406\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_324\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_110:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_409\n      tag_310\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5861:5980   */\n    tag_408:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_410\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_315\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_411\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_315\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_325:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_118:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_414:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_416\n      tag_325\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6664:6748   */\n    tag_415:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6940   */\n    tag_326:\n        /* \"#utility.yul\":6808:6885   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6805:6806   */\n      0x00\n        /* \"#utility.yul\":6798:6886   */\n      mstore\n        /* \"#utility.yul\":6905:6909   */\n      0x12\n        /* \"#utility.yul\":6902:6903   */\n      0x04\n        /* \"#utility.yul\":6895:6910   */\n      mstore\n        /* \"#utility.yul\":6929:6933   */\n      0x24\n        /* \"#utility.yul\":6926:6927   */\n      0x00\n        /* \"#utility.yul\":6919:6934   */\n      revert\n        /* \"#utility.yul\":6946:7126   */\n    tag_327:\n        /* \"#utility.yul\":6994:7071   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6991:6992   */\n      0x00\n        /* \"#utility.yul\":6984:7072   */\n      mstore\n        /* \"#utility.yul\":7091:7095   */\n      0x11\n        /* \"#utility.yul\":7088:7089   */\n      0x04\n        /* \"#utility.yul\":7081:7096   */\n      mstore\n        /* \"#utility.yul\":7115:7119   */\n      0x24\n        /* \"#utility.yul\":7112:7113   */\n      0x00\n        /* \"#utility.yul\":7105:7120   */\n      revert\n        /* \"#utility.yul\":7132:7317   */\n    tag_145:\n        /* \"#utility.yul\":7172:7173   */\n      0x00\n        /* \"#utility.yul\":7189:7209   */\n      tag_420\n        /* \"#utility.yul\":7207:7208   */\n      dup3\n        /* \"#utility.yul\":7189:7209   */\n      tag_316\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":7184:7209   */\n      swap2\n      pop\n        /* \"#utility.yul\":7223:7243   */\n      tag_421\n        /* \"#utility.yul\":7241:7242   */\n      dup4\n        /* \"#utility.yul\":7223:7243   */\n      tag_316\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7218:7243   */\n      swap3\n      pop\n        /* \"#utility.yul\":7262:7263   */\n      dup3\n        /* \"#utility.yul\":7252:7287   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":7267:7285   */\n      tag_423\n      tag_326\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7252:7287   */\n    tag_422:\n        /* \"#utility.yul\":7309:7310   */\n      dup3\n        /* \"#utility.yul\":7306:7307   */\n      dup3\n        /* \"#utility.yul\":7302:7311   */\n      div\n        /* \"#utility.yul\":7297:7311   */\n      swap1\n      pop\n        /* \"#utility.yul\":7132:7317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7323:7543   */\n    tag_328:\n        /* \"#utility.yul\":7463:7497   */\n      0x4e6f207469656e6573207265636f6d70656e7361732070656e6469656e746573\n        /* \"#utility.yul\":7459:7460   */\n      0x00\n        /* \"#utility.yul\":7451:7457   */\n      dup3\n        /* \"#utility.yul\":7447:7461   */\n      add\n        /* \"#utility.yul\":7440:7498   */\n      mstore\n        /* \"#utility.yul\":7532:7535   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7527:7529   */\n      0x20\n        /* \"#utility.yul\":7519:7525   */\n      dup3\n        /* \"#utility.yul\":7515:7530   */\n      add\n        /* \"#utility.yul\":7508:7536   */\n      mstore\n        /* \"#utility.yul\":7323:7543   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7915   */\n    tag_329:\n        /* \"#utility.yul\":7691:7694   */\n      0x00\n        /* \"#utility.yul\":7712:7779   */\n      tag_426\n        /* \"#utility.yul\":7776:7778   */\n      0x21\n        /* \"#utility.yul\":7771:7774   */\n      dup4\n        /* \"#utility.yul\":7712:7779   */\n      tag_305\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7705:7779   */\n      swap2\n      pop\n        /* \"#utility.yul\":7788:7881   */\n      tag_427\n        /* \"#utility.yul\":7877:7880   */\n      dup3\n        /* \"#utility.yul\":7788:7881   */\n      tag_328\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7906:7908   */\n      0x40\n        /* \"#utility.yul\":7901:7904   */\n      dup3\n        /* \"#utility.yul\":7897:7909   */\n      add\n        /* \"#utility.yul\":7890:7909   */\n      swap1\n      pop\n        /* \"#utility.yul\":7549:7915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7921:8340   */\n    tag_153:\n        /* \"#utility.yul\":8087:8091   */\n      0x00\n        /* \"#utility.yul\":8125:8127   */\n      0x20\n        /* \"#utility.yul\":8114:8123   */\n      dup3\n        /* \"#utility.yul\":8110:8128   */\n      add\n        /* \"#utility.yul\":8102:8128   */\n      swap1\n      pop\n        /* \"#utility.yul\":8174:8183   */\n      dup2\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8164:8184   */\n      sub\n        /* \"#utility.yul\":8160:8161   */\n      0x00\n        /* \"#utility.yul\":8149:8158   */\n      dup4\n        /* \"#utility.yul\":8145:8162   */\n      add\n        /* \"#utility.yul\":8138:8185   */\n      mstore\n        /* \"#utility.yul\":8202:8333   */\n      tag_429\n        /* \"#utility.yul\":8328:8332   */\n      dup2\n        /* \"#utility.yul\":8202:8333   */\n      tag_329\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":8194:8333   */\n      swap1\n      pop\n        /* \"#utility.yul\":7921:8340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8346:8448   */\n    tag_330:\n        /* \"#utility.yul\":8388:8396   */\n      0x00\n        /* \"#utility.yul\":8435:8440   */\n      dup2\n        /* \"#utility.yul\":8432:8433   */\n      0x01\n        /* \"#utility.yul\":8428:8441   */\n      shr\n        /* \"#utility.yul\":8407:8441   */\n      swap1\n      pop\n        /* \"#utility.yul\":8346:8448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8454:9302   */\n    tag_331:\n        /* \"#utility.yul\":8515:8520   */\n      0x00\n        /* \"#utility.yul\":8522:8526   */\n      dup1\n        /* \"#utility.yul\":8546:8552   */\n      dup3\n        /* \"#utility.yul\":8537:8552   */\n      swap2\n      pop\n        /* \"#utility.yul\":8570:8575   */\n      dup4\n        /* \"#utility.yul\":8561:8575   */\n      swap1\n      pop\n        /* \"#utility.yul\":8584:9296   */\n    tag_432:\n        /* \"#utility.yul\":8605:8606   */\n      0x01\n        /* \"#utility.yul\":8595:8603   */\n      dup6\n        /* \"#utility.yul\":8592:8607   */\n      gt\n        /* \"#utility.yul\":8584:9296   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":8700:8704   */\n      dup1\n        /* \"#utility.yul\":8695:8698   */\n      dup7\n        /* \"#utility.yul\":8691:8705   */\n      div\n        /* \"#utility.yul\":8685:8689   */\n      dup2\n        /* \"#utility.yul\":8682:8706   */\n      gt\n        /* \"#utility.yul\":8679:8729   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":8709:8727   */\n      tag_436\n      tag_327\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8679:8729   */\n    tag_435:\n        /* \"#utility.yul\":8759:8760   */\n      0x01\n        /* \"#utility.yul\":8749:8757   */\n      dup6\n        /* \"#utility.yul\":8745:8761   */\n      and\n        /* \"#utility.yul\":8742:9193   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":9174:9178   */\n      dup1\n        /* \"#utility.yul\":9167:9172   */\n      dup3\n        /* \"#utility.yul\":9163:9179   */\n      mul\n        /* \"#utility.yul\":9154:9179   */\n      swap2\n      pop\n        /* \"#utility.yul\":8742:9193   */\n    tag_437:\n        /* \"#utility.yul\":9224:9228   */\n      dup1\n        /* \"#utility.yul\":9218:9222   */\n      dup2\n        /* \"#utility.yul\":9214:9229   */\n      mul\n        /* \"#utility.yul\":9206:9229   */\n      swap1\n      pop\n        /* \"#utility.yul\":9254:9286   */\n      tag_438\n        /* \"#utility.yul\":9277:9285   */\n      dup6\n        /* \"#utility.yul\":9254:9286   */\n      tag_330\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9242:9286   */\n      swap5\n      pop\n        /* \"#utility.yul\":8584:9296   */\n      jump(tag_432)\n    tag_434:\n        /* \"#utility.yul\":8454:9302   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9308:10381   */\n    tag_332:\n        /* \"#utility.yul\":9362:9367   */\n      0x00\n        /* \"#utility.yul\":9553:9561   */\n      dup3\n        /* \"#utility.yul\":9543:9583   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":9574:9575   */\n      0x01\n        /* \"#utility.yul\":9565:9575   */\n      swap1\n      pop\n        /* \"#utility.yul\":9576:9581   */\n      jump(tag_439)\n        /* \"#utility.yul\":9543:9583   */\n    tag_440:\n        /* \"#utility.yul\":9602:9606   */\n      dup2\n        /* \"#utility.yul\":9592:9628   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":9619:9620   */\n      0x00\n        /* \"#utility.yul\":9610:9620   */\n      swap1\n      pop\n        /* \"#utility.yul\":9621:9626   */\n      jump(tag_439)\n        /* \"#utility.yul\":9592:9628   */\n    tag_441:\n        /* \"#utility.yul\":9688:9692   */\n      dup2\n        /* \"#utility.yul\":9736:9737   */\n      0x01\n        /* \"#utility.yul\":9731:9758   */\n      dup2\n      eq\n      tag_443\n      jumpi\n        /* \"#utility.yul\":9772:9773   */\n      0x02\n        /* \"#utility.yul\":9767:9958   */\n      dup2\n      eq\n      tag_444\n      jumpi\n        /* \"#utility.yul\":9681:9958   */\n      jump(tag_442)\n        /* \"#utility.yul\":9731:9758   */\n    tag_443:\n        /* \"#utility.yul\":9749:9750   */\n      0x01\n        /* \"#utility.yul\":9740:9750   */\n      swap2\n      pop\n        /* \"#utility.yul\":9751:9756   */\n      pop\n      jump(tag_439)\n        /* \"#utility.yul\":9767:9958   */\n    tag_444:\n        /* \"#utility.yul\":9812:9815   */\n      0xff\n        /* \"#utility.yul\":9802:9810   */\n      dup5\n        /* \"#utility.yul\":9799:9816   */\n      gt\n        /* \"#utility.yul\":9796:9839   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":9819:9837   */\n      tag_446\n      tag_327\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":9796:9839   */\n    tag_445:\n        /* \"#utility.yul\":9868:9876   */\n      dup4\n        /* \"#utility.yul\":9865:9866   */\n      0x02\n        /* \"#utility.yul\":9861:9877   */\n      exp\n        /* \"#utility.yul\":9852:9877   */\n      swap2\n      pop\n        /* \"#utility.yul\":9903:9906   */\n      dup5\n        /* \"#utility.yul\":9896:9901   */\n      dup3\n        /* \"#utility.yul\":9893:9907   */\n      gt\n        /* \"#utility.yul\":9890:9930   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":9910:9928   */\n      tag_448\n      tag_327\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9890:9930   */\n    tag_447:\n        /* \"#utility.yul\":9943:9948   */\n      pop\n      jump(tag_439)\n        /* \"#utility.yul\":9681:9958   */\n    tag_442:\n      pop\n        /* \"#utility.yul\":10067:10069   */\n      0x20\n        /* \"#utility.yul\":10057:10065   */\n      dup4\n        /* \"#utility.yul\":10054:10070   */\n      lt\n        /* \"#utility.yul\":10048:10051   */\n      0x0133\n        /* \"#utility.yul\":10042:10046   */\n      dup4\n        /* \"#utility.yul\":10039:10052   */\n      lt\n        /* \"#utility.yul\":10035:10071   */\n      and\n        /* \"#utility.yul\":10017:10019   */\n      0x4e\n        /* \"#utility.yul\":10007:10015   */\n      dup5\n        /* \"#utility.yul\":10004:10020   */\n      lt\n        /* \"#utility.yul\":9999:10001   */\n      0x0b\n        /* \"#utility.yul\":9993:9997   */\n      dup5\n        /* \"#utility.yul\":9990:10002   */\n      lt\n        /* \"#utility.yul\":9986:10021   */\n      and\n        /* \"#utility.yul\":9970:10081   */\n      or\n        /* \"#utility.yul\":9967:10213   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":10123:10131   */\n      dup3\n        /* \"#utility.yul\":10117:10121   */\n      dup3\n        /* \"#utility.yul\":10113:10132   */\n      exp\n        /* \"#utility.yul\":10104:10132   */\n      swap1\n      pop\n        /* \"#utility.yul\":10158:10161   */\n      dup4\n        /* \"#utility.yul\":10151:10156   */\n      dup2\n        /* \"#utility.yul\":10148:10162   */\n      gt\n        /* \"#utility.yul\":10145:10185   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":10165:10183   */\n      tag_451\n      tag_327\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":10145:10185   */\n    tag_450:\n        /* \"#utility.yul\":10198:10203   */\n      jump(tag_439)\n        /* \"#utility.yul\":9967:10213   */\n    tag_449:\n        /* \"#utility.yul\":10238:10280   */\n      tag_452\n        /* \"#utility.yul\":10276:10279   */\n      dup5\n        /* \"#utility.yul\":10266:10274   */\n      dup5\n        /* \"#utility.yul\":10260:10264   */\n      dup5\n        /* \"#utility.yul\":10257:10258   */\n      0x01\n        /* \"#utility.yul\":10238:10280   */\n      tag_331\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":10223:10280   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":10312:10316   */\n      dup2\n        /* \"#utility.yul\":10307:10310   */\n      dup5\n        /* \"#utility.yul\":10303:10317   */\n      div\n        /* \"#utility.yul\":10296:10301   */\n      dup2\n        /* \"#utility.yul\":10293:10318   */\n      gt\n        /* \"#utility.yul\":10290:10341   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":10321:10339   */\n      tag_454\n      tag_327\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":10290:10341   */\n    tag_453:\n        /* \"#utility.yul\":10370:10374   */\n      dup2\n        /* \"#utility.yul\":10363:10368   */\n      dup2\n        /* \"#utility.yul\":10359:10375   */\n      mul\n        /* \"#utility.yul\":10350:10375   */\n      swap1\n      pop\n        /* \"#utility.yul\":9308:10381   */\n    tag_439:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10387:10668   */\n    tag_167:\n        /* \"#utility.yul\":10445:10450   */\n      0x00\n        /* \"#utility.yul\":10469:10492   */\n      tag_456\n        /* \"#utility.yul\":10487:10491   */\n      dup3\n        /* \"#utility.yul\":10469:10492   */\n      tag_316\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":10461:10492   */\n      swap2\n      pop\n        /* \"#utility.yul\":10513:10538   */\n      tag_457\n        /* \"#utility.yul\":10529:10537   */\n      dup4\n        /* \"#utility.yul\":10513:10538   */\n      tag_322\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":10501:10538   */\n      swap3\n      pop\n        /* \"#utility.yul\":10557:10661   */\n      tag_458\n        /* \"#utility.yul\":10594:10660   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10584:10592   */\n      dup5\n        /* \"#utility.yul\":10578:10582   */\n      dup5\n        /* \"#utility.yul\":10557:10661   */\n      tag_332\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10548:10661   */\n      swap1\n      pop\n        /* \"#utility.yul\":10387:10668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10674:11084   */\n    tag_169:\n        /* \"#utility.yul\":10714:10721   */\n      0x00\n        /* \"#utility.yul\":10737:10757   */\n      tag_460\n        /* \"#utility.yul\":10755:10756   */\n      dup3\n        /* \"#utility.yul\":10737:10757   */\n      tag_316\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":10732:10757   */\n      swap2\n      pop\n        /* \"#utility.yul\":10771:10791   */\n      tag_461\n        /* \"#utility.yul\":10789:10790   */\n      dup4\n        /* \"#utility.yul\":10771:10791   */\n      tag_316\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10766:10791   */\n      swap3\n      pop\n        /* \"#utility.yul\":10826:10827   */\n      dup3\n        /* \"#utility.yul\":10823:10824   */\n      dup3\n        /* \"#utility.yul\":10819:10828   */\n      mul\n        /* \"#utility.yul\":10848:10878   */\n      tag_462\n        /* \"#utility.yul\":10866:10877   */\n      dup2\n        /* \"#utility.yul\":10848:10878   */\n      tag_316\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10837:10878   */\n      swap2\n      pop\n        /* \"#utility.yul\":11027:11028   */\n      dup3\n        /* \"#utility.yul\":11018:11025   */\n      dup3\n        /* \"#utility.yul\":11014:11029   */\n      div\n        /* \"#utility.yul\":11011:11012   */\n      dup5\n        /* \"#utility.yul\":11008:11030   */\n      eq\n        /* \"#utility.yul\":10988:10989   */\n      dup4\n        /* \"#utility.yul\":10981:10990   */\n      iszero\n        /* \"#utility.yul\":10961:11044   */\n      or\n        /* \"#utility.yul\":10938:11077   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":11057:11075   */\n      tag_464\n      tag_327\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10938:11077   */\n    tag_463:\n        /* \"#utility.yul\":10722:11084   */\n      pop\n        /* \"#utility.yul\":10674:11084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11090:11325   */\n    tag_333:\n        /* \"#utility.yul\":11230:11264   */\n      0x4e6f207469656e657320737566696369656e74657320746f6b656e7320706172\n        /* \"#utility.yul\":11226:11227   */\n      0x00\n        /* \"#utility.yul\":11218:11224   */\n      dup3\n        /* \"#utility.yul\":11214:11228   */\n      add\n        /* \"#utility.yul\":11207:11265   */\n      mstore\n        /* \"#utility.yul\":11299:11317   */\n      0x61206861636572207374616b696e672e00000000000000000000000000000000\n        /* \"#utility.yul\":11294:11296   */\n      0x20\n        /* \"#utility.yul\":11286:11292   */\n      dup3\n        /* \"#utility.yul\":11282:11297   */\n      add\n        /* \"#utility.yul\":11275:11318   */\n      mstore\n        /* \"#utility.yul\":11090:11325   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11331:11697   */\n    tag_334:\n        /* \"#utility.yul\":11473:11476   */\n      0x00\n        /* \"#utility.yul\":11494:11561   */\n      tag_467\n        /* \"#utility.yul\":11558:11560   */\n      0x30\n        /* \"#utility.yul\":11553:11556   */\n      dup4\n        /* \"#utility.yul\":11494:11561   */\n      tag_305\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":11487:11561   */\n      swap2\n      pop\n        /* \"#utility.yul\":11570:11663   */\n      tag_468\n        /* \"#utility.yul\":11659:11662   */\n      dup3\n        /* \"#utility.yul\":11570:11663   */\n      tag_333\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":11688:11690   */\n      0x40\n        /* \"#utility.yul\":11683:11686   */\n      dup3\n        /* \"#utility.yul\":11679:11691   */\n      add\n        /* \"#utility.yul\":11672:11691   */\n      swap1\n      pop\n        /* \"#utility.yul\":11331:11697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11703:12122   */\n    tag_173:\n        /* \"#utility.yul\":11869:11873   */\n      0x00\n        /* \"#utility.yul\":11907:11909   */\n      0x20\n        /* \"#utility.yul\":11896:11905   */\n      dup3\n        /* \"#utility.yul\":11892:11910   */\n      add\n        /* \"#utility.yul\":11884:11910   */\n      swap1\n      pop\n        /* \"#utility.yul\":11956:11965   */\n      dup2\n        /* \"#utility.yul\":11950:11954   */\n      dup2\n        /* \"#utility.yul\":11946:11966   */\n      sub\n        /* \"#utility.yul\":11942:11943   */\n      0x00\n        /* \"#utility.yul\":11931:11940   */\n      dup4\n        /* \"#utility.yul\":11927:11944   */\n      add\n        /* \"#utility.yul\":11920:11967   */\n      mstore\n        /* \"#utility.yul\":11984:12115   */\n      tag_470\n        /* \"#utility.yul\":12110:12114   */\n      dup2\n        /* \"#utility.yul\":11984:12115   */\n      tag_334\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11976:12115   */\n      swap1\n      pop\n        /* \"#utility.yul\":11703:12122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12128:12319   */\n    tag_183:\n        /* \"#utility.yul\":12168:12171   */\n      0x00\n        /* \"#utility.yul\":12187:12207   */\n      tag_472\n        /* \"#utility.yul\":12205:12206   */\n      dup3\n        /* \"#utility.yul\":12187:12207   */\n      tag_316\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":12182:12207   */\n      swap2\n      pop\n        /* \"#utility.yul\":12221:12241   */\n      tag_473\n        /* \"#utility.yul\":12239:12240   */\n      dup4\n        /* \"#utility.yul\":12221:12241   */\n      tag_316\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":12216:12241   */\n      swap3\n      pop\n        /* \"#utility.yul\":12264:12265   */\n      dup3\n        /* \"#utility.yul\":12261:12262   */\n      dup3\n        /* \"#utility.yul\":12257:12266   */\n      add\n        /* \"#utility.yul\":12250:12266   */\n      swap1\n      pop\n        /* \"#utility.yul\":12285:12288   */\n      dup1\n        /* \"#utility.yul\":12282:12283   */\n      dup3\n        /* \"#utility.yul\":12279:12289   */\n      gt\n        /* \"#utility.yul\":12276:12312   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":12292:12310   */\n      tag_475\n      tag_327\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":12276:12312   */\n    tag_474:\n        /* \"#utility.yul\":12128:12319   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12325:12565   */\n    tag_335:\n        /* \"#utility.yul\":12465:12499   */\n      0x4e6f2073652070756564656e206163756e696172206d617320746f6b656e732c\n        /* \"#utility.yul\":12461:12462   */\n      0x00\n        /* \"#utility.yul\":12453:12459   */\n      dup3\n        /* \"#utility.yul\":12449:12463   */\n      add\n        /* \"#utility.yul\":12442:12500   */\n      mstore\n        /* \"#utility.yul\":12534:12557   */\n      0x2073652065786365646520656c206d6178696d6f2e0000000000000000000000\n        /* \"#utility.yul\":12529:12531   */\n      0x20\n        /* \"#utility.yul\":12521:12527   */\n      dup3\n        /* \"#utility.yul\":12517:12532   */\n      add\n        /* \"#utility.yul\":12510:12558   */\n      mstore\n        /* \"#utility.yul\":12325:12565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12571:12937   */\n    tag_336:\n        /* \"#utility.yul\":12713:12716   */\n      0x00\n        /* \"#utility.yul\":12734:12801   */\n      tag_478\n        /* \"#utility.yul\":12798:12800   */\n      0x35\n        /* \"#utility.yul\":12793:12796   */\n      dup4\n        /* \"#utility.yul\":12734:12801   */\n      tag_305\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12727:12801   */\n      swap2\n      pop\n        /* \"#utility.yul\":12810:12903   */\n      tag_479\n        /* \"#utility.yul\":12899:12902   */\n      dup3\n        /* \"#utility.yul\":12810:12903   */\n      tag_335\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12928:12930   */\n      0x40\n        /* \"#utility.yul\":12923:12926   */\n      dup3\n        /* \"#utility.yul\":12919:12931   */\n      add\n        /* \"#utility.yul\":12912:12931   */\n      swap1\n      pop\n        /* \"#utility.yul\":12571:12937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12943:13362   */\n    tag_196:\n        /* \"#utility.yul\":13109:13113   */\n      0x00\n        /* \"#utility.yul\":13147:13149   */\n      0x20\n        /* \"#utility.yul\":13136:13145   */\n      dup3\n        /* \"#utility.yul\":13132:13150   */\n      add\n        /* \"#utility.yul\":13124:13150   */\n      swap1\n      pop\n        /* \"#utility.yul\":13196:13205   */\n      dup2\n        /* \"#utility.yul\":13190:13194   */\n      dup2\n        /* \"#utility.yul\":13186:13206   */\n      sub\n        /* \"#utility.yul\":13182:13183   */\n      0x00\n        /* \"#utility.yul\":13171:13180   */\n      dup4\n        /* \"#utility.yul\":13167:13184   */\n      add\n        /* \"#utility.yul\":13160:13207   */\n      mstore\n        /* \"#utility.yul\":13224:13355   */\n      tag_481\n        /* \"#utility.yul\":13350:13354   */\n      dup2\n        /* \"#utility.yul\":13224:13355   */\n      tag_336\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":13216:13355   */\n      swap1\n      pop\n        /* \"#utility.yul\":12943:13362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13368:13810   */\n    tag_243:\n        /* \"#utility.yul\":13517:13521   */\n      0x00\n        /* \"#utility.yul\":13555:13557   */\n      0x60\n        /* \"#utility.yul\":13544:13553   */\n      dup3\n        /* \"#utility.yul\":13540:13558   */\n      add\n        /* \"#utility.yul\":13532:13558   */\n      swap1\n      pop\n        /* \"#utility.yul\":13568:13639   */\n      tag_483\n        /* \"#utility.yul\":13636:13637   */\n      0x00\n        /* \"#utility.yul\":13625:13634   */\n      dup4\n        /* \"#utility.yul\":13621:13638   */\n      add\n        /* \"#utility.yul\":13612:13618   */\n      dup7\n        /* \"#utility.yul\":13568:13639   */\n      tag_324\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":13649:13721   */\n      tag_484\n        /* \"#utility.yul\":13717:13719   */\n      0x20\n        /* \"#utility.yul\":13706:13715   */\n      dup4\n        /* \"#utility.yul\":13702:13720   */\n      add\n        /* \"#utility.yul\":13693:13699   */\n      dup6\n        /* \"#utility.yul\":13649:13721   */\n      tag_321\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13731:13803   */\n      tag_485\n        /* \"#utility.yul\":13799:13801   */\n      0x40\n        /* \"#utility.yul\":13788:13797   */\n      dup4\n        /* \"#utility.yul\":13784:13802   */\n      add\n        /* \"#utility.yul\":13775:13781   */\n      dup5\n        /* \"#utility.yul\":13731:13803   */\n      tag_321\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":13368:13810   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13816:13982   */\n    tag_337:\n        /* \"#utility.yul\":13956:13974   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":13952:13953   */\n      0x00\n        /* \"#utility.yul\":13944:13950   */\n      dup3\n        /* \"#utility.yul\":13940:13954   */\n      add\n        /* \"#utility.yul\":13933:13975   */\n      mstore\n        /* \"#utility.yul\":13816:13982   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13988:14354   */\n    tag_338:\n        /* \"#utility.yul\":14130:14133   */\n      0x00\n        /* \"#utility.yul\":14151:14218   */\n      tag_488\n        /* \"#utility.yul\":14215:14217   */\n      0x10\n        /* \"#utility.yul\":14210:14213   */\n      dup4\n        /* \"#utility.yul\":14151:14218   */\n      tag_305\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14144:14218   */\n      swap2\n      pop\n        /* \"#utility.yul\":14227:14320   */\n      tag_489\n        /* \"#utility.yul\":14316:14319   */\n      dup3\n        /* \"#utility.yul\":14227:14320   */\n      tag_337\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":14345:14347   */\n      0x20\n        /* \"#utility.yul\":14340:14343   */\n      dup3\n        /* \"#utility.yul\":14336:14348   */\n      add\n        /* \"#utility.yul\":14329:14348   */\n      swap1\n      pop\n        /* \"#utility.yul\":13988:14354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14360:14779   */\n    tag_268:\n        /* \"#utility.yul\":14526:14530   */\n      0x00\n        /* \"#utility.yul\":14564:14566   */\n      0x20\n        /* \"#utility.yul\":14553:14562   */\n      dup3\n        /* \"#utility.yul\":14549:14567   */\n      add\n        /* \"#utility.yul\":14541:14567   */\n      swap1\n      pop\n        /* \"#utility.yul\":14613:14622   */\n      dup2\n        /* \"#utility.yul\":14607:14611   */\n      dup2\n        /* \"#utility.yul\":14603:14623   */\n      sub\n        /* \"#utility.yul\":14599:14600   */\n      0x00\n        /* \"#utility.yul\":14588:14597   */\n      dup4\n        /* \"#utility.yul\":14584:14601   */\n      add\n        /* \"#utility.yul\":14577:14624   */\n      mstore\n        /* \"#utility.yul\":14641:14772   */\n      tag_491\n        /* \"#utility.yul\":14767:14771   */\n      dup2\n        /* \"#utility.yul\":14641:14772   */\n      tag_338\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":14633:14772   */\n      swap1\n      pop\n        /* \"#utility.yul\":14360:14779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14785:14955   */\n    tag_339:\n        /* \"#utility.yul\":14925:14947   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":14921:14922   */\n      0x00\n        /* \"#utility.yul\":14913:14919   */\n      dup3\n        /* \"#utility.yul\":14909:14923   */\n      add\n        /* \"#utility.yul\":14902:14948   */\n      mstore\n        /* \"#utility.yul\":14785:14955   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14961:15327   */\n    tag_340:\n        /* \"#utility.yul\":15103:15106   */\n      0x00\n        /* \"#utility.yul\":15124:15191   */\n      tag_494\n        /* \"#utility.yul\":15188:15190   */\n      0x14\n        /* \"#utility.yul\":15183:15186   */\n      dup4\n        /* \"#utility.yul\":15124:15191   */\n      tag_305\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":15117:15191   */\n      swap2\n      pop\n        /* \"#utility.yul\":15200:15293   */\n      tag_495\n        /* \"#utility.yul\":15289:15292   */\n      dup3\n        /* \"#utility.yul\":15200:15293   */\n      tag_339\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":15318:15320   */\n      0x20\n        /* \"#utility.yul\":15313:15316   */\n      dup3\n        /* \"#utility.yul\":15309:15321   */\n      add\n        /* \"#utility.yul\":15302:15321   */\n      swap1\n      pop\n        /* \"#utility.yul\":14961:15327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15333:15752   */\n    tag_303:\n        /* \"#utility.yul\":15499:15503   */\n      0x00\n        /* \"#utility.yul\":15537:15539   */\n      0x20\n        /* \"#utility.yul\":15526:15535   */\n      dup3\n        /* \"#utility.yul\":15522:15540   */\n      add\n        /* \"#utility.yul\":15514:15540   */\n      swap1\n      pop\n        /* \"#utility.yul\":15586:15595   */\n      dup2\n        /* \"#utility.yul\":15580:15584   */\n      dup2\n        /* \"#utility.yul\":15576:15596   */\n      sub\n        /* \"#utility.yul\":15572:15573   */\n      0x00\n        /* \"#utility.yul\":15561:15570   */\n      dup4\n        /* \"#utility.yul\":15557:15574   */\n      add\n        /* \"#utility.yul\":15550:15597   */\n      mstore\n        /* \"#utility.yul\":15614:15745   */\n      tag_497\n        /* \"#utility.yul\":15740:15744   */\n      dup2\n        /* \"#utility.yul\":15614:15745   */\n      tag_340\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":15606:15745   */\n      swap1\n      pop\n        /* \"#utility.yul\":15333:15752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205b53c6c796d8343d8516514998be4a42d5ccb016e5996ddd6cf8f886b37707e364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1100": {
									"entryPoint": null,
									"id": 1100,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_747": {
									"entryPoint": 651,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 448,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 784,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_471": {
									"entryPoint": 643,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 1376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2859,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1448,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1763,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10953:8",
										"nodeType": "YulBlock",
										"src": "0:10953:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:32:8",
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nativeSrc": "389:16:8",
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:8",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nativeSrc": "460:79:8",
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:8",
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:8",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:8",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nativeSrc": "519:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nativeSrc": "519:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nativeSrc": "490:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nativeSrc": "480:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nativeSrc": "473:43:8",
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nativeSrc": "470:63:8",
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:8",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nativeSrc": "608:80:8",
													"nodeType": "YulBlock",
													"src": "608:80:8",
													"statements": [
														{
															"nativeSrc": "618:22:8",
															"nodeType": "YulAssignment",
															"src": "618:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:8"
																},
																"nativeSrc": "627:13:8",
																"nodeType": "YulFunctionCall",
																"src": "627:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:8"
																},
																"nativeSrc": "649:33:8",
																"nodeType": "YulFunctionCall",
																"src": "649:33:8"
															},
															"nativeSrc": "649:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:8",
														"nodeType": "YulTypedName",
														"src": "586:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:8",
														"nodeType": "YulTypedName",
														"src": "594:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:8",
														"nodeType": "YulTypedName",
														"src": "602:5:8",
														"type": ""
													}
												],
												"src": "545:143:8"
											},
											{
												"body": {
													"nativeSrc": "788:413:8",
													"nodeType": "YulBlock",
													"src": "788:413:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "834:83:8",
																"nodeType": "YulBlock",
																"src": "834:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "836:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "836:77:8"
																			},
																			"nativeSrc": "836:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "836:79:8"
																		},
																		"nativeSrc": "836:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "836:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "809:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "809:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "818:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "805:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:8"
																		},
																		"nativeSrc": "805:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "805:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:2:8",
																		"nodeType": "YulLiteral",
																		"src": "830:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "801:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:8"
																},
																"nativeSrc": "801:32:8",
																"nodeType": "YulFunctionCall",
																"src": "801:32:8"
															},
															"nativeSrc": "798:119:8",
															"nodeType": "YulIf",
															"src": "798:119:8"
														},
														{
															"nativeSrc": "927:128:8",
															"nodeType": "YulBlock",
															"src": "927:128:8",
															"statements": [
																{
																	"nativeSrc": "942:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "942:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "956:1:8",
																		"nodeType": "YulLiteral",
																		"src": "956:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "946:6:8",
																			"nodeType": "YulTypedName",
																			"src": "946:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "971:74:8",
																	"nodeType": "YulAssignment",
																	"src": "971:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1017:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1017:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1028:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1028:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1013:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1013:3:8"
																				},
																				"nativeSrc": "1013:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1013:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1037:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "981:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "981:31:8"
																		},
																		"nativeSrc": "981:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "981:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "971:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "971:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1065:129:8",
															"nodeType": "YulBlock",
															"src": "1065:129:8",
															"statements": [
																{
																	"nativeSrc": "1080:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1080:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1094:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1084:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1084:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1110:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1110:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1156:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1156:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1167:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1167:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1152:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:8"
																				},
																				"nativeSrc": "1152:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1152:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1176:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1176:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1120:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1120:31:8"
																		},
																		"nativeSrc": "1120:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1110:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1110:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nativeSrc": "694:507:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "750:9:8",
														"nodeType": "YulTypedName",
														"src": "750:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "761:7:8",
														"nodeType": "YulTypedName",
														"src": "761:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "773:6:8",
														"nodeType": "YulTypedName",
														"src": "773:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "781:6:8",
														"nodeType": "YulTypedName",
														"src": "781:6:8",
														"type": ""
													}
												],
												"src": "694:507:8"
											},
											{
												"body": {
													"nativeSrc": "1266:40:8",
													"nodeType": "YulBlock",
													"src": "1266:40:8",
													"statements": [
														{
															"nativeSrc": "1277:22:8",
															"nodeType": "YulAssignment",
															"src": "1277:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1293:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1293:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1287:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1287:5:8"
																},
																"nativeSrc": "1287:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1287:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1277:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1207:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1249:5:8",
														"nodeType": "YulTypedName",
														"src": "1249:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1259:6:8",
														"nodeType": "YulTypedName",
														"src": "1259:6:8",
														"type": ""
													}
												],
												"src": "1207:99:8"
											},
											{
												"body": {
													"nativeSrc": "1340:152:8",
													"nodeType": "YulBlock",
													"src": "1340:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1357:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1357:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1360:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1350:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:8"
																},
																"nativeSrc": "1350:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1350:88:8"
															},
															"nativeSrc": "1350:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1350:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1454:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1454:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1457:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1447:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:8"
																},
																"nativeSrc": "1447:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1447:15:8"
															},
															"nativeSrc": "1447:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1447:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1478:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1481:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1481:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1471:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1471:6:8"
																},
																"nativeSrc": "1471:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1471:15:8"
															},
															"nativeSrc": "1471:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1471:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1312:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1312:180:8"
											},
											{
												"body": {
													"nativeSrc": "1526:152:8",
													"nodeType": "YulBlock",
													"src": "1526:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1543:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1546:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1546:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1536:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:8"
																},
																"nativeSrc": "1536:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1536:88:8"
															},
															"nativeSrc": "1536:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1536:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1640:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1640:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1643:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1643:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1633:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1633:6:8"
																},
																"nativeSrc": "1633:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1633:15:8"
															},
															"nativeSrc": "1633:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1633:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1667:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1657:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:8"
																},
																"nativeSrc": "1657:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1657:15:8"
															},
															"nativeSrc": "1657:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1657:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1498:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1498:180:8"
											},
											{
												"body": {
													"nativeSrc": "1735:269:8",
													"nodeType": "YulBlock",
													"src": "1735:269:8",
													"statements": [
														{
															"nativeSrc": "1745:22:8",
															"nodeType": "YulAssignment",
															"src": "1745:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1759:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1759:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1765:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1755:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1755:3:8"
																},
																"nativeSrc": "1755:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1755:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1745:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1745:6:8"
																}
															]
														},
														{
															"nativeSrc": "1776:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1776:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1806:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1806:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1812:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1812:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1802:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:8"
																},
																"nativeSrc": "1802:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1802:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1780:18:8",
																	"nodeType": "YulTypedName",
																	"src": "1780:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1853:51:8",
																"nodeType": "YulBlock",
																"src": "1853:51:8",
																"statements": [
																	{
																		"nativeSrc": "1867:27:8",
																		"nodeType": "YulAssignment",
																		"src": "1867:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1881:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1881:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1889:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1877:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1877:3:8"
																			},
																			"nativeSrc": "1877:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1877:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1867:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1867:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1833:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1833:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1826:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:8"
																},
																"nativeSrc": "1826:26:8",
																"nodeType": "YulFunctionCall",
																"src": "1826:26:8"
															},
															"nativeSrc": "1823:81:8",
															"nodeType": "YulIf",
															"src": "1823:81:8"
														},
														{
															"body": {
																"nativeSrc": "1956:42:8",
																"nodeType": "YulBlock",
																"src": "1956:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1970:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1970:16:8"
																			},
																			"nativeSrc": "1970:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1970:18:8"
																		},
																		"nativeSrc": "1970:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1970:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1920:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "1920:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1943:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1951:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1951:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1940:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1940:2:8"
																		},
																		"nativeSrc": "1940:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1940:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1917:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1917:2:8"
																},
																"nativeSrc": "1917:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1917:38:8"
															},
															"nativeSrc": "1914:84:8",
															"nodeType": "YulIf",
															"src": "1914:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1684:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1719:4:8",
														"nodeType": "YulTypedName",
														"src": "1719:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1728:6:8",
														"nodeType": "YulTypedName",
														"src": "1728:6:8",
														"type": ""
													}
												],
												"src": "1684:320:8"
											},
											{
												"body": {
													"nativeSrc": "2064:87:8",
													"nodeType": "YulBlock",
													"src": "2064:87:8",
													"statements": [
														{
															"nativeSrc": "2074:11:8",
															"nodeType": "YulAssignment",
															"src": "2074:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2082:3:8",
																"nodeType": "YulIdentifier",
																"src": "2082:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2074:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2074:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2102:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2102:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2105:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2105:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2095:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2095:6:8"
																},
																"nativeSrc": "2095:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2095:14:8"
															},
															"nativeSrc": "2095:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2095:14:8"
														},
														{
															"nativeSrc": "2118:26:8",
															"nodeType": "YulAssignment",
															"src": "2118:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2136:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2136:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2139:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2139:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2126:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2126:9:8"
																},
																"nativeSrc": "2126:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2126:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2118:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2118:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2010:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2051:3:8",
														"nodeType": "YulTypedName",
														"src": "2051:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2059:4:8",
														"nodeType": "YulTypedName",
														"src": "2059:4:8",
														"type": ""
													}
												],
												"src": "2010:141:8"
											},
											{
												"body": {
													"nativeSrc": "2201:49:8",
													"nodeType": "YulBlock",
													"src": "2201:49:8",
													"statements": [
														{
															"nativeSrc": "2211:33:8",
															"nodeType": "YulAssignment",
															"src": "2211:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2229:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2229:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2236:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2236:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2225:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:8"
																		},
																		"nativeSrc": "2225:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2225:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2241:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2241:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2221:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:8"
																},
																"nativeSrc": "2221:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2221:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2157:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2184:5:8",
														"nodeType": "YulTypedName",
														"src": "2184:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2194:6:8",
														"nodeType": "YulTypedName",
														"src": "2194:6:8",
														"type": ""
													}
												],
												"src": "2157:93:8"
											},
											{
												"body": {
													"nativeSrc": "2309:54:8",
													"nodeType": "YulBlock",
													"src": "2309:54:8",
													"statements": [
														{
															"nativeSrc": "2319:37:8",
															"nodeType": "YulAssignment",
															"src": "2319:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2344:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2344:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2350:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2350:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2340:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2340:3:8"
																},
																"nativeSrc": "2340:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2340:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2319:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2319:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2256:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2284:4:8",
														"nodeType": "YulTypedName",
														"src": "2284:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2290:5:8",
														"nodeType": "YulTypedName",
														"src": "2290:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2300:8:8",
														"nodeType": "YulTypedName",
														"src": "2300:8:8",
														"type": ""
													}
												],
												"src": "2256:107:8"
											},
											{
												"body": {
													"nativeSrc": "2445:317:8",
													"nodeType": "YulBlock",
													"src": "2445:317:8",
													"statements": [
														{
															"nativeSrc": "2455:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2455:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2476:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2476:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2472:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:8"
																},
																"nativeSrc": "2472:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2472:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2459:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2459:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2499:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2499:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2530:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2530:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2541:66:8",
																		"nodeType": "YulLiteral",
																		"src": "2541:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2511:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2511:18:8"
																},
																"nativeSrc": "2511:97:8",
																"nodeType": "YulFunctionCall",
																"src": "2511:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2503:4:8",
																	"nodeType": "YulTypedName",
																	"src": "2503:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2617:51:8",
															"nodeType": "YulAssignment",
															"src": "2617:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2648:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2648:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2659:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "2659:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2629:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2629:18:8"
																},
																"nativeSrc": "2629:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2629:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2617:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2617:8:8"
																}
															]
														},
														{
															"nativeSrc": "2677:30:8",
															"nodeType": "YulAssignment",
															"src": "2677:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2690:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2690:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2701:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2701:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2697:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2697:3:8"
																		},
																		"nativeSrc": "2697:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2697:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2686:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:8"
																},
																"nativeSrc": "2686:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2686:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2677:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2677:5:8"
																}
															]
														},
														{
															"nativeSrc": "2716:40:8",
															"nodeType": "YulAssignment",
															"src": "2716:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2729:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2729:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2740:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "2740:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2750:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2750:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2736:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:8"
																		},
																		"nativeSrc": "2736:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2726:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2726:2:8"
																},
																"nativeSrc": "2726:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2726:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2716:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2369:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2406:5:8",
														"nodeType": "YulTypedName",
														"src": "2406:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2413:10:8",
														"nodeType": "YulTypedName",
														"src": "2413:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2425:8:8",
														"nodeType": "YulTypedName",
														"src": "2425:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2438:6:8",
														"nodeType": "YulTypedName",
														"src": "2438:6:8",
														"type": ""
													}
												],
												"src": "2369:393:8"
											},
											{
												"body": {
													"nativeSrc": "2800:28:8",
													"nodeType": "YulBlock",
													"src": "2800:28:8",
													"statements": [
														{
															"nativeSrc": "2810:12:8",
															"nodeType": "YulAssignment",
															"src": "2810:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "2817:5:8",
																"nodeType": "YulIdentifier",
																"src": "2817:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2810:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2810:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2768:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2786:5:8",
														"nodeType": "YulTypedName",
														"src": "2786:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2796:3:8",
														"nodeType": "YulTypedName",
														"src": "2796:3:8",
														"type": ""
													}
												],
												"src": "2768:60:8"
											},
											{
												"body": {
													"nativeSrc": "2894:82:8",
													"nodeType": "YulBlock",
													"src": "2894:82:8",
													"statements": [
														{
															"nativeSrc": "2904:66:8",
															"nodeType": "YulAssignment",
															"src": "2904:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2962:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2962:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2944:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2944:17:8"
																				},
																				"nativeSrc": "2944:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2944:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2935:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "2935:8:8"
																		},
																		"nativeSrc": "2935:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2935:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2917:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2917:17:8"
																},
																"nativeSrc": "2917:53:8",
																"nodeType": "YulFunctionCall",
																"src": "2917:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2904:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2904:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2834:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2874:5:8",
														"nodeType": "YulTypedName",
														"src": "2874:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2884:9:8",
														"nodeType": "YulTypedName",
														"src": "2884:9:8",
														"type": ""
													}
												],
												"src": "2834:142:8"
											},
											{
												"body": {
													"nativeSrc": "3029:28:8",
													"nodeType": "YulBlock",
													"src": "3029:28:8",
													"statements": [
														{
															"nativeSrc": "3039:12:8",
															"nodeType": "YulAssignment",
															"src": "3039:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3046:5:8",
																"nodeType": "YulIdentifier",
																"src": "3046:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3039:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3039:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2982:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3015:5:8",
														"nodeType": "YulTypedName",
														"src": "3015:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3025:3:8",
														"nodeType": "YulTypedName",
														"src": "3025:3:8",
														"type": ""
													}
												],
												"src": "2982:75:8"
											},
											{
												"body": {
													"nativeSrc": "3139:193:8",
													"nodeType": "YulBlock",
													"src": "3139:193:8",
													"statements": [
														{
															"nativeSrc": "3149:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3149:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3204:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3204:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3173:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3173:30:8"
																},
																"nativeSrc": "3173:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3173:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3153:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3153:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3228:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3228:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3268:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3268:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3262:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3262:5:8"
																				},
																				"nativeSrc": "3262:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3262:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3275:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3275:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3307:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3307:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3283:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3283:23:8"
																				},
																				"nativeSrc": "3283:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3283:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3234:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3234:27:8"
																		},
																		"nativeSrc": "3234:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3221:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:8"
																},
																"nativeSrc": "3221:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3221:105:8"
															},
															"nativeSrc": "3221:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3221:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3063:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3116:4:8",
														"nodeType": "YulTypedName",
														"src": "3116:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3122:6:8",
														"nodeType": "YulTypedName",
														"src": "3122:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3130:7:8",
														"nodeType": "YulTypedName",
														"src": "3130:7:8",
														"type": ""
													}
												],
												"src": "3063:269:8"
											},
											{
												"body": {
													"nativeSrc": "3387:24:8",
													"nodeType": "YulBlock",
													"src": "3387:24:8",
													"statements": [
														{
															"nativeSrc": "3397:8:8",
															"nodeType": "YulAssignment",
															"src": "3397:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3404:1:8",
																"nodeType": "YulLiteral",
																"src": "3404:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3397:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3397:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3338:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3383:3:8",
														"nodeType": "YulTypedName",
														"src": "3383:3:8",
														"type": ""
													}
												],
												"src": "3338:73:8"
											},
											{
												"body": {
													"nativeSrc": "3470:136:8",
													"nodeType": "YulBlock",
													"src": "3470:136:8",
													"statements": [
														{
															"nativeSrc": "3480:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3480:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3494:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3494:30:8"
																},
																"nativeSrc": "3494:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3494:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3484:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3484:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3579:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3579:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3585:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3585:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3593:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3593:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3535:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3535:43:8"
																},
																"nativeSrc": "3535:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3535:65:8"
															},
															"nativeSrc": "3535:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3535:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3417:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3456:4:8",
														"nodeType": "YulTypedName",
														"src": "3456:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3462:6:8",
														"nodeType": "YulTypedName",
														"src": "3462:6:8",
														"type": ""
													}
												],
												"src": "3417:189:8"
											},
											{
												"body": {
													"nativeSrc": "3662:136:8",
													"nodeType": "YulBlock",
													"src": "3662:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3729:63:8",
																"nodeType": "YulBlock",
																"src": "3729:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3773:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3780:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3780:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3743:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "3743:29:8"
																			},
																			"nativeSrc": "3743:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3743:39:8"
																		},
																		"nativeSrc": "3743:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3743:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3682:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3682:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3689:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3689:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3679:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3679:2:8"
																},
																"nativeSrc": "3679:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3679:14:8"
															},
															"nativeSrc": "3672:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3694:26:8",
																"nodeType": "YulBlock",
																"src": "3694:26:8",
																"statements": [
																	{
																		"nativeSrc": "3696:22:8",
																		"nodeType": "YulAssignment",
																		"src": "3696:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3709:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3709:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3716:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3716:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3705:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3705:3:8"
																			},
																			"nativeSrc": "3705:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3705:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3696:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3696:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3676:2:8",
																"nodeType": "YulBlock",
																"src": "3676:2:8",
																"statements": []
															},
															"src": "3672:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3612:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3650:5:8",
														"nodeType": "YulTypedName",
														"src": "3650:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3657:3:8",
														"nodeType": "YulTypedName",
														"src": "3657:3:8",
														"type": ""
													}
												],
												"src": "3612:186:8"
											},
											{
												"body": {
													"nativeSrc": "3883:464:8",
													"nodeType": "YulBlock",
													"src": "3883:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3909:431:8",
																"nodeType": "YulBlock",
																"src": "3909:431:8",
																"statements": [
																	{
																		"nativeSrc": "3923:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3923:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3971:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3971:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3939:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "3939:31:8"
																			},
																			"nativeSrc": "3939:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3927:8:8",
																				"nodeType": "YulTypedName",
																				"src": "3927:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3990:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3990:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4013:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4013:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4041:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4041:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4023:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4023:17:8"
																					},
																					"nativeSrc": "4023:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4023:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4009:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4009:3:8"
																			},
																			"nativeSrc": "4009:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4009:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3994:11:8",
																				"nodeType": "YulTypedName",
																				"src": "3994:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4210:27:8",
																			"nodeType": "YulBlock",
																			"src": "4210:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4212:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4212:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4227:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4227:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4212:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4212:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4194:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4194:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4206:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4206:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4191:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4191:2:8"
																			},
																			"nativeSrc": "4191:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4191:18:8"
																		},
																		"nativeSrc": "4188:49:8",
																		"nodeType": "YulIf",
																		"src": "4188:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4279:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4279:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4296:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4296:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4324:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4324:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4306:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4306:17:8"
																							},
																							"nativeSrc": "4306:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4306:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4292:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4292:3:8"
																					},
																					"nativeSrc": "4292:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4292:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4250:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4250:28:8"
																			},
																			"nativeSrc": "4250:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4250:80:8"
																		},
																		"nativeSrc": "4250:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4250:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3900:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3900:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3905:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3905:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3897:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3897:2:8"
																},
																"nativeSrc": "3897:11:8",
																"nodeType": "YulFunctionCall",
																"src": "3897:11:8"
															},
															"nativeSrc": "3894:446:8",
															"nodeType": "YulIf",
															"src": "3894:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3804:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3859:5:8",
														"nodeType": "YulTypedName",
														"src": "3859:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3866:3:8",
														"nodeType": "YulTypedName",
														"src": "3866:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3871:10:8",
														"nodeType": "YulTypedName",
														"src": "3871:10:8",
														"type": ""
													}
												],
												"src": "3804:543:8"
											},
											{
												"body": {
													"nativeSrc": "4416:54:8",
													"nodeType": "YulBlock",
													"src": "4416:54:8",
													"statements": [
														{
															"nativeSrc": "4426:37:8",
															"nodeType": "YulAssignment",
															"src": "4426:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4451:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4451:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4457:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4457:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4447:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4447:3:8"
																},
																"nativeSrc": "4447:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4447:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4426:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4426:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4353:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4391:4:8",
														"nodeType": "YulTypedName",
														"src": "4391:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4397:5:8",
														"nodeType": "YulTypedName",
														"src": "4397:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4407:8:8",
														"nodeType": "YulTypedName",
														"src": "4407:8:8",
														"type": ""
													}
												],
												"src": "4353:117:8"
											},
											{
												"body": {
													"nativeSrc": "4527:118:8",
													"nodeType": "YulBlock",
													"src": "4527:118:8",
													"statements": [
														{
															"nativeSrc": "4537:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4537:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4586:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4586:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4589:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4589:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4582:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4582:3:8"
																				},
																				"nativeSrc": "4582:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4582:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4601:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4601:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4597:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4597:3:8"
																				},
																				"nativeSrc": "4597:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4597:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4553:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "4553:28:8"
																		},
																		"nativeSrc": "4553:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4553:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4549:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4549:3:8"
																},
																"nativeSrc": "4549:56:8",
																"nodeType": "YulFunctionCall",
																"src": "4549:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4541:4:8",
																	"nodeType": "YulTypedName",
																	"src": "4541:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4614:25:8",
															"nodeType": "YulAssignment",
															"src": "4614:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4628:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4628:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4634:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4634:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4624:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4624:3:8"
																},
																"nativeSrc": "4624:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4624:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4614:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4614:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4476:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4504:4:8",
														"nodeType": "YulTypedName",
														"src": "4504:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4510:5:8",
														"nodeType": "YulTypedName",
														"src": "4510:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4520:6:8",
														"nodeType": "YulTypedName",
														"src": "4520:6:8",
														"type": ""
													}
												],
												"src": "4476:169:8"
											},
											{
												"body": {
													"nativeSrc": "4731:214:8",
													"nodeType": "YulBlock",
													"src": "4731:214:8",
													"statements": [
														{
															"nativeSrc": "4864:37:8",
															"nodeType": "YulAssignment",
															"src": "4864:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4891:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4891:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4897:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4897:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4872:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4872:18:8"
																},
																"nativeSrc": "4872:29:8",
																"nodeType": "YulFunctionCall",
																"src": "4872:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4864:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4864:4:8"
																}
															]
														},
														{
															"nativeSrc": "4910:29:8",
															"nodeType": "YulAssignment",
															"src": "4910:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4921:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4921:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4931:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4931:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4934:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4934:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4927:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4927:3:8"
																		},
																		"nativeSrc": "4927:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4918:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4918:2:8"
																},
																"nativeSrc": "4918:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4918:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4910:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4910:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4650:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4712:4:8",
														"nodeType": "YulTypedName",
														"src": "4712:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4718:3:8",
														"nodeType": "YulTypedName",
														"src": "4718:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4726:4:8",
														"nodeType": "YulTypedName",
														"src": "4726:4:8",
														"type": ""
													}
												],
												"src": "4650:295:8"
											},
											{
												"body": {
													"nativeSrc": "5042:1303:8",
													"nodeType": "YulBlock",
													"src": "5042:1303:8",
													"statements": [
														{
															"nativeSrc": "5053:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5053:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5100:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5100:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5067:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5067:32:8"
																},
																"nativeSrc": "5067:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5067:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5057:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5057:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5189:22:8",
																"nodeType": "YulBlock",
																"src": "5189:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5191:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5191:16:8"
																			},
																			"nativeSrc": "5191:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5191:18:8"
																		},
																		"nativeSrc": "5191:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5191:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5161:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5161:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5169:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5169:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5158:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5158:2:8"
																},
																"nativeSrc": "5158:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5158:30:8"
															},
															"nativeSrc": "5155:56:8",
															"nodeType": "YulIf",
															"src": "5155:56:8"
														},
														{
															"nativeSrc": "5221:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5221:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5267:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5267:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5261:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5261:5:8"
																		},
																		"nativeSrc": "5261:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5261:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5235:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5235:25:8"
																},
																"nativeSrc": "5235:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5235:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5225:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5225:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5366:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5366:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5372:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5372:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5380:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5380:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5320:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5320:45:8"
																},
																"nativeSrc": "5320:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5320:67:8"
															},
															"nativeSrc": "5320:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5320:67:8"
														},
														{
															"nativeSrc": "5397:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5397:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5414:1:8",
																"nodeType": "YulLiteral",
																"src": "5414:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5401:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5401:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5425:17:8",
															"nodeType": "YulAssignment",
															"src": "5425:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5438:4:8",
																"nodeType": "YulLiteral",
																"src": "5438:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5425:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5425:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5489:611:8",
																		"nodeType": "YulBlock",
																		"src": "5489:611:8",
																		"statements": [
																			{
																				"nativeSrc": "5503:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5503:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5522:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "5522:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5534:4:8",
																									"nodeType": "YulLiteral",
																									"src": "5534:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5530:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "5530:3:8"
																							},
																							"nativeSrc": "5530:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5530:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5518:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5518:3:8"
																					},
																					"nativeSrc": "5518:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5518:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5507:7:8",
																						"nodeType": "YulTypedName",
																						"src": "5507:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5554:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5554:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5600:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "5600:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5568:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "5568:31:8"
																					},
																					"nativeSrc": "5568:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5568:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5558:6:8",
																						"nodeType": "YulTypedName",
																						"src": "5558:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5618:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5618:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5627:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5627:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5622:1:8",
																						"nodeType": "YulTypedName",
																						"src": "5622:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5686:163:8",
																					"nodeType": "YulBlock",
																					"src": "5686:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5711:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "5711:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5729:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "5729:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5734:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "5734:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5725:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "5725:3:8"
																												},
																												"nativeSrc": "5725:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "5725:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5719:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "5719:5:8"
																										},
																										"nativeSrc": "5719:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5719:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5704:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5704:6:8"
																								},
																								"nativeSrc": "5704:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5704:42:8"
																							},
																							"nativeSrc": "5704:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "5704:42:8"
																						},
																						{
																							"nativeSrc": "5763:24:8",
																							"nodeType": "YulAssignment",
																							"src": "5763:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5777:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "5777:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5785:1:8",
																										"nodeType": "YulLiteral",
																										"src": "5785:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5773:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5773:3:8"
																								},
																								"nativeSrc": "5773:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5773:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5763:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5763:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5804:31:8",
																							"nodeType": "YulAssignment",
																							"src": "5804:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5821:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "5821:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5832:2:8",
																										"nodeType": "YulLiteral",
																										"src": "5832:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5817:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5817:3:8"
																								},
																								"nativeSrc": "5817:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5817:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5804:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "5804:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5652:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "5652:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5655:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "5655:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5649:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5649:2:8"
																					},
																					"nativeSrc": "5649:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5649:14:8"
																				},
																				"nativeSrc": "5641:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5664:21:8",
																					"nodeType": "YulBlock",
																					"src": "5664:21:8",
																					"statements": [
																						{
																							"nativeSrc": "5666:17:8",
																							"nodeType": "YulAssignment",
																							"src": "5666:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5675:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "5675:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5678:4:8",
																										"nodeType": "YulLiteral",
																										"src": "5678:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5671:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5671:3:8"
																								},
																								"nativeSrc": "5671:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5671:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5666:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "5666:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5645:3:8",
																					"nodeType": "YulBlock",
																					"src": "5645:3:8",
																					"statements": []
																				},
																				"src": "5641:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "5885:156:8",
																					"nodeType": "YulBlock",
																					"src": "5885:156:8",
																					"statements": [
																						{
																							"nativeSrc": "5903:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5903:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5930:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "5930:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5935:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "5935:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5926:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "5926:3:8"
																										},
																										"nativeSrc": "5926:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5926:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5920:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "5920:5:8"
																								},
																								"nativeSrc": "5920:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5920:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5907:9:8",
																									"nodeType": "YulTypedName",
																									"src": "5907:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5970:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "5970:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5997:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "5997:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6012:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6012:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6020:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6020:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6008:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6008:3:8"
																												},
																												"nativeSrc": "6008:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6008:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5978:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "5978:18:8"
																										},
																										"nativeSrc": "5978:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "5978:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5963:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "5963:6:8"
																								},
																								"nativeSrc": "5963:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "5963:64:8"
																							},
																							"nativeSrc": "5963:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "5963:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5868:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "5868:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5877:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "5877:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5865:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "5865:2:8"
																					},
																					"nativeSrc": "5865:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5865:19:8"
																				},
																				"nativeSrc": "5862:179:8",
																				"nodeType": "YulIf",
																				"src": "5862:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6061:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6061:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6075:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6075:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6083:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6083:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6071:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6071:3:8"
																									},
																									"nativeSrc": "6071:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6071:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6087:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6087:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6067:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6067:3:8"
																							},
																							"nativeSrc": "6067:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6067:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6054:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6054:6:8"
																					},
																					"nativeSrc": "6054:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6054:36:8"
																				},
																				"nativeSrc": "6054:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6054:36:8"
																			}
																		]
																	},
																	"nativeSrc": "5482:618:8",
																	"nodeType": "YulCase",
																	"src": "5482:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5487:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5487:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6117:222:8",
																		"nodeType": "YulBlock",
																		"src": "6117:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6131:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6131:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6144:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6144:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6135:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6135:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6168:67:8",
																					"nodeType": "YulBlock",
																					"src": "6168:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6186:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6186:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6205:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6205:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6210:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6210:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6201:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6201:3:8"
																										},
																										"nativeSrc": "6201:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6201:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6195:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6195:5:8"
																								},
																								"nativeSrc": "6195:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6195:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6186:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6186:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6161:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6161:6:8"
																				},
																				"nativeSrc": "6158:77:8",
																				"nodeType": "YulIf",
																				"src": "6158:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6255:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6255:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6314:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6314:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6321:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6321:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6261:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6261:52:8"
																							},
																							"nativeSrc": "6261:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6261:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6248:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6248:6:8"
																					},
																					"nativeSrc": "6248:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6248:81:8"
																				},
																				"nativeSrc": "6248:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6248:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6109:230:8",
																	"nodeType": "YulCase",
																	"src": "6109:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5462:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5462:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5470:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5470:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5459:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5459:2:8"
																},
																"nativeSrc": "5459:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5459:14:8"
															},
															"nativeSrc": "5452:887:8",
															"nodeType": "YulSwitch",
															"src": "5452:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4950:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5031:4:8",
														"nodeType": "YulTypedName",
														"src": "5031:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5037:3:8",
														"nodeType": "YulTypedName",
														"src": "5037:3:8",
														"type": ""
													}
												],
												"src": "4950:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6396:81:8",
													"nodeType": "YulBlock",
													"src": "6396:81:8",
													"statements": [
														{
															"nativeSrc": "6406:65:8",
															"nodeType": "YulAssignment",
															"src": "6406:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6421:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6421:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6428:42:8",
																		"nodeType": "YulLiteral",
																		"src": "6428:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6417:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6417:3:8"
																},
																"nativeSrc": "6417:54:8",
																"nodeType": "YulFunctionCall",
																"src": "6417:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6406:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "6406:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6351:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6378:5:8",
														"nodeType": "YulTypedName",
														"src": "6378:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6388:7:8",
														"nodeType": "YulTypedName",
														"src": "6388:7:8",
														"type": ""
													}
												],
												"src": "6351:126:8"
											},
											{
												"body": {
													"nativeSrc": "6528:51:8",
													"nodeType": "YulBlock",
													"src": "6528:51:8",
													"statements": [
														{
															"nativeSrc": "6538:35:8",
															"nodeType": "YulAssignment",
															"src": "6538:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6567:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6567:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6549:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "6549:17:8"
																},
																"nativeSrc": "6549:24:8",
																"nodeType": "YulFunctionCall",
																"src": "6549:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6538:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "6538:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6483:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6510:5:8",
														"nodeType": "YulTypedName",
														"src": "6510:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6520:7:8",
														"nodeType": "YulTypedName",
														"src": "6520:7:8",
														"type": ""
													}
												],
												"src": "6483:96:8"
											},
											{
												"body": {
													"nativeSrc": "6650:53:8",
													"nodeType": "YulBlock",
													"src": "6650:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6667:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6690:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6690:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6672:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6672:17:8"
																		},
																		"nativeSrc": "6672:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:8"
																},
																"nativeSrc": "6660:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6660:37:8"
															},
															"nativeSrc": "6660:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6660:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6585:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6638:5:8",
														"nodeType": "YulTypedName",
														"src": "6638:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6645:3:8",
														"nodeType": "YulTypedName",
														"src": "6645:3:8",
														"type": ""
													}
												],
												"src": "6585:118:8"
											},
											{
												"body": {
													"nativeSrc": "6807:124:8",
													"nodeType": "YulBlock",
													"src": "6807:124:8",
													"statements": [
														{
															"nativeSrc": "6817:26:8",
															"nodeType": "YulAssignment",
															"src": "6817:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6829:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6829:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6840:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:8"
																},
																"nativeSrc": "6825:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6825:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6817:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6897:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6897:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6910:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6921:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6921:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6906:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:8"
																		},
																		"nativeSrc": "6906:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6853:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6853:43:8"
																},
																"nativeSrc": "6853:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6853:71:8"
															},
															"nativeSrc": "6853:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6853:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6709:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6779:9:8",
														"nodeType": "YulTypedName",
														"src": "6779:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6791:6:8",
														"nodeType": "YulTypedName",
														"src": "6791:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6802:4:8",
														"nodeType": "YulTypedName",
														"src": "6802:4:8",
														"type": ""
													}
												],
												"src": "6709:222:8"
											},
											{
												"body": {
													"nativeSrc": "6965:152:8",
													"nodeType": "YulBlock",
													"src": "6965:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6982:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6982:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6985:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6985:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:8"
																},
																"nativeSrc": "6975:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6975:88:8"
															},
															"nativeSrc": "6975:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6975:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7079:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7079:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7082:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7082:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7072:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7072:6:8"
																},
																"nativeSrc": "7072:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7072:15:8"
															},
															"nativeSrc": "7072:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7072:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7103:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7106:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7096:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7096:6:8"
																},
																"nativeSrc": "7096:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7096:15:8"
															},
															"nativeSrc": "7096:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7096:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6937:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:180:8"
											},
											{
												"body": {
													"nativeSrc": "7174:51:8",
													"nodeType": "YulBlock",
													"src": "7174:51:8",
													"statements": [
														{
															"nativeSrc": "7184:34:8",
															"nodeType": "YulAssignment",
															"src": "7184:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7209:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7209:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7212:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7212:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7205:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7205:3:8"
																},
																"nativeSrc": "7205:13:8",
																"nodeType": "YulFunctionCall",
																"src": "7205:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7184:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "7184:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7123:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7155:5:8",
														"nodeType": "YulTypedName",
														"src": "7155:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7165:8:8",
														"nodeType": "YulTypedName",
														"src": "7165:8:8",
														"type": ""
													}
												],
												"src": "7123:102:8"
											},
											{
												"body": {
													"nativeSrc": "7304:775:8",
													"nodeType": "YulBlock",
													"src": "7304:775:8",
													"statements": [
														{
															"nativeSrc": "7314:15:8",
															"nodeType": "YulAssignment",
															"src": "7314:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "7323:6:8",
																"nodeType": "YulIdentifier",
																"src": "7323:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7314:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7314:5:8"
																}
															]
														},
														{
															"nativeSrc": "7338:14:8",
															"nodeType": "YulAssignment",
															"src": "7338:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "7347:5:8",
																"nodeType": "YulIdentifier",
																"src": "7347:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7338:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7338:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7396:677:8",
																"nodeType": "YulBlock",
																"src": "7396:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7484:22:8",
																			"nodeType": "YulBlock",
																			"src": "7484:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7486:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "7486:16:8"
																						},
																						"nativeSrc": "7486:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7486:18:8"
																					},
																					"nativeSrc": "7486:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "7486:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7462:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7462:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7472:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7472:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7477:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "7477:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7468:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7468:3:8"
																					},
																					"nativeSrc": "7468:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7468:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7459:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7459:2:8"
																			},
																			"nativeSrc": "7459:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7459:24:8"
																		},
																		"nativeSrc": "7456:50:8",
																		"nodeType": "YulIf",
																		"src": "7456:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "7551:419:8",
																			"nodeType": "YulBlock",
																			"src": "7551:419:8",
																			"statements": [
																				{
																					"nativeSrc": "7931:25:8",
																					"nodeType": "YulAssignment",
																					"src": "7931:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7944:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "7944:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7951:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "7951:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7940:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "7940:3:8"
																						},
																						"nativeSrc": "7940:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "7940:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7931:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "7931:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7526:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "7526:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7536:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7536:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7522:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7522:3:8"
																			},
																			"nativeSrc": "7522:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7522:16:8"
																		},
																		"nativeSrc": "7519:451:8",
																		"nodeType": "YulIf",
																		"src": "7519:451:8"
																	},
																	{
																		"nativeSrc": "7983:23:8",
																		"nodeType": "YulAssignment",
																		"src": "7983:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7995:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "7995:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8001:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8001:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7991:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7991:3:8"
																			},
																			"nativeSrc": "7991:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7991:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7983:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7983:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8019:44:8",
																		"nodeType": "YulAssignment",
																		"src": "8019:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8054:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8054:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8031:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "8031:22:8"
																			},
																			"nativeSrc": "8031:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8031:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8019:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "8019:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7372:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "7372:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7382:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7382:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7369:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7369:2:8"
																},
																"nativeSrc": "7369:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7369:15:8"
															},
															"nativeSrc": "7361:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7385:2:8",
																"nodeType": "YulBlock",
																"src": "7385:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7365:3:8",
																"nodeType": "YulBlock",
																"src": "7365:3:8",
																"statements": []
															},
															"src": "7361:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7231:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7259:6:8",
														"nodeType": "YulTypedName",
														"src": "7259:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7267:5:8",
														"nodeType": "YulTypedName",
														"src": "7267:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7274:8:8",
														"nodeType": "YulTypedName",
														"src": "7274:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7284:3:8",
														"nodeType": "YulTypedName",
														"src": "7284:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7292:5:8",
														"nodeType": "YulTypedName",
														"src": "7292:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7299:4:8",
														"nodeType": "YulTypedName",
														"src": "7299:4:8",
														"type": ""
													}
												],
												"src": "7231:848:8"
											},
											{
												"body": {
													"nativeSrc": "8145:1013:8",
													"nodeType": "YulBlock",
													"src": "8145:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8340:20:8",
																"nodeType": "YulBlock",
																"src": "8340:20:8",
																"statements": [
																	{
																		"nativeSrc": "8342:10:8",
																		"nodeType": "YulAssignment",
																		"src": "8342:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8351:1:8",
																			"nodeType": "YulLiteral",
																			"src": "8351:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8342:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8342:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8353:5:8",
																		"nodeType": "YulLeave",
																		"src": "8353:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8330:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8330:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8323:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8323:6:8"
																},
																"nativeSrc": "8323:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8323:16:8"
															},
															"nativeSrc": "8320:40:8",
															"nodeType": "YulIf",
															"src": "8320:40:8"
														},
														{
															"body": {
																"nativeSrc": "8385:20:8",
																"nodeType": "YulBlock",
																"src": "8385:20:8",
																"statements": [
																	{
																		"nativeSrc": "8387:10:8",
																		"nodeType": "YulAssignment",
																		"src": "8387:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8396:1:8",
																			"nodeType": "YulLiteral",
																			"src": "8396:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8387:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8387:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8398:5:8",
																		"nodeType": "YulLeave",
																		"src": "8398:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8379:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8379:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8372:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8372:6:8"
																},
																"nativeSrc": "8372:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8372:12:8"
															},
															"nativeSrc": "8369:36:8",
															"nodeType": "YulIf",
															"src": "8369:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8515:20:8",
																		"nodeType": "YulBlock",
																		"src": "8515:20:8",
																		"statements": [
																			{
																				"nativeSrc": "8517:10:8",
																				"nodeType": "YulAssignment",
																				"src": "8517:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8526:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8526:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8517:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8517:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8528:5:8",
																				"nodeType": "YulLeave",
																				"src": "8528:5:8"
																			}
																		]
																	},
																	"nativeSrc": "8508:27:8",
																	"nodeType": "YulCase",
																	"src": "8508:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8513:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8513:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8559:176:8",
																		"nodeType": "YulBlock",
																		"src": "8559:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8594:22:8",
																					"nodeType": "YulBlock",
																					"src": "8594:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8596:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "8596:16:8"
																								},
																								"nativeSrc": "8596:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8596:18:8"
																							},
																							"nativeSrc": "8596:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8596:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8579:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "8579:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8589:3:8",
																							"nodeType": "YulLiteral",
																							"src": "8589:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8576:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8576:2:8"
																					},
																					"nativeSrc": "8576:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8576:17:8"
																				},
																				"nativeSrc": "8573:43:8",
																				"nodeType": "YulIf",
																				"src": "8573:43:8"
																			},
																			{
																				"nativeSrc": "8629:25:8",
																				"nodeType": "YulAssignment",
																				"src": "8629:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8642:1:8",
																							"nodeType": "YulLiteral",
																							"src": "8642:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8645:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "8645:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8638:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8638:3:8"
																					},
																					"nativeSrc": "8638:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8638:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8629:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8629:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8685:22:8",
																					"nodeType": "YulBlock",
																					"src": "8685:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8687:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "8687:16:8"
																								},
																								"nativeSrc": "8687:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8687:18:8"
																							},
																							"nativeSrc": "8687:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8687:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8673:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "8673:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8680:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8680:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8670:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8670:2:8"
																					},
																					"nativeSrc": "8670:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8670:14:8"
																				},
																				"nativeSrc": "8667:40:8",
																				"nodeType": "YulIf",
																				"src": "8667:40:8"
																			},
																			{
																				"nativeSrc": "8720:5:8",
																				"nodeType": "YulLeave",
																				"src": "8720:5:8"
																			}
																		]
																	},
																	"nativeSrc": "8544:191:8",
																	"nodeType": "YulCase",
																	"src": "8544:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8549:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8549:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8465:4:8",
																"nodeType": "YulIdentifier",
																"src": "8465:4:8"
															},
															"nativeSrc": "8458:277:8",
															"nodeType": "YulSwitch",
															"src": "8458:277:8"
														},
														{
															"body": {
																"nativeSrc": "8867:123:8",
																"nodeType": "YulBlock",
																"src": "8867:123:8",
																"statements": [
																	{
																		"nativeSrc": "8881:28:8",
																		"nodeType": "YulAssignment",
																		"src": "8881:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8894:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8894:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8900:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8900:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8890:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8890:3:8"
																			},
																			"nativeSrc": "8890:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8890:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8881:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8881:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8940:22:8",
																			"nodeType": "YulBlock",
																			"src": "8940:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8942:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "8942:16:8"
																						},
																						"nativeSrc": "8942:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8942:18:8"
																					},
																					"nativeSrc": "8942:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "8942:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8928:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "8928:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8935:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8935:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8925:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8925:2:8"
																			},
																			"nativeSrc": "8925:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8925:14:8"
																		},
																		"nativeSrc": "8922:40:8",
																		"nodeType": "YulIf",
																		"src": "8922:40:8"
																	},
																	{
																		"nativeSrc": "8975:5:8",
																		"nodeType": "YulLeave",
																		"src": "8975:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8770:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "8770:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8776:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8776:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8767:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8767:2:8"
																				},
																				"nativeSrc": "8767:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8767:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8784:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "8784:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8794:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8794:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8781:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8781:2:8"
																				},
																				"nativeSrc": "8781:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8781:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8763:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8763:3:8"
																		},
																		"nativeSrc": "8763:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8763:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8819:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "8819:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8825:3:8",
																						"nodeType": "YulLiteral",
																						"src": "8825:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8816:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8816:2:8"
																				},
																				"nativeSrc": "8816:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8816:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8834:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "8834:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8844:2:8",
																						"nodeType": "YulLiteral",
																						"src": "8844:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8831:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8831:2:8"
																				},
																				"nativeSrc": "8831:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8831:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8812:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8812:3:8"
																		},
																		"nativeSrc": "8812:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8812:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8747:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8747:2:8"
																},
																"nativeSrc": "8747:111:8",
																"nodeType": "YulFunctionCall",
																"src": "8747:111:8"
															},
															"nativeSrc": "8744:246:8",
															"nodeType": "YulIf",
															"src": "8744:246:8"
														},
														{
															"nativeSrc": "9000:57:8",
															"nodeType": "YulAssignment",
															"src": "9000:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9034:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9034:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9037:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9037:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9043:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9043:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9053:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9053:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9015:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "9015:18:8"
																},
																"nativeSrc": "9015:42:8",
																"nodeType": "YulFunctionCall",
																"src": "9015:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9000:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9000:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "9007:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9007:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9096:22:8",
																"nodeType": "YulBlock",
																"src": "9096:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9098:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9098:16:8"
																			},
																			"nativeSrc": "9098:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9098:18:8"
																		},
																		"nativeSrc": "9098:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9098:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9073:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9073:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9084:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9084:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9089:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9089:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9080:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:8"
																		},
																		"nativeSrc": "9080:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9070:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9070:2:8"
																},
																"nativeSrc": "9070:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9070:25:8"
															},
															"nativeSrc": "9067:51:8",
															"nodeType": "YulIf",
															"src": "9067:51:8"
														},
														{
															"nativeSrc": "9127:25:8",
															"nodeType": "YulAssignment",
															"src": "9127:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9140:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9140:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9147:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9147:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9136:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9136:3:8"
																},
																"nativeSrc": "9136:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9136:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9127:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9127:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8085:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8115:4:8",
														"nodeType": "YulTypedName",
														"src": "8115:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8121:8:8",
														"nodeType": "YulTypedName",
														"src": "8121:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8131:3:8",
														"nodeType": "YulTypedName",
														"src": "8131:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8139:5:8",
														"nodeType": "YulTypedName",
														"src": "8139:5:8",
														"type": ""
													}
												],
												"src": "8085:1073:8"
											},
											{
												"body": {
													"nativeSrc": "9207:43:8",
													"nodeType": "YulBlock",
													"src": "9207:43:8",
													"statements": [
														{
															"nativeSrc": "9217:27:8",
															"nodeType": "YulAssignment",
															"src": "9217:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9232:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9232:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9239:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9239:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9228:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9228:3:8"
																},
																"nativeSrc": "9228:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9228:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9217:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9217:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9164:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9189:5:8",
														"nodeType": "YulTypedName",
														"src": "9189:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9199:7:8",
														"nodeType": "YulTypedName",
														"src": "9199:7:8",
														"type": ""
													}
												],
												"src": "9164:86:8"
											},
											{
												"body": {
													"nativeSrc": "9320:217:8",
													"nodeType": "YulBlock",
													"src": "9320:217:8",
													"statements": [
														{
															"nativeSrc": "9330:31:8",
															"nodeType": "YulAssignment",
															"src": "9330:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9356:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9356:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9338:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9338:17:8"
																},
																"nativeSrc": "9338:23:8",
																"nodeType": "YulFunctionCall",
																"src": "9338:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9330:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9330:4:8"
																}
															]
														},
														{
															"nativeSrc": "9370:37:8",
															"nodeType": "YulAssignment",
															"src": "9370:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9398:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9398:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9382:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "9382:15:8"
																},
																"nativeSrc": "9382:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9382:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9370:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "9370:8:8"
																}
															]
														},
														{
															"nativeSrc": "9417:113:8",
															"nodeType": "YulAssignment",
															"src": "9417:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9447:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9447:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9453:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9453:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9463:66:8",
																		"nodeType": "YulLiteral",
																		"src": "9463:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9426:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "9426:20:8"
																},
																"nativeSrc": "9426:104:8",
																"nodeType": "YulFunctionCall",
																"src": "9426:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9417:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9417:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9256:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9295:4:8",
														"nodeType": "YulTypedName",
														"src": "9295:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9301:8:8",
														"nodeType": "YulTypedName",
														"src": "9301:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9314:5:8",
														"nodeType": "YulTypedName",
														"src": "9314:5:8",
														"type": ""
													}
												],
												"src": "9256:281:8"
											},
											{
												"body": {
													"nativeSrc": "9591:362:8",
													"nodeType": "YulBlock",
													"src": "9591:362:8",
													"statements": [
														{
															"nativeSrc": "9601:25:8",
															"nodeType": "YulAssignment",
															"src": "9601:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9624:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9624:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9606:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9606:17:8"
																},
																"nativeSrc": "9606:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9606:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9601:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9601:1:8"
																}
															]
														},
														{
															"nativeSrc": "9635:25:8",
															"nodeType": "YulAssignment",
															"src": "9635:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9658:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9658:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9640:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9640:17:8"
																},
																"nativeSrc": "9640:20:8",
																"nodeType": "YulFunctionCall",
																"src": "9640:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9635:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "9635:1:8"
																}
															]
														},
														{
															"nativeSrc": "9669:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9669:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9692:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9692:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9695:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9695:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9688:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9688:3:8"
																},
																"nativeSrc": "9688:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9688:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9673:11:8",
																	"nodeType": "YulTypedName",
																	"src": "9673:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9706:41:8",
															"nodeType": "YulAssignment",
															"src": "9706:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9735:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "9735:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9717:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9717:17:8"
																},
																"nativeSrc": "9717:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9717:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9706:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9706:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9924:22:8",
																"nodeType": "YulBlock",
																"src": "9924:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9926:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9926:16:8"
																			},
																			"nativeSrc": "9926:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9926:18:8"
																		},
																		"nativeSrc": "9926:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9926:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9857:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9857:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9850:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9850:6:8"
																				},
																				"nativeSrc": "9850:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9850:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9880:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "9880:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9887:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "9887:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9896:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "9896:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9883:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9883:3:8"
																						},
																						"nativeSrc": "9883:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9883:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9877:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9877:2:8"
																				},
																				"nativeSrc": "9877:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9877:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9830:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9830:2:8"
																		},
																		"nativeSrc": "9830:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9830:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9810:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9810:6:8"
																},
																"nativeSrc": "9810:113:8",
																"nodeType": "YulFunctionCall",
																"src": "9810:113:8"
															},
															"nativeSrc": "9807:139:8",
															"nodeType": "YulIf",
															"src": "9807:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9543:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9574:1:8",
														"nodeType": "YulTypedName",
														"src": "9574:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9577:1:8",
														"nodeType": "YulTypedName",
														"src": "9577:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9583:7:8",
														"nodeType": "YulTypedName",
														"src": "9583:7:8",
														"type": ""
													}
												],
												"src": "9543:410:8"
											},
											{
												"body": {
													"nativeSrc": "10003:147:8",
													"nodeType": "YulBlock",
													"src": "10003:147:8",
													"statements": [
														{
															"nativeSrc": "10013:25:8",
															"nodeType": "YulAssignment",
															"src": "10013:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10036:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10036:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10018:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10018:17:8"
																},
																"nativeSrc": "10018:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10018:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10013:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10013:1:8"
																}
															]
														},
														{
															"nativeSrc": "10047:25:8",
															"nodeType": "YulAssignment",
															"src": "10047:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10070:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10070:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10052:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10052:17:8"
																},
																"nativeSrc": "10052:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10052:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10047:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10047:1:8"
																}
															]
														},
														{
															"nativeSrc": "10081:16:8",
															"nodeType": "YulAssignment",
															"src": "10081:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10092:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10092:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10095:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10095:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10088:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:8"
																},
																"nativeSrc": "10088:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10088:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10081:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10081:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10121:22:8",
																"nodeType": "YulBlock",
																"src": "10121:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10123:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10123:16:8"
																			},
																			"nativeSrc": "10123:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10123:18:8"
																		},
																		"nativeSrc": "10123:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10123:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10113:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10113:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10116:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10116:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10110:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10110:2:8"
																},
																"nativeSrc": "10110:10:8",
																"nodeType": "YulFunctionCall",
																"src": "10110:10:8"
															},
															"nativeSrc": "10107:36:8",
															"nodeType": "YulIf",
															"src": "10107:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9959:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9990:1:8",
														"nodeType": "YulTypedName",
														"src": "9990:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9993:1:8",
														"nodeType": "YulTypedName",
														"src": "9993:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9999:3:8",
														"nodeType": "YulTypedName",
														"src": "9999:3:8",
														"type": ""
													}
												],
												"src": "9959:191:8"
											},
											{
												"body": {
													"nativeSrc": "10221:53:8",
													"nodeType": "YulBlock",
													"src": "10221:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10238:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10238:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10261:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10261:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10243:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "10243:17:8"
																		},
																		"nativeSrc": "10243:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10243:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10231:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10231:6:8"
																},
																"nativeSrc": "10231:37:8",
																"nodeType": "YulFunctionCall",
																"src": "10231:37:8"
															},
															"nativeSrc": "10231:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "10231:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10156:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10209:5:8",
														"nodeType": "YulTypedName",
														"src": "10209:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10216:3:8",
														"nodeType": "YulTypedName",
														"src": "10216:3:8",
														"type": ""
													}
												],
												"src": "10156:118:8"
											},
											{
												"body": {
													"nativeSrc": "10434:288:8",
													"nodeType": "YulBlock",
													"src": "10434:288:8",
													"statements": [
														{
															"nativeSrc": "10444:26:8",
															"nodeType": "YulAssignment",
															"src": "10444:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10456:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10456:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10467:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10467:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10452:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10452:3:8"
																},
																"nativeSrc": "10452:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10452:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10444:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10444:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10524:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10524:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10537:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10537:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10548:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10548:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10533:3:8"
																		},
																		"nativeSrc": "10533:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10533:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10480:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10480:43:8"
																},
																"nativeSrc": "10480:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10480:71:8"
															},
															"nativeSrc": "10480:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10480:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10605:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10605:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10618:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10618:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10629:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10629:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10614:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10614:3:8"
																		},
																		"nativeSrc": "10614:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10614:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10561:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10561:43:8"
																},
																"nativeSrc": "10561:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10561:72:8"
															},
															"nativeSrc": "10561:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10561:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10687:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10687:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10700:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10700:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10711:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10711:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10696:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10696:3:8"
																		},
																		"nativeSrc": "10696:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10696:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10643:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10643:43:8"
																},
																"nativeSrc": "10643:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10643:72:8"
															},
															"nativeSrc": "10643:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10643:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10280:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10390:9:8",
														"nodeType": "YulTypedName",
														"src": "10390:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10402:6:8",
														"nodeType": "YulTypedName",
														"src": "10402:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10410:6:8",
														"nodeType": "YulTypedName",
														"src": "10410:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10418:6:8",
														"nodeType": "YulTypedName",
														"src": "10418:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10429:4:8",
														"nodeType": "YulTypedName",
														"src": "10429:4:8",
														"type": ""
													}
												],
												"src": "10280:442:8"
											},
											{
												"body": {
													"nativeSrc": "10826:124:8",
													"nodeType": "YulBlock",
													"src": "10826:124:8",
													"statements": [
														{
															"nativeSrc": "10836:26:8",
															"nodeType": "YulAssignment",
															"src": "10836:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10848:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10848:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10859:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10859:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10844:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10844:3:8"
																},
																"nativeSrc": "10844:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10844:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10836:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10836:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10916:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10916:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10929:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10929:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10940:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10940:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10925:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10925:3:8"
																		},
																		"nativeSrc": "10925:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10925:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10872:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10872:43:8"
																},
																"nativeSrc": "10872:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10872:71:8"
															},
															"nativeSrc": "10872:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10872:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10728:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10798:9:8",
														"nodeType": "YulTypedName",
														"src": "10798:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10810:6:8",
														"nodeType": "YulTypedName",
														"src": "10810:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10821:4:8",
														"nodeType": "YulTypedName",
														"src": "10821:4:8",
														"type": ""
													}
												],
												"src": "10728:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161285338038061285383398181016040528101906100319190610560565b336040518060400160405280600a81526020017f54616d626f546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544254000000000000000000000000000000000000000000000000000000000081525081600390816100ad91906107cf565b5080600490816100bd91906107cf565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012791906108dd565b60405180910390fd5b61013f816101c060201b60201c565b505f600560146101000a81548160ff02191690831515021790555061016861028360201b60201c565b600a6101749190610a5e565b8161017f9190610aa8565b6006819055506101b93361019761028360201b60201c565b600a6101a39190610a5e565b846101ae9190610aa8565b61028b60201b60201c565b5050610b79565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102fb575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102f291906108dd565b60405180910390fd5b61030c5f838361031060201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610360578060025f8282546103549190610ae9565b9250508190555061042e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103e9578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103e093929190610b2b565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610475578060025f82825403925050819055506104bf565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161051c9190610b60565b60405180910390a3505050565b5f80fd5b5f819050919050565b61053f8161052d565b8114610549575f80fd5b50565b5f8151905061055a81610536565b92915050565b5f806040838503121561057657610575610529565b5b5f6105838582860161054c565b92505060206105948582860161054c565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061061957607f821691505b60208210810361062c5761062b6105d5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261068e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610653565b6106988683610653565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6106d36106ce6106c98461052d565b6106b0565b61052d565b9050919050565b5f819050919050565b6106ec836106b9565b6107006106f8826106da565b84845461065f565b825550505050565b5f90565b610714610708565b61071f8184846106e3565b505050565b5b81811015610742576107375f8261070c565b600181019050610725565b5050565b601f8211156107875761075881610632565b61076184610644565b81016020851015610770578190505b61078461077c85610644565b830182610724565b50505b505050565b5f82821c905092915050565b5f6107a75f198460080261078c565b1980831691505092915050565b5f6107bf8383610798565b9150826002028217905092915050565b6107d88261059e565b67ffffffffffffffff8111156107f1576107f06105a8565b5b6107fb8254610602565b610806828285610746565b5f60209050601f831160018114610837575f8415610825578287015190505b61082f85826107b4565b865550610896565b601f19841661084586610632565b5f5b8281101561086c57848901518255600182019150602085019450602081019050610847565b868310156108895784890151610885601f891682610798565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108c78261089e565b9050919050565b6108d7816108bd565b82525050565b5f6020820190506108f05f8301846108ce565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111561097857808604811115610954576109536108f6565b5b60018516156109635780820291505b808102905061097185610923565b9450610938565b94509492505050565b5f826109905760019050610a4b565b8161099d575f9050610a4b565b81600181146109b357600281146109bd576109ec565b6001915050610a4b565b60ff8411156109cf576109ce6108f6565b5b8360020a9150848211156109e6576109e56108f6565b5b50610a4b565b5060208310610133831016604e8410600b8410161715610a215782820a905083811115610a1c57610a1b6108f6565b5b610a4b565b610a2e848484600161092f565b92509050818404811115610a4557610a446108f6565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610a688261052d565b9150610a7383610a52565b9250610aa07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610981565b905092915050565b5f610ab28261052d565b9150610abd8361052d565b9250828202610acb8161052d565b91508282048414831517610ae257610ae16108f6565b5b5092915050565b5f610af38261052d565b9150610afe8361052d565b9250828201905080821115610b1657610b156108f6565b5b92915050565b610b258161052d565b82525050565b5f606082019050610b3e5f8301866108ce565b610b4b6020830185610b1c565b610b586040830184610b1c565b949350505050565b5f602082019050610b735f830184610b1c565b92915050565b611ccd80610b865f395ff3fe608060405234801561000f575f80fd5b5060043610610156575f3560e01c80637547c7a3116100c1578063a6e158f81161007a578063a6e158f81461038e578063a9059cbb146103aa578063bec3fa17146103da578063d5abeb01146103f6578063dd62ed3e14610414578063f2fde38b1461044457610156565b80637547c7a3146102e057806381a4af15146102fc5780638456cb59146103185780638da5cb5b1461032257806395d89b4114610340578063a5b39cfb1461035e57610156565b8063499d7f9611610113578063499d7f961461021e5780635c975abb1461024e57806364ab86751461026c5780636b69e05b1461029c57806370a08231146102a6578063715018a6146102d657610156565b806306fdde031461015a578063095ea7b31461017857806318160ddd146101a857806323b872dd146101c6578063313ce567146101f65780633f4ba83a14610214575b5f80fd5b610162610460565b60405161016f919061148a565b60405180910390f35b610192600480360381019061018d919061153b565b6104f0565b60405161019f9190611593565b60405180910390f35b6101b0610512565b6040516101bd91906115bb565b60405180910390f35b6101e060048036038101906101db91906115d4565b61051b565b6040516101ed9190611593565b60405180910390f35b6101fe610549565b60405161020b919061163f565b60405180910390f35b61021c610551565b005b61023860048036038101906102339190611658565b610563565b60405161024591906115bb565b60405180910390f35b610256610578565b6040516102639190611593565b60405180910390f35b61028660048036038101906102819190611658565b61058e565b60405161029391906115bb565b60405180910390f35b6102a46105e0565b005b6102c060048036038101906102bb9190611658565b610685565b6040516102cd91906115bb565b60405180910390f35b6102de6106ca565b005b6102fa60048036038101906102f59190611683565b6106dd565b005b6103166004803603810190610311919061153b565b6107ea565b005b610320610882565b005b61032a610894565b60405161033791906116bd565b60405180910390f35b6103486108bc565b604051610355919061148a565b60405180910390f35b61037860048036038101906103739190611658565b61094c565b60405161038591906115bb565b60405180910390f35b6103a860048036038101906103a39190611683565b610961565b005b6103c460048036038101906103bf919061153b565b610994565b6040516103d19190611593565b60405180910390f35b6103f460048036038101906103ef919061153b565b6109b6565b005b6103fe6109eb565b60405161040b91906115bb565b60405180910390f35b61042e600480360381019061042991906116d6565b6109f1565b60405161043b91906115bb565b60405180910390f35b61045e60048036038101906104599190611658565b610a73565b005b60606003805461046f90611741565b80601f016020809104026020016040519081016040528092919081815260200182805461049b90611741565b80156104e65780601f106104bd576101008083540402835291602001916104e6565b820191905f5260205f20905b8154815290600101906020018083116104c957829003601f168201915b5050505050905090565b5f806104fa610af7565b9050610507818585610afe565b600191505092915050565b5f600254905090565b5f80610525610af7565b9050610532858285610b10565b61053d858585610ba2565b60019150509392505050565b5f6012905090565b610559610c92565b610561610d19565b565b6008602052805f5260405f205f915090505481565b5f600560149054906101000a900460ff16905090565b5f600a60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546105d991906117cb565b9050919050565b6105e8610d7b565b5f6105f23361058e565b90505f8111610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d9061186b565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506106823382610dc5565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106d2610c92565b6106db5f610e44565b565b6106e5610d7b565b6106ed610549565b600a6106f991906119b8565b816107049190611a02565b61070d33610685565b101561074e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074590611ab3565b60405180910390fd5b6107763361075a610549565b600a61076691906119b8565b836107719190611a02565b610f07565b61077e610549565b600a61078a91906119b8565b816107959190611a02565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107e09190611ad1565b9250508190555050565b6107f2610c92565b6107fa610d7b565b5f610803610549565b600a61080f91906119b8565b8261081a9190611a02565b905060065481610828610512565b6108329190611ad1565b1115610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086a90611b74565b60405180910390fd5b61087d8382610dc5565b505050565b61088a610c92565b610892610f86565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108cb90611741565b80601f01602080910402602001604051908101604052809291908181526020018280546108f790611741565b80156109425780601f1061091957610100808354040283529160200191610942565b820191905f5260205f20905b81548152906001019060200180831161092557829003601f168201915b5050505050905090565b6007602052805f5260405f205f915090505481565b610969610d7b565b61099133610975610549565b600a61098191906119b8565b8361098c9190611a02565b610f07565b50565b5f8061099e610af7565b90506109ab818585610ba2565b600191505092915050565b6109be610d7b565b6109e6826109ca610549565b600a6109d691906119b8565b836109e19190611a02565b610994565b505050565b60065481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610a7b610c92565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aeb575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ae291906116bd565b60405180910390fd5b610af481610e44565b50565b5f33905090565b610b0b8383836001610fe9565b505050565b5f610b1b84846109f1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b9c5781811015610b8d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b8493929190611b92565b60405180910390fd5b610b9b84848484035f610fe9565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c12575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c0991906116bd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c82575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c7991906116bd565b60405180910390fd5b610c8d8383836111b8565b505050565b610c9a610af7565b73ffffffffffffffffffffffffffffffffffffffff16610cb8610894565b73ffffffffffffffffffffffffffffffffffffffff1614610d1757610cdb610af7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d0e91906116bd565b60405180910390fd5b565b610d216113d1565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610d64610af7565b604051610d7191906116bd565b60405180910390a1565b610d83610578565b15610dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dba90611c11565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e35575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e2c91906116bd565b60405180910390fd5b610e405f83836111b8565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f77575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f6e91906116bd565b60405180910390fd5b610f82825f836111b8565b5050565b610f8e610d7b565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fd2610af7565b604051610fdf91906116bd565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611059575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161105091906116bd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110c9575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110c091906116bd565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111b2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111a991906115bb565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611208578060025f8282546111fc9190611ad1565b925050819055506112d6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611291578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161128893929190611b92565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361131d578060025f8282540392505081905550611367565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113c491906115bb565b60405180910390a3505050565b6113d9610578565b611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140f90611c79565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61145c8261141a565b6114668185611424565b9350611476818560208601611434565b61147f81611442565b840191505092915050565b5f6020820190508181035f8301526114a28184611452565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114d7826114ae565b9050919050565b6114e7816114cd565b81146114f1575f80fd5b50565b5f81359050611502816114de565b92915050565b5f819050919050565b61151a81611508565b8114611524575f80fd5b50565b5f8135905061153581611511565b92915050565b5f8060408385031215611551576115506114aa565b5b5f61155e858286016114f4565b925050602061156f85828601611527565b9150509250929050565b5f8115159050919050565b61158d81611579565b82525050565b5f6020820190506115a65f830184611584565b92915050565b6115b581611508565b82525050565b5f6020820190506115ce5f8301846115ac565b92915050565b5f805f606084860312156115eb576115ea6114aa565b5b5f6115f8868287016114f4565b9350506020611609868287016114f4565b925050604061161a86828701611527565b9150509250925092565b5f60ff82169050919050565b61163981611624565b82525050565b5f6020820190506116525f830184611630565b92915050565b5f6020828403121561166d5761166c6114aa565b5b5f61167a848285016114f4565b91505092915050565b5f60208284031215611698576116976114aa565b5b5f6116a584828501611527565b91505092915050565b6116b7816114cd565b82525050565b5f6020820190506116d05f8301846116ae565b92915050565b5f80604083850312156116ec576116eb6114aa565b5b5f6116f9858286016114f4565b925050602061170a858286016114f4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061175857607f821691505b60208210810361176b5761176a611714565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117d582611508565b91506117e083611508565b9250826117f0576117ef611771565b5b828204905092915050565b7f4e6f207469656e6573207265636f6d70656e7361732070656e6469656e7465735f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611855602183611424565b9150611860826117fb565b604082019050919050565b5f6020820190508181035f83015261188281611849565b9050919050565b5f8160011c9050919050565b5f808291508390505b60018511156118de578086048111156118ba576118b961179e565b5b60018516156118c95780820291505b80810290506118d785611889565b945061189e565b94509492505050565b5f826118f657600190506119b1565b81611903575f90506119b1565b8160018114611919576002811461192357611952565b60019150506119b1565b60ff8411156119355761193461179e565b5b8360020a91508482111561194c5761194b61179e565b5b506119b1565b5060208310610133831016604e8410600b84101617156119875782820a9050838111156119825761198161179e565b5b6119b1565b6119948484846001611895565b925090508184048111156119ab576119aa61179e565b5b81810290505b9392505050565b5f6119c282611508565b91506119cd83611624565b92506119fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846118e7565b905092915050565b5f611a0c82611508565b9150611a1783611508565b9250828202611a2581611508565b91508282048414831517611a3c57611a3b61179e565b5b5092915050565b7f4e6f207469656e657320737566696369656e74657320746f6b656e73207061725f8201527f61206861636572207374616b696e672e00000000000000000000000000000000602082015250565b5f611a9d603083611424565b9150611aa882611a43565b604082019050919050565b5f6020820190508181035f830152611aca81611a91565b9050919050565b5f611adb82611508565b9150611ae683611508565b9250828201905080821115611afe57611afd61179e565b5b92915050565b7f4e6f2073652070756564656e206163756e696172206d617320746f6b656e732c5f8201527f2073652065786365646520656c206d6178696d6f2e0000000000000000000000602082015250565b5f611b5e603583611424565b9150611b6982611b04565b604082019050919050565b5f6020820190508181035f830152611b8b81611b52565b9050919050565b5f606082019050611ba55f8301866116ae565b611bb260208301856115ac565b611bbf60408301846115ac565b949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f611bfb601083611424565b9150611c0682611bc7565b602082019050919050565b5f6020820190508181035f830152611c2881611bef565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611c63601483611424565b9150611c6e82611c2f565b602082019050919050565b5f6020820190508181035f830152611c9081611c57565b905091905056fea26469706673582212205b53c6c796d8343d8516514998be4a42d5ccb016e5996ddd6cf8f886b37707e364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2853 CODESIZE SUB DUP1 PUSH2 0x2853 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x560 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54616D626F546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5442540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x7CF JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7CF JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x1C0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x168 PUSH2 0x283 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x174 SWAP2 SWAP1 PUSH2 0xA5E JUMP JUMPDEST DUP2 PUSH2 0x17F SWAP2 SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x1B9 CALLER PUSH2 0x197 PUSH2 0x283 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xA5E JUMP JUMPDEST DUP5 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x28B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xB79 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2FB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30C PUSH0 DUP4 DUP4 PUSH2 0x310 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x360 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x42E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3E9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x475 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4BF JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53F DUP2 PUSH2 0x52D JUMP JUMPDEST DUP2 EQ PUSH2 0x549 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x55A DUP2 PUSH2 0x536 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x576 JUMPI PUSH2 0x575 PUSH2 0x529 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x583 DUP6 DUP3 DUP7 ADD PUSH2 0x54C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x594 DUP6 DUP3 DUP7 ADD PUSH2 0x54C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x619 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x62C JUMPI PUSH2 0x62B PUSH2 0x5D5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x68E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x653 JUMP JUMPDEST PUSH2 0x698 DUP7 DUP4 PUSH2 0x653 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6D3 PUSH2 0x6CE PUSH2 0x6C9 DUP5 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6EC DUP4 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x700 PUSH2 0x6F8 DUP3 PUSH2 0x6DA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x65F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x714 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x71F DUP2 DUP5 DUP5 PUSH2 0x6E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH2 0x737 PUSH0 DUP3 PUSH2 0x70C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x725 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x787 JUMPI PUSH2 0x758 DUP2 PUSH2 0x632 JUMP JUMPDEST PUSH2 0x761 DUP5 PUSH2 0x644 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x770 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x784 PUSH2 0x77C DUP6 PUSH2 0x644 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x724 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7A7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x78C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7BF DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D8 DUP3 PUSH2 0x59E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7F1 JUMPI PUSH2 0x7F0 PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST PUSH2 0x7FB DUP3 SLOAD PUSH2 0x602 JUMP JUMPDEST PUSH2 0x806 DUP3 DUP3 DUP6 PUSH2 0x746 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x837 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x825 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x82F DUP6 DUP3 PUSH2 0x7B4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x845 DUP7 PUSH2 0x632 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x86C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x847 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x889 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x885 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x798 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8C7 DUP3 PUSH2 0x89E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8D7 DUP2 PUSH2 0x8BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x8CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x978 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x954 JUMPI PUSH2 0x953 PUSH2 0x8F6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x963 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x971 DUP6 PUSH2 0x923 JUMP JUMPDEST SWAP5 POP PUSH2 0x938 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x990 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xA4B JUMP JUMPDEST DUP2 PUSH2 0x99D JUMPI PUSH0 SWAP1 POP PUSH2 0xA4B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x9B3 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9BD JUMPI PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA4B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x9CF JUMPI PUSH2 0x9CE PUSH2 0x8F6 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x9E6 JUMPI PUSH2 0x9E5 PUSH2 0x8F6 JUMP JUMPDEST JUMPDEST POP PUSH2 0xA4B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA21 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1B PUSH2 0x8F6 JUMP JUMPDEST JUMPDEST PUSH2 0xA4B JUMP JUMPDEST PUSH2 0xA2E DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x92F JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xA45 JUMPI PUSH2 0xA44 PUSH2 0x8F6 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA68 DUP3 PUSH2 0x52D JUMP JUMPDEST SWAP2 POP PUSH2 0xA73 DUP4 PUSH2 0xA52 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x981 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAB2 DUP3 PUSH2 0x52D JUMP JUMPDEST SWAP2 POP PUSH2 0xABD DUP4 PUSH2 0x52D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xACB DUP2 PUSH2 0x52D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xAE2 JUMPI PUSH2 0xAE1 PUSH2 0x8F6 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAF3 DUP3 PUSH2 0x52D JUMP JUMPDEST SWAP2 POP PUSH2 0xAFE DUP4 PUSH2 0x52D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB16 JUMPI PUSH2 0xB15 PUSH2 0x8F6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB25 DUP2 PUSH2 0x52D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB3E PUSH0 DUP4 ADD DUP7 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0xB4B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB1C JUMP JUMPDEST PUSH2 0xB58 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB1C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB73 PUSH0 DUP4 ADD DUP5 PUSH2 0xB1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CCD DUP1 PUSH2 0xB86 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7547C7A3 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA6E158F8 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA6E158F8 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x444 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x81A4AF15 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xA5B39CFB EQ PUSH2 0x35E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x499D7F96 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x499D7F96 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x64AB8675 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x6B69E05B EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D6 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x214 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x551 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH2 0x6CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH2 0x882 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32A PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FE PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x46F SWAP1 PUSH2 0x1741 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x1741 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4FA PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP2 DUP6 DUP6 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x525 PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x532 DUP6 DUP3 DUP6 PUSH2 0xB10 JUMP JUMPDEST PUSH2 0x53D DUP6 DUP6 DUP6 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x559 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x561 PUSH2 0xD19 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E8 PUSH2 0xD7B JUMP JUMPDEST PUSH0 PUSH2 0x5F2 CALLER PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62D SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x682 CALLER DUP3 PUSH2 0xDC5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x6DB PUSH0 PUSH2 0xE44 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6E5 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x6ED PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP2 PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x70D CALLER PUSH2 0x685 JUMP JUMPDEST LT ISZERO PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x745 SWAP1 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x776 CALLER PUSH2 0x75A PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP4 PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x77E PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x78A SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP2 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x7F2 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x7FA PUSH2 0xD7B JUMP JUMPDEST PUSH0 PUSH2 0x803 PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x80F SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP3 PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 PUSH2 0x828 PUSH2 0x512 JUMP JUMPDEST PUSH2 0x832 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST GT ISZERO PUSH2 0x873 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86A SWAP1 PUSH2 0x1B74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87D DUP4 DUP3 PUSH2 0xDC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x88A PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x892 PUSH2 0xF86 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8CB SWAP1 PUSH2 0x1741 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F7 SWAP1 PUSH2 0x1741 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x942 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x919 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x942 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x925 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x969 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x991 CALLER PUSH2 0x975 PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP4 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x99E PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x9AB DUP2 DUP6 DUP6 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9BE PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x9E6 DUP3 PUSH2 0x9CA PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x9D6 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP4 PUSH2 0x9E1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA7B PUSH2 0xC92 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF4 DUP2 PUSH2 0xE44 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB0B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFE9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB1B DUP5 DUP5 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB9C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB8D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB84 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFE9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8D DUP4 DUP4 DUP4 PUSH2 0x11B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC9A PUSH2 0xAF7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB8 PUSH2 0x894 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD17 JUMPI PUSH2 0xCDB PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0E SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xD21 PUSH2 0x13D1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xD64 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD71 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD83 PUSH2 0x578 JUMP JUMPDEST ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBA SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE35 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE40 PUSH0 DUP4 DUP4 PUSH2 0x11B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF77 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6E SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF82 DUP3 PUSH0 DUP4 PUSH2 0x11B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF8E PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFD2 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFDF SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1059 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1050 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11B2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1208 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11FC SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12D6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1291 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x131D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1367 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13D9 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1418 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140F SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x145C DUP3 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x1466 DUP2 DUP6 PUSH2 0x1424 JUMP JUMPDEST SWAP4 POP PUSH2 0x1476 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x147F DUP2 PUSH2 0x1442 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14A2 DUP2 DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14D7 DUP3 PUSH2 0x14AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E7 DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP2 EQ PUSH2 0x14F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1502 DUP2 PUSH2 0x14DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151A DUP2 PUSH2 0x1508 JUMP JUMPDEST DUP2 EQ PUSH2 0x1524 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1535 DUP2 PUSH2 0x1511 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x155E DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x156F DUP6 DUP3 DUP7 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158D DUP2 PUSH2 0x1579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x1508 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CE PUSH0 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F8 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1609 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x161A DUP7 DUP3 DUP8 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1639 DUP2 PUSH2 0x1624 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1652 PUSH0 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x166D JUMPI PUSH2 0x166C PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x167A DUP5 DUP3 DUP6 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1698 JUMPI PUSH2 0x1697 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16A5 DUP5 DUP3 DUP6 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B7 DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x16AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16EC JUMPI PUSH2 0x16EB PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F9 DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x170A DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1758 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x176B JUMPI PUSH2 0x176A PUSH2 0x1714 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17D5 DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x17E0 DUP4 PUSH2 0x1508 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x17F0 JUMPI PUSH2 0x17EF PUSH2 0x1771 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207469656E6573207265636F6D70656E7361732070656E6469656E746573 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1855 PUSH1 0x21 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0x1860 DUP3 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1882 DUP2 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x18DE JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18B9 PUSH2 0x179E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x18C9 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x18D7 DUP6 PUSH2 0x1889 JUMP JUMPDEST SWAP5 POP PUSH2 0x189E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x18F6 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x19B1 JUMP JUMPDEST DUP2 PUSH2 0x1903 JUMPI PUSH0 SWAP1 POP PUSH2 0x19B1 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1919 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1923 JUMPI PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1935 JUMPI PUSH2 0x1934 PUSH2 0x179E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x194C JUMPI PUSH2 0x194B PUSH2 0x179E JUMP JUMPDEST JUMPDEST POP PUSH2 0x19B1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1987 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1982 JUMPI PUSH2 0x1981 PUSH2 0x179E JUMP JUMPDEST JUMPDEST PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x1994 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1895 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x19AB JUMPI PUSH2 0x19AA PUSH2 0x179E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19C2 DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CD DUP4 PUSH2 0x1624 JUMP JUMPDEST SWAP3 POP PUSH2 0x19FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x18E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0C DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A17 DUP4 PUSH2 0x1508 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A25 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A3C JUMPI PUSH2 0x1A3B PUSH2 0x179E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207469656E657320737566696369656E74657320746F6B656E7320706172 PUSH0 DUP3 ADD MSTORE PUSH32 0x61206861636572207374616B696E672E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A9D PUSH1 0x30 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA8 DUP3 PUSH2 0x1A43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ACA DUP2 PUSH2 0x1A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ADB DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE6 DUP4 PUSH2 0x1508 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AFE JUMPI PUSH2 0x1AFD PUSH2 0x179E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2073652070756564656E206163756E696172206D617320746F6B656E732C PUSH0 DUP3 ADD MSTORE PUSH32 0x2073652065786365646520656C206D6178696D6F2E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5E PUSH1 0x35 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B69 DUP3 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B8B DUP2 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BA5 PUSH0 DUP4 ADD DUP7 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x1BB2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x1BBF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFB PUSH1 0x10 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C06 DUP3 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C28 DUP2 PUSH2 0x1BEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C63 PUSH1 0x14 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6E DUP3 PUSH2 0x1C2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C90 DUP2 PUSH2 0x1C57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST MSTORE8 0xC6 0xC7 SWAP7 0xD8 CALLVALUE RETURNDATASIZE DUP6 AND MLOAD BLOBHASH SWAP9 0xBE BLOBBASEFEE TIMESTAMP 0xD5 0xCC 0xB0 AND 0xE5 SWAP10 PUSH14 0xDD6CF8F886B37707E364736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "289:3224:7:-:0;;;596:310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;686:10;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;741:10:7::2;:8;;;:10;;:::i;:::-;735:2;:16;;;;:::i;:::-;721:10;:31;;;;:::i;:::-;709:9;:43;;;;798:53;804:10;839;:8;;;:10;;:::i;:::-;833:2;:16;;;;:::i;:::-;816:13;:34;;;;:::i;:::-;798:5;;;:53;;:::i;:::-;596:310:::0;;289:3224;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;1207:99::-;1259:6;1293:5;1287:12;1277:22;;1207:99;;;:::o;1312:180::-;1360:77;1357:1;1350:88;1457:4;1454:1;1447:15;1481:4;1478:1;1471:15;1498:180;1546:77;1543:1;1536:88;1643:4;1640:1;1633:15;1667:4;1664:1;1657:15;1684:320;1728:6;1765:1;1759:4;1755:12;1745:22;;1812:1;1806:4;1802:12;1833:18;1823:81;;1889:4;1881:6;1877:17;1867:27;;1823:81;1951:2;1943:6;1940:14;1920:18;1917:38;1914:84;;1970:18;;:::i;:::-;1914:84;1735:269;1684:320;;;:::o;2010:141::-;2059:4;2082:3;2074:11;;2105:3;2102:1;2095:14;2139:4;2136:1;2126:18;2118:26;;2010:141;;;:::o;2157:93::-;2194:6;2241:2;2236;2229:5;2225:14;2221:23;2211:33;;2157:93;;;:::o;2256:107::-;2300:8;2350:5;2344:4;2340:16;2319:37;;2256:107;;;;:::o;2369:393::-;2438:6;2488:1;2476:10;2472:18;2511:97;2541:66;2530:9;2511:97;:::i;:::-;2629:39;2659:8;2648:9;2629:39;:::i;:::-;2617:51;;2701:4;2697:9;2690:5;2686:21;2677:30;;2750:4;2740:8;2736:19;2729:5;2726:30;2716:40;;2445:317;;2369:393;;;;;:::o;2768:60::-;2796:3;2817:5;2810:12;;2768:60;;;:::o;2834:142::-;2884:9;2917:53;2935:34;2944:24;2962:5;2944:24;:::i;:::-;2935:34;:::i;:::-;2917:53;:::i;:::-;2904:66;;2834:142;;;:::o;2982:75::-;3025:3;3046:5;3039:12;;2982:75;;;:::o;3063:269::-;3173:39;3204:7;3173:39;:::i;:::-;3234:91;3283:41;3307:16;3283:41;:::i;:::-;3275:6;3268:4;3262:11;3234:91;:::i;:::-;3228:4;3221:105;3139:193;3063:269;;;:::o;3338:73::-;3383:3;3338:73;:::o;3417:189::-;3494:32;;:::i;:::-;3535:65;3593:6;3585;3579:4;3535:65;:::i;:::-;3470:136;3417:189;;:::o;3612:186::-;3672:120;3689:3;3682:5;3679:14;3672:120;;;3743:39;3780:1;3773:5;3743:39;:::i;:::-;3716:1;3709:5;3705:13;3696:22;;3672:120;;;3612:186;;:::o;3804:543::-;3905:2;3900:3;3897:11;3894:446;;;3939:38;3971:5;3939:38;:::i;:::-;4023:29;4041:10;4023:29;:::i;:::-;4013:8;4009:44;4206:2;4194:10;4191:18;4188:49;;;4227:8;4212:23;;4188:49;4250:80;4306:22;4324:3;4306:22;:::i;:::-;4296:8;4292:37;4279:11;4250:80;:::i;:::-;3909:431;;3894:446;3804:543;;;:::o;4353:117::-;4407:8;4457:5;4451:4;4447:16;4426:37;;4353:117;;;;:::o;4476:169::-;4520:6;4553:51;4601:1;4597:6;4589:5;4586:1;4582:13;4553:51;:::i;:::-;4549:56;4634:4;4628;4624:15;4614:25;;4527:118;4476:169;;;;:::o;4650:295::-;4726:4;4872:29;4897:3;4891:4;4872:29;:::i;:::-;4864:37;;4934:3;4931:1;4927:11;4921:4;4918:21;4910:29;;4650:295;;;;:::o;4950:1395::-;5067:37;5100:3;5067:37;:::i;:::-;5169:18;5161:6;5158:30;5155:56;;;5191:18;;:::i;:::-;5155:56;5235:38;5267:4;5261:11;5235:38;:::i;:::-;5320:67;5380:6;5372;5366:4;5320:67;:::i;:::-;5414:1;5438:4;5425:17;;5470:2;5462:6;5459:14;5487:1;5482:618;;;;6144:1;6161:6;6158:77;;;6210:9;6205:3;6201:19;6195:26;6186:35;;6158:77;6261:67;6321:6;6314:5;6261:67;:::i;:::-;6255:4;6248:81;6117:222;5452:887;;5482:618;5534:4;5530:9;5522:6;5518:22;5568:37;5600:4;5568:37;:::i;:::-;5627:1;5641:208;5655:7;5652:1;5649:14;5641:208;;;5734:9;5729:3;5725:19;5719:26;5711:6;5704:42;5785:1;5777:6;5773:14;5763:24;;5832:2;5821:9;5817:18;5804:31;;5678:4;5675:1;5671:12;5666:17;;5641:208;;;5877:6;5868:7;5865:19;5862:179;;;5935:9;5930:3;5926:19;5920:26;5978:48;6020:4;6012:6;6008:17;5997:9;5978:48;:::i;:::-;5970:6;5963:64;5885:156;5862:179;6087:1;6083;6075:6;6071:14;6067:22;6061:4;6054:36;5489:611;;;5452:887;;5042:1303;;;4950:1395;;:::o;6351:126::-;6388:7;6428:42;6421:5;6417:54;6406:65;;6351:126;;;:::o;6483:96::-;6520:7;6549:24;6567:5;6549:24;:::i;:::-;6538:35;;6483:96;;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:180::-;6985:77;6982:1;6975:88;7082:4;7079:1;7072:15;7106:4;7103:1;7096:15;7123:102;7165:8;7212:5;7209:1;7205:13;7184:34;;7123:102;;;:::o;7231:848::-;7292:5;7299:4;7323:6;7314:15;;7347:5;7338:14;;7361:712;7382:1;7372:8;7369:15;7361:712;;;7477:4;7472:3;7468:14;7462:4;7459:24;7456:50;;;7486:18;;:::i;:::-;7456:50;7536:1;7526:8;7522:16;7519:451;;;7951:4;7944:5;7940:16;7931:25;;7519:451;8001:4;7995;7991:15;7983:23;;8031:32;8054:8;8031:32;:::i;:::-;8019:44;;7361:712;;;7231:848;;;;;;;:::o;8085:1073::-;8139:5;8330:8;8320:40;;8351:1;8342:10;;8353:5;;8320:40;8379:4;8369:36;;8396:1;8387:10;;8398:5;;8369:36;8465:4;8513:1;8508:27;;;;8549:1;8544:191;;;;8458:277;;8508:27;8526:1;8517:10;;8528:5;;;8544:191;8589:3;8579:8;8576:17;8573:43;;;8596:18;;:::i;:::-;8573:43;8645:8;8642:1;8638:16;8629:25;;8680:3;8673:5;8670:14;8667:40;;;8687:18;;:::i;:::-;8667:40;8720:5;;;8458:277;;8844:2;8834:8;8831:16;8825:3;8819:4;8816:13;8812:36;8794:2;8784:8;8781:16;8776:2;8770:4;8767:12;8763:35;8747:111;8744:246;;;8900:8;8894:4;8890:19;8881:28;;8935:3;8928:5;8925:14;8922:40;;;8942:18;;:::i;:::-;8922:40;8975:5;;8744:246;9015:42;9053:3;9043:8;9037:4;9034:1;9015:42;:::i;:::-;9000:57;;;;9089:4;9084:3;9080:14;9073:5;9070:25;9067:51;;;9098:18;;:::i;:::-;9067:51;9147:4;9140:5;9136:16;9127:25;;8085:1073;;;;;;:::o;9164:86::-;9199:7;9239:4;9232:5;9228:16;9217:27;;9164:86;;;:::o;9256:281::-;9314:5;9338:23;9356:4;9338:23;:::i;:::-;9330:31;;9382:25;9398:8;9382:25;:::i;:::-;9370:37;;9426:104;9463:66;9453:8;9447:4;9426:104;:::i;:::-;9417:113;;9256:281;;;;:::o;9543:410::-;9583:7;9606:20;9624:1;9606:20;:::i;:::-;9601:25;;9640:20;9658:1;9640:20;:::i;:::-;9635:25;;9695:1;9692;9688:9;9717:30;9735:11;9717:30;:::i;:::-;9706:41;;9896:1;9887:7;9883:15;9880:1;9877:22;9857:1;9850:9;9830:83;9807:139;;9926:18;;:::i;:::-;9807:139;9591:362;9543:410;;;;:::o;9959:191::-;9999:3;10018:20;10036:1;10018:20;:::i;:::-;10013:25;;10052:20;10070:1;10052:20;:::i;:::-;10047:25;;10095:1;10092;10088:9;10081:16;;10116:3;10113:1;10110:10;10107:36;;;10123:18;;:::i;:::-;10107:36;9959:191;;;;:::o;10156:118::-;10243:24;10261:5;10243:24;:::i;:::-;10238:3;10231:37;10156:118;;:::o;10280:442::-;10429:4;10467:2;10456:9;10452:18;10444:26;;10480:71;10548:1;10537:9;10533:17;10524:6;10480:71;:::i;:::-;10561:72;10629:2;10618:9;10614:18;10605:6;10561:72;:::i;:::-;10643;10711:2;10700:9;10696:18;10687:6;10643:72;:::i;:::-;10280:442;;;;;;:::o;10728:222::-;10821:4;10859:2;10848:9;10844:18;10836:26;;10872:71;10940:1;10929:9;10925:17;10916:6;10872:71;:::i;:::-;10728:222;;;;:::o;289:3224:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_798": {
									"entryPoint": 2814,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_858": {
									"entryPoint": 4073,
									"id": 858,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_780": {
									"entryPoint": 3847,
									"id": 780,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3218,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_747": {
									"entryPoint": 3525,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1023": {
									"entryPoint": 2807,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_375": {
									"entryPoint": 3974,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 3451,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 5073,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_906": {
									"entryPoint": 2832,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3652,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_637": {
									"entryPoint": 2978,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 3353,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_714": {
									"entryPoint": 4536,
									"id": 714,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_534": {
									"entryPoint": 2545,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_558": {
									"entryPoint": 1264,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_493": {
									"entryPoint": 1669,
									"id": 493,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateRewards_1292": {
									"entryPoint": 1422,
									"id": 1292,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimStakingRewards_1278": {
									"entryPoint": 1504,
									"id": 1278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_471": {
									"entryPoint": 1353,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maxSupply_1054": {
									"entryPoint": 2539,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_453": {
									"entryPoint": 1120,
									"id": 453,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2196,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1187": {
									"entryPoint": 2178,
									"id": 1187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": 1400,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@redeemTokens_1157": {
									"entryPoint": 2401,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1738,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardTokens_1137": {
									"entryPoint": 2026,
									"id": 1137,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakeTokens_1245": {
									"entryPoint": 1757,
									"id": 1245,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedTokens_1058": {
									"entryPoint": 2380,
									"id": 1058,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingRewards_1062": {
									"entryPoint": 1379,
									"id": 1062,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_462": {
									"entryPoint": 2236,
									"id": 462,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_480": {
									"entryPoint": 1298,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_590": {
									"entryPoint": 1307,
									"id": 590,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2675,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferTokens_1178": {
									"entryPoint": 2486,
									"id": 1178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transfer_517": {
									"entryPoint": 2452,
									"id": 517,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1196": {
									"entryPoint": 1361,
									"id": 1196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7058,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 6584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5172,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6046,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5290,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 7215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 7111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26": {
									"entryPoint": 6139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114": {
									"entryPoint": 6916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38": {
									"entryPoint": 6723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15755:8",
										"nodeType": "YulBlock",
										"src": "0:15755:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4359:43:8",
													"nodeType": "YulBlock",
													"src": "4359:43:8",
													"statements": [
														{
															"nativeSrc": "4369:27:8",
															"nodeType": "YulAssignment",
															"src": "4369:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:8"
																},
																"nativeSrc": "4380:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:8",
														"nodeType": "YulTypedName",
														"src": "4341:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:8",
														"nodeType": "YulTypedName",
														"src": "4351:7:8",
														"type": ""
													}
												],
												"src": "4316:86:8"
											},
											{
												"body": {
													"nativeSrc": "4469:51:8",
													"nodeType": "YulBlock",
													"src": "4469:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:8"
																		},
																		"nativeSrc": "4491:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:8"
																},
																"nativeSrc": "4479:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:8"
															},
															"nativeSrc": "4479:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:8",
														"nodeType": "YulTypedName",
														"src": "4457:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:8",
														"nodeType": "YulTypedName",
														"src": "4464:3:8",
														"type": ""
													}
												],
												"src": "4408:112:8"
											},
											{
												"body": {
													"nativeSrc": "4620:120:8",
													"nodeType": "YulBlock",
													"src": "4620:120:8",
													"statements": [
														{
															"nativeSrc": "4630:26:8",
															"nodeType": "YulAssignment",
															"src": "4630:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:8"
																},
																"nativeSrc": "4638:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:8"
																		},
																		"nativeSrc": "4715:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:8"
																},
																"nativeSrc": "4666:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:8"
															},
															"nativeSrc": "4666:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:8",
														"nodeType": "YulTypedName",
														"src": "4592:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:8",
														"nodeType": "YulTypedName",
														"src": "4604:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:8",
														"nodeType": "YulTypedName",
														"src": "4615:4:8",
														"type": ""
													}
												],
												"src": "4526:214:8"
											},
											{
												"body": {
													"nativeSrc": "4812:263:8",
													"nodeType": "YulBlock",
													"src": "4812:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:8",
																"nodeType": "YulBlock",
																"src": "4858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:8"
																			},
																			"nativeSrc": "4860:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:8"
																		},
																		"nativeSrc": "4860:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:8"
																		},
																		"nativeSrc": "4829:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:8"
																},
																"nativeSrc": "4825:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:8"
															},
															"nativeSrc": "4822:119:8",
															"nodeType": "YulIf",
															"src": "4822:119:8"
														},
														{
															"nativeSrc": "4951:117:8",
															"nodeType": "YulBlock",
															"src": "4951:117:8",
															"statements": [
																{
																	"nativeSrc": "4966:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:8"
																				},
																				"nativeSrc": "5026:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:8"
																		},
																		"nativeSrc": "5005:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:8",
														"nodeType": "YulTypedName",
														"src": "4782:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:8",
														"nodeType": "YulTypedName",
														"src": "4793:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:8",
														"nodeType": "YulTypedName",
														"src": "4805:6:8",
														"type": ""
													}
												],
												"src": "4746:329:8"
											},
											{
												"body": {
													"nativeSrc": "5147:263:8",
													"nodeType": "YulBlock",
													"src": "5147:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:8",
																"nodeType": "YulBlock",
																"src": "5193:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:8"
																			},
																			"nativeSrc": "5195:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:8"
																		},
																		"nativeSrc": "5195:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:8"
																		},
																		"nativeSrc": "5164:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:8"
																},
																"nativeSrc": "5160:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:8"
															},
															"nativeSrc": "5157:119:8",
															"nodeType": "YulIf",
															"src": "5157:119:8"
														},
														{
															"nativeSrc": "5286:117:8",
															"nodeType": "YulBlock",
															"src": "5286:117:8",
															"statements": [
																{
																	"nativeSrc": "5301:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:8"
																				},
																				"nativeSrc": "5361:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5340:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:8"
																		},
																		"nativeSrc": "5340:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5081:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:8",
														"nodeType": "YulTypedName",
														"src": "5117:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:8",
														"nodeType": "YulTypedName",
														"src": "5128:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:8",
														"nodeType": "YulTypedName",
														"src": "5140:6:8",
														"type": ""
													}
												],
												"src": "5081:329:8"
											},
											{
												"body": {
													"nativeSrc": "5481:53:8",
													"nodeType": "YulBlock",
													"src": "5481:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:8"
																		},
																		"nativeSrc": "5503:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:8"
																},
																"nativeSrc": "5491:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:8"
															},
															"nativeSrc": "5491:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:8",
														"nodeType": "YulTypedName",
														"src": "5469:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:8",
														"nodeType": "YulTypedName",
														"src": "5476:3:8",
														"type": ""
													}
												],
												"src": "5416:118:8"
											},
											{
												"body": {
													"nativeSrc": "5638:124:8",
													"nodeType": "YulBlock",
													"src": "5638:124:8",
													"statements": [
														{
															"nativeSrc": "5648:26:8",
															"nodeType": "YulAssignment",
															"src": "5648:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:8"
																},
																"nativeSrc": "5656:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:8"
																		},
																		"nativeSrc": "5737:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:8"
																},
																"nativeSrc": "5684:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:8"
															},
															"nativeSrc": "5684:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:8",
														"nodeType": "YulTypedName",
														"src": "5610:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:8",
														"nodeType": "YulTypedName",
														"src": "5622:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:8",
														"nodeType": "YulTypedName",
														"src": "5633:4:8",
														"type": ""
													}
												],
												"src": "5540:222:8"
											},
											{
												"body": {
													"nativeSrc": "5851:391:8",
													"nodeType": "YulBlock",
													"src": "5851:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:8",
																"nodeType": "YulBlock",
																"src": "5897:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:8"
																			},
																			"nativeSrc": "5899:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:8"
																		},
																		"nativeSrc": "5899:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:8"
																		},
																		"nativeSrc": "5868:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:8"
																},
																"nativeSrc": "5864:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:8"
															},
															"nativeSrc": "5861:119:8",
															"nodeType": "YulIf",
															"src": "5861:119:8"
														},
														{
															"nativeSrc": "5990:117:8",
															"nodeType": "YulBlock",
															"src": "5990:117:8",
															"statements": [
																{
																	"nativeSrc": "6005:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:8"
																				},
																				"nativeSrc": "6065:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:8"
																		},
																		"nativeSrc": "6044:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:8",
															"nodeType": "YulBlock",
															"src": "6117:118:8",
															"statements": [
																{
																	"nativeSrc": "6132:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:8"
																				},
																				"nativeSrc": "6193:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:8"
																		},
																		"nativeSrc": "6172:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:8",
														"nodeType": "YulTypedName",
														"src": "5813:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:8",
														"nodeType": "YulTypedName",
														"src": "5824:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:8",
														"nodeType": "YulTypedName",
														"src": "5836:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:8",
														"nodeType": "YulTypedName",
														"src": "5844:6:8",
														"type": ""
													}
												],
												"src": "5768:474:8"
											},
											{
												"body": {
													"nativeSrc": "6276:152:8",
													"nodeType": "YulBlock",
													"src": "6276:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:8"
																},
																"nativeSrc": "6286:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:8"
															},
															"nativeSrc": "6286:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:8"
																},
																"nativeSrc": "6383:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:8"
															},
															"nativeSrc": "6383:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:8"
																},
																"nativeSrc": "6407:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:8"
															},
															"nativeSrc": "6407:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:8"
											},
											{
												"body": {
													"nativeSrc": "6485:269:8",
													"nodeType": "YulBlock",
													"src": "6485:269:8",
													"statements": [
														{
															"nativeSrc": "6495:22:8",
															"nodeType": "YulAssignment",
															"src": "6495:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:8"
																},
																"nativeSrc": "6505:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:8"
																}
															]
														},
														{
															"nativeSrc": "6526:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:8"
																},
																"nativeSrc": "6552:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:8",
																"nodeType": "YulBlock",
																"src": "6603:51:8",
																"statements": [
																	{
																		"nativeSrc": "6617:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:8"
																			},
																			"nativeSrc": "6627:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:8"
																},
																"nativeSrc": "6576:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:8"
															},
															"nativeSrc": "6573:81:8",
															"nodeType": "YulIf",
															"src": "6573:81:8"
														},
														{
															"body": {
																"nativeSrc": "6706:42:8",
																"nodeType": "YulBlock",
																"src": "6706:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:8"
																			},
																			"nativeSrc": "6720:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:8"
																		},
																		"nativeSrc": "6720:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:8"
																		},
																		"nativeSrc": "6690:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:8"
																},
																"nativeSrc": "6667:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:8"
															},
															"nativeSrc": "6664:84:8",
															"nodeType": "YulIf",
															"src": "6664:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:8",
														"nodeType": "YulTypedName",
														"src": "6469:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:8",
														"nodeType": "YulTypedName",
														"src": "6478:6:8",
														"type": ""
													}
												],
												"src": "6434:320:8"
											},
											{
												"body": {
													"nativeSrc": "6788:152:8",
													"nodeType": "YulBlock",
													"src": "6788:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6805:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6805:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6808:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6808:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6798:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:8"
																},
																"nativeSrc": "6798:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6798:88:8"
															},
															"nativeSrc": "6798:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6798:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6902:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6902:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6905:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6905:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6895:6:8"
																},
																"nativeSrc": "6895:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6895:15:8"
															},
															"nativeSrc": "6895:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6895:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6926:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6926:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6929:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6929:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6919:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6919:6:8"
																},
																"nativeSrc": "6919:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6919:15:8"
															},
															"nativeSrc": "6919:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6919:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6760:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6760:180:8"
											},
											{
												"body": {
													"nativeSrc": "6974:152:8",
													"nodeType": "YulBlock",
													"src": "6974:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6991:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6991:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6994:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6994:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6984:6:8"
																},
																"nativeSrc": "6984:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6984:88:8"
															},
															"nativeSrc": "6984:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6984:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7088:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7088:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7091:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7091:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7081:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7081:6:8"
																},
																"nativeSrc": "7081:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7081:15:8"
															},
															"nativeSrc": "7081:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7081:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7112:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7112:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7115:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7115:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7105:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7105:6:8"
																},
																"nativeSrc": "7105:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7105:15:8"
															},
															"nativeSrc": "7105:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7105:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6946:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6946:180:8"
											},
											{
												"body": {
													"nativeSrc": "7174:143:8",
													"nodeType": "YulBlock",
													"src": "7174:143:8",
													"statements": [
														{
															"nativeSrc": "7184:25:8",
															"nodeType": "YulAssignment",
															"src": "7184:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7207:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7207:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7189:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7189:17:8"
																},
																"nativeSrc": "7189:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7189:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7184:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7184:1:8"
																}
															]
														},
														{
															"nativeSrc": "7218:25:8",
															"nodeType": "YulAssignment",
															"src": "7218:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7241:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7241:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7223:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7223:17:8"
																},
																"nativeSrc": "7223:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7223:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7218:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7218:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7265:22:8",
																"nodeType": "YulBlock",
																"src": "7265:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7267:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7267:16:8"
																			},
																			"nativeSrc": "7267:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7267:18:8"
																		},
																		"nativeSrc": "7267:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7267:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7262:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7262:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7255:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7255:6:8"
																},
																"nativeSrc": "7255:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7255:9:8"
															},
															"nativeSrc": "7252:35:8",
															"nodeType": "YulIf",
															"src": "7252:35:8"
														},
														{
															"nativeSrc": "7297:14:8",
															"nodeType": "YulAssignment",
															"src": "7297:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7306:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7306:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7309:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7309:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7302:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:8"
																},
																"nativeSrc": "7302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7302:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7297:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7297:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7132:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7163:1:8",
														"nodeType": "YulTypedName",
														"src": "7163:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7166:1:8",
														"nodeType": "YulTypedName",
														"src": "7166:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7172:1:8",
														"nodeType": "YulTypedName",
														"src": "7172:1:8",
														"type": ""
													}
												],
												"src": "7132:185:8"
											},
											{
												"body": {
													"nativeSrc": "7429:114:8",
													"nodeType": "YulBlock",
													"src": "7429:114:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7451:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7451:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7459:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7459:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7447:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7447:3:8"
																		},
																		"nativeSrc": "7447:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7447:14:8"
																	},
																	{
																		"hexValue": "4e6f207469656e6573207265636f6d70656e7361732070656e6469656e746573",
																		"kind": "string",
																		"nativeSrc": "7463:34:8",
																		"nodeType": "YulLiteral",
																		"src": "7463:34:8",
																		"type": "",
																		"value": "No tienes recompensas pendientes"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7440:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7440:6:8"
																},
																"nativeSrc": "7440:58:8",
																"nodeType": "YulFunctionCall",
																"src": "7440:58:8"
															},
															"nativeSrc": "7440:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "7440:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7519:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7519:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7527:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7527:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7515:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7515:3:8"
																		},
																		"nativeSrc": "7515:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7515:15:8"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "7532:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7532:3:8",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7508:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7508:6:8"
																},
																"nativeSrc": "7508:28:8",
																"nodeType": "YulFunctionCall",
																"src": "7508:28:8"
															},
															"nativeSrc": "7508:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "7508:28:8"
														}
													]
												},
												"name": "store_literal_in_memory_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26",
												"nativeSrc": "7323:220:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7421:6:8",
														"nodeType": "YulTypedName",
														"src": "7421:6:8",
														"type": ""
													}
												],
												"src": "7323:220:8"
											},
											{
												"body": {
													"nativeSrc": "7695:220:8",
													"nodeType": "YulBlock",
													"src": "7695:220:8",
													"statements": [
														{
															"nativeSrc": "7705:74:8",
															"nodeType": "YulAssignment",
															"src": "7705:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7771:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7771:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7776:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7776:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7712:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7712:58:8"
																},
																"nativeSrc": "7712:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7712:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7705:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7705:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7877:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7877:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26",
																	"nativeSrc": "7788:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7788:88:8"
																},
																"nativeSrc": "7788:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7788:93:8"
															},
															"nativeSrc": "7788:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7788:93:8"
														},
														{
															"nativeSrc": "7890:19:8",
															"nodeType": "YulAssignment",
															"src": "7890:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7901:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7901:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7906:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7906:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7897:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:8"
																},
																"nativeSrc": "7897:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7897:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7890:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7890:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7549:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7683:3:8",
														"nodeType": "YulTypedName",
														"src": "7683:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7691:3:8",
														"nodeType": "YulTypedName",
														"src": "7691:3:8",
														"type": ""
													}
												],
												"src": "7549:366:8"
											},
											{
												"body": {
													"nativeSrc": "8092:248:8",
													"nodeType": "YulBlock",
													"src": "8092:248:8",
													"statements": [
														{
															"nativeSrc": "8102:26:8",
															"nodeType": "YulAssignment",
															"src": "8102:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8114:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8114:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8125:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8125:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8110:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8110:3:8"
																},
																"nativeSrc": "8110:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8110:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8102:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8102:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8149:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8149:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8160:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8160:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8145:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8145:3:8"
																		},
																		"nativeSrc": "8145:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8145:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8168:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8168:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8174:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:8"
																		},
																		"nativeSrc": "8164:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8164:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:8"
																},
																"nativeSrc": "8138:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8138:47:8"
															},
															"nativeSrc": "8138:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8138:47:8"
														},
														{
															"nativeSrc": "8194:139:8",
															"nodeType": "YulAssignment",
															"src": "8194:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8328:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8328:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8202:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8202:124:8"
																},
																"nativeSrc": "8202:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8202:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8194:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8194:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7921:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8072:9:8",
														"nodeType": "YulTypedName",
														"src": "8072:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8087:4:8",
														"nodeType": "YulTypedName",
														"src": "8087:4:8",
														"type": ""
													}
												],
												"src": "7921:419:8"
											},
											{
												"body": {
													"nativeSrc": "8397:51:8",
													"nodeType": "YulBlock",
													"src": "8397:51:8",
													"statements": [
														{
															"nativeSrc": "8407:34:8",
															"nodeType": "YulAssignment",
															"src": "8407:34:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8432:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8435:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8435:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8428:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8428:3:8"
																},
																"nativeSrc": "8428:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8428:13:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8407:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "8407:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8346:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8378:5:8",
														"nodeType": "YulTypedName",
														"src": "8378:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8388:8:8",
														"nodeType": "YulTypedName",
														"src": "8388:8:8",
														"type": ""
													}
												],
												"src": "8346:102:8"
											},
											{
												"body": {
													"nativeSrc": "8527:775:8",
													"nodeType": "YulBlock",
													"src": "8527:775:8",
													"statements": [
														{
															"nativeSrc": "8537:15:8",
															"nodeType": "YulAssignment",
															"src": "8537:15:8",
															"value": {
																"name": "_power",
																"nativeSrc": "8546:6:8",
																"nodeType": "YulIdentifier",
																"src": "8546:6:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8537:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8537:5:8"
																}
															]
														},
														{
															"nativeSrc": "8561:14:8",
															"nodeType": "YulAssignment",
															"src": "8561:14:8",
															"value": {
																"name": "_base",
																"nativeSrc": "8570:5:8",
																"nodeType": "YulIdentifier",
																"src": "8570:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8561:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8619:677:8",
																"nodeType": "YulBlock",
																"src": "8619:677:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8707:22:8",
																			"nodeType": "YulBlock",
																			"src": "8707:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8709:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "8709:16:8"
																						},
																						"nativeSrc": "8709:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8709:18:8"
																					},
																					"nativeSrc": "8709:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "8709:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8685:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "8685:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8695:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "8695:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8700:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8700:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8691:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8691:3:8"
																					},
																					"nativeSrc": "8691:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8691:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8682:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8682:2:8"
																			},
																			"nativeSrc": "8682:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8682:24:8"
																		},
																		"nativeSrc": "8679:50:8",
																		"nodeType": "YulIf",
																		"src": "8679:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "8774:419:8",
																			"nodeType": "YulBlock",
																			"src": "8774:419:8",
																			"statements": [
																				{
																					"nativeSrc": "9154:25:8",
																					"nodeType": "YulAssignment",
																					"src": "9154:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "9167:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "9167:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "9174:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "9174:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "9163:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9163:3:8"
																						},
																						"nativeSrc": "9163:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9163:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "9154:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "9154:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8749:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "8749:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8745:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8745:3:8"
																			},
																			"nativeSrc": "8745:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8745:16:8"
																		},
																		"nativeSrc": "8742:451:8",
																		"nodeType": "YulIf",
																		"src": "8742:451:8"
																	},
																	{
																		"nativeSrc": "9206:23:8",
																		"nodeType": "YulAssignment",
																		"src": "9206:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9218:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9218:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "9224:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "9224:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "9214:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9214:3:8"
																			},
																			"nativeSrc": "9214:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9214:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "9206:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9206:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9242:44:8",
																		"nodeType": "YulAssignment",
																		"src": "9242:44:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9277:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "9277:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "9254:22:8",
																				"nodeType": "YulIdentifier",
																				"src": "9254:22:8"
																			},
																			"nativeSrc": "9254:32:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9254:32:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "9242:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "9242:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8595:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "8595:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8605:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8605:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8592:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8592:2:8"
																},
																"nativeSrc": "8592:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8592:15:8"
															},
															"nativeSrc": "8584:712:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8608:2:8",
																"nodeType": "YulBlock",
																"src": "8608:2:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8588:3:8",
																"nodeType": "YulBlock",
																"src": "8588:3:8",
																"statements": []
															},
															"src": "8584:712:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8454:848:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8482:6:8",
														"nodeType": "YulTypedName",
														"src": "8482:6:8",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8490:5:8",
														"nodeType": "YulTypedName",
														"src": "8490:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8497:8:8",
														"nodeType": "YulTypedName",
														"src": "8497:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8507:3:8",
														"nodeType": "YulTypedName",
														"src": "8507:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8515:5:8",
														"nodeType": "YulTypedName",
														"src": "8515:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8522:4:8",
														"nodeType": "YulTypedName",
														"src": "8522:4:8",
														"type": ""
													}
												],
												"src": "8454:848:8"
											},
											{
												"body": {
													"nativeSrc": "9368:1013:8",
													"nodeType": "YulBlock",
													"src": "9368:1013:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9563:20:8",
																"nodeType": "YulBlock",
																"src": "9563:20:8",
																"statements": [
																	{
																		"nativeSrc": "9565:10:8",
																		"nodeType": "YulAssignment",
																		"src": "9565:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9574:1:8",
																			"nodeType": "YulLiteral",
																			"src": "9574:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9565:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9565:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9576:5:8",
																		"nodeType": "YulLeave",
																		"src": "9576:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9553:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "9553:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9546:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9546:6:8"
																},
																"nativeSrc": "9546:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9546:16:8"
															},
															"nativeSrc": "9543:40:8",
															"nodeType": "YulIf",
															"src": "9543:40:8"
														},
														{
															"body": {
																"nativeSrc": "9608:20:8",
																"nodeType": "YulBlock",
																"src": "9608:20:8",
																"statements": [
																	{
																		"nativeSrc": "9610:10:8",
																		"nodeType": "YulAssignment",
																		"src": "9610:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9619:1:8",
																			"nodeType": "YulLiteral",
																			"src": "9619:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9610:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9610:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9621:5:8",
																		"nodeType": "YulLeave",
																		"src": "9621:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9602:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9602:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9595:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9595:6:8"
																},
																"nativeSrc": "9595:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9595:12:8"
															},
															"nativeSrc": "9592:36:8",
															"nodeType": "YulIf",
															"src": "9592:36:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9738:20:8",
																		"nodeType": "YulBlock",
																		"src": "9738:20:8",
																		"statements": [
																			{
																				"nativeSrc": "9740:10:8",
																				"nodeType": "YulAssignment",
																				"src": "9740:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9749:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9749:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9740:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9740:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "9751:5:8",
																				"nodeType": "YulLeave",
																				"src": "9751:5:8"
																			}
																		]
																	},
																	"nativeSrc": "9731:27:8",
																	"nodeType": "YulCase",
																	"src": "9731:27:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9736:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9736:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9782:176:8",
																		"nodeType": "YulBlock",
																		"src": "9782:176:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9817:22:8",
																					"nodeType": "YulBlock",
																					"src": "9817:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9819:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9819:16:8"
																								},
																								"nativeSrc": "9819:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9819:18:8"
																							},
																							"nativeSrc": "9819:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9819:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9802:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9802:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9812:3:8",
																							"nodeType": "YulLiteral",
																							"src": "9812:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9799:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9799:2:8"
																					},
																					"nativeSrc": "9799:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9799:17:8"
																				},
																				"nativeSrc": "9796:43:8",
																				"nodeType": "YulIf",
																				"src": "9796:43:8"
																			},
																			{
																				"nativeSrc": "9852:25:8",
																				"nodeType": "YulAssignment",
																				"src": "9852:25:8",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9865:1:8",
																							"nodeType": "YulLiteral",
																							"src": "9865:1:8",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9868:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "9868:8:8"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9861:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9861:3:8"
																					},
																					"nativeSrc": "9861:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9861:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9852:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9852:5:8"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9908:22:8",
																					"nodeType": "YulBlock",
																					"src": "9908:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9910:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "9910:16:8"
																								},
																								"nativeSrc": "9910:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "9910:18:8"
																							},
																							"nativeSrc": "9910:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "9910:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9896:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "9896:5:8"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9903:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9903:3:8"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9893:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "9893:2:8"
																					},
																					"nativeSrc": "9893:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9893:14:8"
																				},
																				"nativeSrc": "9890:40:8",
																				"nodeType": "YulIf",
																				"src": "9890:40:8"
																			},
																			{
																				"nativeSrc": "9943:5:8",
																				"nodeType": "YulLeave",
																				"src": "9943:5:8"
																			}
																		]
																	},
																	"nativeSrc": "9767:191:8",
																	"nodeType": "YulCase",
																	"src": "9767:191:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9772:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9772:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9688:4:8",
																"nodeType": "YulIdentifier",
																"src": "9688:4:8"
															},
															"nativeSrc": "9681:277:8",
															"nodeType": "YulSwitch",
															"src": "9681:277:8"
														},
														{
															"body": {
																"nativeSrc": "10090:123:8",
																"nodeType": "YulBlock",
																"src": "10090:123:8",
																"statements": [
																	{
																		"nativeSrc": "10104:28:8",
																		"nodeType": "YulAssignment",
																		"src": "10104:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10117:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "10117:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10123:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "10123:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10113:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10113:3:8"
																			},
																			"nativeSrc": "10113:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10113:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10104:5:8"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10163:22:8",
																			"nodeType": "YulBlock",
																			"src": "10163:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "10165:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "10165:16:8"
																						},
																						"nativeSrc": "10165:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "10165:18:8"
																					},
																					"nativeSrc": "10165:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "10165:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "10151:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "10151:5:8"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "10158:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "10158:3:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10148:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "10148:2:8"
																			},
																			"nativeSrc": "10148:14:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10148:14:8"
																		},
																		"nativeSrc": "10145:40:8",
																		"nodeType": "YulIf",
																		"src": "10145:40:8"
																	},
																	{
																		"nativeSrc": "10198:5:8",
																		"nodeType": "YulLeave",
																		"src": "10198:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9993:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9993:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9999:2:8",
																						"nodeType": "YulLiteral",
																						"src": "9999:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9990:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "9990:2:8"
																				},
																				"nativeSrc": "9990:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9990:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10007:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "10007:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10017:2:8",
																						"nodeType": "YulLiteral",
																						"src": "10017:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10004:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10004:2:8"
																				},
																				"nativeSrc": "10004:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10004:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9986:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:8"
																		},
																		"nativeSrc": "9986:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10042:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "10042:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10048:3:8",
																						"nodeType": "YulLiteral",
																						"src": "10048:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10039:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10039:2:8"
																				},
																				"nativeSrc": "10039:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10039:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10057:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "10057:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10067:2:8",
																						"nodeType": "YulLiteral",
																						"src": "10067:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10054:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "10054:2:8"
																				},
																				"nativeSrc": "10054:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10054:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10035:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10035:3:8"
																		},
																		"nativeSrc": "10035:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10035:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9970:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9970:2:8"
																},
																"nativeSrc": "9970:111:8",
																"nodeType": "YulFunctionCall",
																"src": "9970:111:8"
															},
															"nativeSrc": "9967:246:8",
															"nodeType": "YulIf",
															"src": "9967:246:8"
														},
														{
															"nativeSrc": "10223:57:8",
															"nodeType": "YulAssignment",
															"src": "10223:57:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10257:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10257:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10260:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10260:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10266:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10266:8:8"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "10276:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10276:3:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "10238:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "10238:18:8"
																},
																"nativeSrc": "10238:42:8",
																"nodeType": "YulFunctionCall",
																"src": "10238:42:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10223:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10223:5:8"
																},
																{
																	"name": "base",
																	"nativeSrc": "10230:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10230:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10319:22:8",
																"nodeType": "YulBlock",
																"src": "10319:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10321:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10321:16:8"
																			},
																			"nativeSrc": "10321:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10321:18:8"
																		},
																		"nativeSrc": "10321:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10321:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10296:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10296:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "10307:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "10307:3:8"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "10312:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10312:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "10303:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10303:3:8"
																		},
																		"nativeSrc": "10303:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10303:14:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10293:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10293:2:8"
																},
																"nativeSrc": "10293:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10293:25:8"
															},
															"nativeSrc": "10290:51:8",
															"nodeType": "YulIf",
															"src": "10290:51:8"
														},
														{
															"nativeSrc": "10350:25:8",
															"nodeType": "YulAssignment",
															"src": "10350:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10363:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10363:5:8"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10370:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10370:4:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10359:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10359:3:8"
																},
																"nativeSrc": "10359:16:8",
																"nodeType": "YulFunctionCall",
																"src": "10359:16:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10350:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10350:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "9308:1073:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9338:4:8",
														"nodeType": "YulTypedName",
														"src": "9338:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9344:8:8",
														"nodeType": "YulTypedName",
														"src": "9344:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9354:3:8",
														"nodeType": "YulTypedName",
														"src": "9354:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9362:5:8",
														"nodeType": "YulTypedName",
														"src": "9362:5:8",
														"type": ""
													}
												],
												"src": "9308:1073:8"
											},
											{
												"body": {
													"nativeSrc": "10451:217:8",
													"nodeType": "YulBlock",
													"src": "10451:217:8",
													"statements": [
														{
															"nativeSrc": "10461:31:8",
															"nodeType": "YulAssignment",
															"src": "10461:31:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10487:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10487:4:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10469:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10469:17:8"
																},
																"nativeSrc": "10469:23:8",
																"nodeType": "YulFunctionCall",
																"src": "10469:23:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10461:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10461:4:8"
																}
															]
														},
														{
															"nativeSrc": "10501:37:8",
															"nodeType": "YulAssignment",
															"src": "10501:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10529:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10529:8:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "10513:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "10513:15:8"
																},
																"nativeSrc": "10513:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10513:25:8"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10501:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "10501:8:8"
																}
															]
														},
														{
															"nativeSrc": "10548:113:8",
															"nodeType": "YulAssignment",
															"src": "10548:113:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10578:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10578:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10584:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "10584:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10594:66:8",
																		"nodeType": "YulLiteral",
																		"src": "10594:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10557:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "10557:20:8"
																},
																"nativeSrc": "10557:104:8",
																"nodeType": "YulFunctionCall",
																"src": "10557:104:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10548:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10548:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "10387:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10426:4:8",
														"nodeType": "YulTypedName",
														"src": "10426:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10432:8:8",
														"nodeType": "YulTypedName",
														"src": "10432:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10445:5:8",
														"nodeType": "YulTypedName",
														"src": "10445:5:8",
														"type": ""
													}
												],
												"src": "10387:281:8"
											},
											{
												"body": {
													"nativeSrc": "10722:362:8",
													"nodeType": "YulBlock",
													"src": "10722:362:8",
													"statements": [
														{
															"nativeSrc": "10732:25:8",
															"nodeType": "YulAssignment",
															"src": "10732:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10755:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10755:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10737:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10737:17:8"
																},
																"nativeSrc": "10737:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10737:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10732:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10732:1:8"
																}
															]
														},
														{
															"nativeSrc": "10766:25:8",
															"nodeType": "YulAssignment",
															"src": "10766:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10789:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10789:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10771:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10771:17:8"
																},
																"nativeSrc": "10771:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10771:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10766:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10766:1:8"
																}
															]
														},
														{
															"nativeSrc": "10800:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10800:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10823:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10823:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10826:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10826:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10819:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10819:3:8"
																},
																"nativeSrc": "10819:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10819:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10804:11:8",
																	"nodeType": "YulTypedName",
																	"src": "10804:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10837:41:8",
															"nodeType": "YulAssignment",
															"src": "10837:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10866:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "10866:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10848:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10848:17:8"
																},
																"nativeSrc": "10848:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10848:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10837:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "10837:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11055:22:8",
																"nodeType": "YulBlock",
																"src": "11055:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11057:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11057:16:8"
																			},
																			"nativeSrc": "11057:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11057:18:8"
																		},
																		"nativeSrc": "11057:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11057:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10988:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "10988:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10981:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "10981:6:8"
																				},
																				"nativeSrc": "10981:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "10981:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11011:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "11011:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11018:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "11018:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11027:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "11027:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11014:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "11014:3:8"
																						},
																						"nativeSrc": "11014:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "11014:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11008:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "11008:2:8"
																				},
																				"nativeSrc": "11008:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11008:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10961:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "10961:2:8"
																		},
																		"nativeSrc": "10961:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10961:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10941:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10941:6:8"
																},
																"nativeSrc": "10941:113:8",
																"nodeType": "YulFunctionCall",
																"src": "10941:113:8"
															},
															"nativeSrc": "10938:139:8",
															"nodeType": "YulIf",
															"src": "10938:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10674:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10705:1:8",
														"nodeType": "YulTypedName",
														"src": "10705:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10708:1:8",
														"nodeType": "YulTypedName",
														"src": "10708:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10714:7:8",
														"nodeType": "YulTypedName",
														"src": "10714:7:8",
														"type": ""
													}
												],
												"src": "10674:410:8"
											},
											{
												"body": {
													"nativeSrc": "11196:129:8",
													"nodeType": "YulBlock",
													"src": "11196:129:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11218:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11218:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11226:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11226:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11214:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11214:3:8"
																		},
																		"nativeSrc": "11214:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11214:14:8"
																	},
																	{
																		"hexValue": "4e6f207469656e657320737566696369656e74657320746f6b656e7320706172",
																		"kind": "string",
																		"nativeSrc": "11230:34:8",
																		"nodeType": "YulLiteral",
																		"src": "11230:34:8",
																		"type": "",
																		"value": "No tienes suficientes tokens par"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11207:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11207:6:8"
																},
																"nativeSrc": "11207:58:8",
																"nodeType": "YulFunctionCall",
																"src": "11207:58:8"
															},
															"nativeSrc": "11207:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "11207:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11286:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11286:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11294:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11294:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11282:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11282:3:8"
																		},
																		"nativeSrc": "11282:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11282:15:8"
																	},
																	{
																		"hexValue": "61206861636572207374616b696e672e",
																		"kind": "string",
																		"nativeSrc": "11299:18:8",
																		"nodeType": "YulLiteral",
																		"src": "11299:18:8",
																		"type": "",
																		"value": "a hacer staking."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11275:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11275:6:8"
																},
																"nativeSrc": "11275:43:8",
																"nodeType": "YulFunctionCall",
																"src": "11275:43:8"
															},
															"nativeSrc": "11275:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "11275:43:8"
														}
													]
												},
												"name": "store_literal_in_memory_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38",
												"nativeSrc": "11090:235:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11188:6:8",
														"nodeType": "YulTypedName",
														"src": "11188:6:8",
														"type": ""
													}
												],
												"src": "11090:235:8"
											},
											{
												"body": {
													"nativeSrc": "11477:220:8",
													"nodeType": "YulBlock",
													"src": "11477:220:8",
													"statements": [
														{
															"nativeSrc": "11487:74:8",
															"nodeType": "YulAssignment",
															"src": "11487:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11553:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11553:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11558:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11558:2:8",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11494:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11494:58:8"
																},
																"nativeSrc": "11494:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11494:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11487:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11487:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11659:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11659:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38",
																	"nativeSrc": "11570:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11570:88:8"
																},
																"nativeSrc": "11570:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11570:93:8"
															},
															"nativeSrc": "11570:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11570:93:8"
														},
														{
															"nativeSrc": "11672:19:8",
															"nodeType": "YulAssignment",
															"src": "11672:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11683:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11683:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11688:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11688:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11679:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11679:3:8"
																},
																"nativeSrc": "11679:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11679:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11672:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11672:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11331:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11465:3:8",
														"nodeType": "YulTypedName",
														"src": "11465:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11473:3:8",
														"nodeType": "YulTypedName",
														"src": "11473:3:8",
														"type": ""
													}
												],
												"src": "11331:366:8"
											},
											{
												"body": {
													"nativeSrc": "11874:248:8",
													"nodeType": "YulBlock",
													"src": "11874:248:8",
													"statements": [
														{
															"nativeSrc": "11884:26:8",
															"nodeType": "YulAssignment",
															"src": "11884:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11896:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11896:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11907:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11907:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11892:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11892:3:8"
																},
																"nativeSrc": "11892:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11892:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11884:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11884:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11931:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11931:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11942:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11942:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11927:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11927:3:8"
																		},
																		"nativeSrc": "11927:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11927:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11950:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11950:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11956:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11956:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11946:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11946:3:8"
																		},
																		"nativeSrc": "11946:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11946:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11920:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11920:6:8"
																},
																"nativeSrc": "11920:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11920:47:8"
															},
															"nativeSrc": "11920:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11920:47:8"
														},
														{
															"nativeSrc": "11976:139:8",
															"nodeType": "YulAssignment",
															"src": "11976:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12110:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12110:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11984:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11984:124:8"
																},
																"nativeSrc": "11984:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11984:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11976:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11976:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11703:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11854:9:8",
														"nodeType": "YulTypedName",
														"src": "11854:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11869:4:8",
														"nodeType": "YulTypedName",
														"src": "11869:4:8",
														"type": ""
													}
												],
												"src": "11703:419:8"
											},
											{
												"body": {
													"nativeSrc": "12172:147:8",
													"nodeType": "YulBlock",
													"src": "12172:147:8",
													"statements": [
														{
															"nativeSrc": "12182:25:8",
															"nodeType": "YulAssignment",
															"src": "12182:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12205:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12205:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12187:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12187:17:8"
																},
																"nativeSrc": "12187:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12187:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12182:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12182:1:8"
																}
															]
														},
														{
															"nativeSrc": "12216:25:8",
															"nodeType": "YulAssignment",
															"src": "12216:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12239:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12239:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12221:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12221:17:8"
																},
																"nativeSrc": "12221:20:8",
																"nodeType": "YulFunctionCall",
																"src": "12221:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12216:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "12216:1:8"
																}
															]
														},
														{
															"nativeSrc": "12250:16:8",
															"nodeType": "YulAssignment",
															"src": "12250:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12261:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12261:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12264:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12264:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12257:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12257:3:8"
																},
																"nativeSrc": "12257:9:8",
																"nodeType": "YulFunctionCall",
																"src": "12257:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12250:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12250:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12290:22:8",
																"nodeType": "YulBlock",
																"src": "12290:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12292:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12292:16:8"
																			},
																			"nativeSrc": "12292:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12292:18:8"
																		},
																		"nativeSrc": "12292:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12292:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12282:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "12282:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12285:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12285:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12279:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12279:2:8"
																},
																"nativeSrc": "12279:10:8",
																"nodeType": "YulFunctionCall",
																"src": "12279:10:8"
															},
															"nativeSrc": "12276:36:8",
															"nodeType": "YulIf",
															"src": "12276:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12128:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12159:1:8",
														"nodeType": "YulTypedName",
														"src": "12159:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12162:1:8",
														"nodeType": "YulTypedName",
														"src": "12162:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12168:3:8",
														"nodeType": "YulTypedName",
														"src": "12168:3:8",
														"type": ""
													}
												],
												"src": "12128:191:8"
											},
											{
												"body": {
													"nativeSrc": "12431:134:8",
													"nodeType": "YulBlock",
													"src": "12431:134:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12453:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12453:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12461:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12461:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12449:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12449:3:8"
																		},
																		"nativeSrc": "12449:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12449:14:8"
																	},
																	{
																		"hexValue": "4e6f2073652070756564656e206163756e696172206d617320746f6b656e732c",
																		"kind": "string",
																		"nativeSrc": "12465:34:8",
																		"nodeType": "YulLiteral",
																		"src": "12465:34:8",
																		"type": "",
																		"value": "No se pueden acuniar mas tokens,"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12442:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12442:6:8"
																},
																"nativeSrc": "12442:58:8",
																"nodeType": "YulFunctionCall",
																"src": "12442:58:8"
															},
															"nativeSrc": "12442:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "12442:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12521:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12521:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12529:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12529:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12517:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12517:3:8"
																		},
																		"nativeSrc": "12517:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12517:15:8"
																	},
																	{
																		"hexValue": "2073652065786365646520656c206d6178696d6f2e",
																		"kind": "string",
																		"nativeSrc": "12534:23:8",
																		"nodeType": "YulLiteral",
																		"src": "12534:23:8",
																		"type": "",
																		"value": " se excede el maximo."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12510:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12510:6:8"
																},
																"nativeSrc": "12510:48:8",
																"nodeType": "YulFunctionCall",
																"src": "12510:48:8"
															},
															"nativeSrc": "12510:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "12510:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114",
												"nativeSrc": "12325:240:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12423:6:8",
														"nodeType": "YulTypedName",
														"src": "12423:6:8",
														"type": ""
													}
												],
												"src": "12325:240:8"
											},
											{
												"body": {
													"nativeSrc": "12717:220:8",
													"nodeType": "YulBlock",
													"src": "12717:220:8",
													"statements": [
														{
															"nativeSrc": "12727:74:8",
															"nodeType": "YulAssignment",
															"src": "12727:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12793:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12793:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12798:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12798:2:8",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12734:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12734:58:8"
																},
																"nativeSrc": "12734:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12734:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12727:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12727:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12899:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12899:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114",
																	"nativeSrc": "12810:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12810:88:8"
																},
																"nativeSrc": "12810:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12810:93:8"
															},
															"nativeSrc": "12810:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12810:93:8"
														},
														{
															"nativeSrc": "12912:19:8",
															"nodeType": "YulAssignment",
															"src": "12912:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12923:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12923:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12928:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12928:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12919:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12919:3:8"
																},
																"nativeSrc": "12919:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12919:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12912:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12912:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12571:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12705:3:8",
														"nodeType": "YulTypedName",
														"src": "12705:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12713:3:8",
														"nodeType": "YulTypedName",
														"src": "12713:3:8",
														"type": ""
													}
												],
												"src": "12571:366:8"
											},
											{
												"body": {
													"nativeSrc": "13114:248:8",
													"nodeType": "YulBlock",
													"src": "13114:248:8",
													"statements": [
														{
															"nativeSrc": "13124:26:8",
															"nodeType": "YulAssignment",
															"src": "13124:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13136:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13136:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13147:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13147:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13132:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13132:3:8"
																},
																"nativeSrc": "13132:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13132:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13124:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13124:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13171:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13171:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13182:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13182:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13167:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13167:3:8"
																		},
																		"nativeSrc": "13167:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13167:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13190:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13190:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13196:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13196:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13186:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13186:3:8"
																		},
																		"nativeSrc": "13186:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13186:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13160:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13160:6:8"
																},
																"nativeSrc": "13160:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13160:47:8"
															},
															"nativeSrc": "13160:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13160:47:8"
														},
														{
															"nativeSrc": "13216:139:8",
															"nodeType": "YulAssignment",
															"src": "13216:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13350:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13350:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13224:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13224:124:8"
																},
																"nativeSrc": "13224:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13224:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13216:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13216:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12943:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13094:9:8",
														"nodeType": "YulTypedName",
														"src": "13094:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13109:4:8",
														"nodeType": "YulTypedName",
														"src": "13109:4:8",
														"type": ""
													}
												],
												"src": "12943:419:8"
											},
											{
												"body": {
													"nativeSrc": "13522:288:8",
													"nodeType": "YulBlock",
													"src": "13522:288:8",
													"statements": [
														{
															"nativeSrc": "13532:26:8",
															"nodeType": "YulAssignment",
															"src": "13532:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13544:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13544:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13555:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13555:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13540:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13540:3:8"
																},
																"nativeSrc": "13540:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13540:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13532:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13532:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13612:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13612:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13625:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13625:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13636:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13636:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13621:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13621:3:8"
																		},
																		"nativeSrc": "13621:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13621:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13568:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13568:43:8"
																},
																"nativeSrc": "13568:71:8",
																"nodeType": "YulFunctionCall",
																"src": "13568:71:8"
															},
															"nativeSrc": "13568:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "13568:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13693:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13693:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13706:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13706:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13717:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13717:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13702:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13702:3:8"
																		},
																		"nativeSrc": "13702:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13702:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13649:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13649:43:8"
																},
																"nativeSrc": "13649:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13649:72:8"
															},
															"nativeSrc": "13649:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13649:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13775:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13788:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13788:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13799:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13799:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13784:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13784:3:8"
																		},
																		"nativeSrc": "13784:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13784:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13731:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13731:43:8"
																},
																"nativeSrc": "13731:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13731:72:8"
															},
															"nativeSrc": "13731:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13731:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13368:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13478:9:8",
														"nodeType": "YulTypedName",
														"src": "13478:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13490:6:8",
														"nodeType": "YulTypedName",
														"src": "13490:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13498:6:8",
														"nodeType": "YulTypedName",
														"src": "13498:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13506:6:8",
														"nodeType": "YulTypedName",
														"src": "13506:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13517:4:8",
														"nodeType": "YulTypedName",
														"src": "13517:4:8",
														"type": ""
													}
												],
												"src": "13368:442:8"
											},
											{
												"body": {
													"nativeSrc": "13922:60:8",
													"nodeType": "YulBlock",
													"src": "13922:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13944:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13944:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13952:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13952:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13940:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13940:3:8"
																		},
																		"nativeSrc": "13940:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13940:14:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "13956:18:8",
																		"nodeType": "YulLiteral",
																		"src": "13956:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13933:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13933:6:8"
																},
																"nativeSrc": "13933:42:8",
																"nodeType": "YulFunctionCall",
																"src": "13933:42:8"
															},
															"nativeSrc": "13933:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "13933:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "13816:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13914:6:8",
														"nodeType": "YulTypedName",
														"src": "13914:6:8",
														"type": ""
													}
												],
												"src": "13816:166:8"
											},
											{
												"body": {
													"nativeSrc": "14134:220:8",
													"nodeType": "YulBlock",
													"src": "14134:220:8",
													"statements": [
														{
															"nativeSrc": "14144:74:8",
															"nodeType": "YulAssignment",
															"src": "14144:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14210:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14210:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14215:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14215:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14151:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "14151:58:8"
																},
																"nativeSrc": "14151:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14151:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14144:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14144:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14316:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14316:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "14227:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "14227:88:8"
																},
																"nativeSrc": "14227:93:8",
																"nodeType": "YulFunctionCall",
																"src": "14227:93:8"
															},
															"nativeSrc": "14227:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "14227:93:8"
														},
														{
															"nativeSrc": "14329:19:8",
															"nodeType": "YulAssignment",
															"src": "14329:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14340:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14340:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14345:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14336:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14336:3:8"
																},
																"nativeSrc": "14336:12:8",
																"nodeType": "YulFunctionCall",
																"src": "14336:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14329:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14329:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13988:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14122:3:8",
														"nodeType": "YulTypedName",
														"src": "14122:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14130:3:8",
														"nodeType": "YulTypedName",
														"src": "14130:3:8",
														"type": ""
													}
												],
												"src": "13988:366:8"
											},
											{
												"body": {
													"nativeSrc": "14531:248:8",
													"nodeType": "YulBlock",
													"src": "14531:248:8",
													"statements": [
														{
															"nativeSrc": "14541:26:8",
															"nodeType": "YulAssignment",
															"src": "14541:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14553:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14553:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14564:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14564:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14549:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14549:3:8"
																},
																"nativeSrc": "14549:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14549:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14541:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14541:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14588:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14588:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14599:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14599:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14584:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14584:3:8"
																		},
																		"nativeSrc": "14584:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14584:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14607:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14607:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14613:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14613:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14603:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14603:3:8"
																		},
																		"nativeSrc": "14603:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14603:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14577:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14577:6:8"
																},
																"nativeSrc": "14577:47:8",
																"nodeType": "YulFunctionCall",
																"src": "14577:47:8"
															},
															"nativeSrc": "14577:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "14577:47:8"
														},
														{
															"nativeSrc": "14633:139:8",
															"nodeType": "YulAssignment",
															"src": "14633:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14767:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14767:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14641:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "14641:124:8"
																},
																"nativeSrc": "14641:131:8",
																"nodeType": "YulFunctionCall",
																"src": "14641:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14633:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14633:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14360:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14511:9:8",
														"nodeType": "YulTypedName",
														"src": "14511:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14526:4:8",
														"nodeType": "YulTypedName",
														"src": "14526:4:8",
														"type": ""
													}
												],
												"src": "14360:419:8"
											},
											{
												"body": {
													"nativeSrc": "14891:64:8",
													"nodeType": "YulBlock",
													"src": "14891:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14913:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14913:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14921:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14921:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14909:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14909:3:8"
																		},
																		"nativeSrc": "14909:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14909:14:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "14925:22:8",
																		"nodeType": "YulLiteral",
																		"src": "14925:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14902:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14902:6:8"
																},
																"nativeSrc": "14902:46:8",
																"nodeType": "YulFunctionCall",
																"src": "14902:46:8"
															},
															"nativeSrc": "14902:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "14902:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "14785:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14883:6:8",
														"nodeType": "YulTypedName",
														"src": "14883:6:8",
														"type": ""
													}
												],
												"src": "14785:170:8"
											},
											{
												"body": {
													"nativeSrc": "15107:220:8",
													"nodeType": "YulBlock",
													"src": "15107:220:8",
													"statements": [
														{
															"nativeSrc": "15117:74:8",
															"nodeType": "YulAssignment",
															"src": "15117:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15183:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15183:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15188:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15188:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15124:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "15124:58:8"
																},
																"nativeSrc": "15124:67:8",
																"nodeType": "YulFunctionCall",
																"src": "15124:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15117:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15117:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15289:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15289:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "15200:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "15200:88:8"
																},
																"nativeSrc": "15200:93:8",
																"nodeType": "YulFunctionCall",
																"src": "15200:93:8"
															},
															"nativeSrc": "15200:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "15200:93:8"
														},
														{
															"nativeSrc": "15302:19:8",
															"nodeType": "YulAssignment",
															"src": "15302:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15313:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15313:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15318:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15318:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15309:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15309:3:8"
																},
																"nativeSrc": "15309:12:8",
																"nodeType": "YulFunctionCall",
																"src": "15309:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15302:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15302:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14961:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15095:3:8",
														"nodeType": "YulTypedName",
														"src": "15095:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15103:3:8",
														"nodeType": "YulTypedName",
														"src": "15103:3:8",
														"type": ""
													}
												],
												"src": "14961:366:8"
											},
											{
												"body": {
													"nativeSrc": "15504:248:8",
													"nodeType": "YulBlock",
													"src": "15504:248:8",
													"statements": [
														{
															"nativeSrc": "15514:26:8",
															"nodeType": "YulAssignment",
															"src": "15514:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15526:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15526:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15537:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15537:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15522:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15522:3:8"
																},
																"nativeSrc": "15522:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15522:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15514:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15514:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15561:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15561:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15572:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15572:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15557:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15557:3:8"
																		},
																		"nativeSrc": "15557:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15557:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15580:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "15580:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15586:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15586:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15576:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15576:3:8"
																		},
																		"nativeSrc": "15576:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15576:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15550:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15550:6:8"
																},
																"nativeSrc": "15550:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15550:47:8"
															},
															"nativeSrc": "15550:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "15550:47:8"
														},
														{
															"nativeSrc": "15606:139:8",
															"nodeType": "YulAssignment",
															"src": "15606:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15740:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "15740:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15614:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "15614:124:8"
																},
																"nativeSrc": "15614:131:8",
																"nodeType": "YulFunctionCall",
																"src": "15614:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15606:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15606:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15333:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15484:9:8",
														"nodeType": "YulTypedName",
														"src": "15484:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15499:4:8",
														"nodeType": "YulTypedName",
														"src": "15499:4:8",
														"type": ""
													}
												],
												"src": "15333:419:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tienes recompensas pendientes\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tienes suficientes tokens par\")\n\n        mstore(add(memPtr, 32), \"a hacer staking.\")\n\n    }\n\n    function abi_encode_t_stringliteral_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114(memPtr) {\n\n        mstore(add(memPtr, 0), \"No se pueden acuniar mas tokens,\")\n\n        mstore(add(memPtr, 32), \" se excede el maximo.\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610156575f3560e01c80637547c7a3116100c1578063a6e158f81161007a578063a6e158f81461038e578063a9059cbb146103aa578063bec3fa17146103da578063d5abeb01146103f6578063dd62ed3e14610414578063f2fde38b1461044457610156565b80637547c7a3146102e057806381a4af15146102fc5780638456cb59146103185780638da5cb5b1461032257806395d89b4114610340578063a5b39cfb1461035e57610156565b8063499d7f9611610113578063499d7f961461021e5780635c975abb1461024e57806364ab86751461026c5780636b69e05b1461029c57806370a08231146102a6578063715018a6146102d657610156565b806306fdde031461015a578063095ea7b31461017857806318160ddd146101a857806323b872dd146101c6578063313ce567146101f65780633f4ba83a14610214575b5f80fd5b610162610460565b60405161016f919061148a565b60405180910390f35b610192600480360381019061018d919061153b565b6104f0565b60405161019f9190611593565b60405180910390f35b6101b0610512565b6040516101bd91906115bb565b60405180910390f35b6101e060048036038101906101db91906115d4565b61051b565b6040516101ed9190611593565b60405180910390f35b6101fe610549565b60405161020b919061163f565b60405180910390f35b61021c610551565b005b61023860048036038101906102339190611658565b610563565b60405161024591906115bb565b60405180910390f35b610256610578565b6040516102639190611593565b60405180910390f35b61028660048036038101906102819190611658565b61058e565b60405161029391906115bb565b60405180910390f35b6102a46105e0565b005b6102c060048036038101906102bb9190611658565b610685565b6040516102cd91906115bb565b60405180910390f35b6102de6106ca565b005b6102fa60048036038101906102f59190611683565b6106dd565b005b6103166004803603810190610311919061153b565b6107ea565b005b610320610882565b005b61032a610894565b60405161033791906116bd565b60405180910390f35b6103486108bc565b604051610355919061148a565b60405180910390f35b61037860048036038101906103739190611658565b61094c565b60405161038591906115bb565b60405180910390f35b6103a860048036038101906103a39190611683565b610961565b005b6103c460048036038101906103bf919061153b565b610994565b6040516103d19190611593565b60405180910390f35b6103f460048036038101906103ef919061153b565b6109b6565b005b6103fe6109eb565b60405161040b91906115bb565b60405180910390f35b61042e600480360381019061042991906116d6565b6109f1565b60405161043b91906115bb565b60405180910390f35b61045e60048036038101906104599190611658565b610a73565b005b60606003805461046f90611741565b80601f016020809104026020016040519081016040528092919081815260200182805461049b90611741565b80156104e65780601f106104bd576101008083540402835291602001916104e6565b820191905f5260205f20905b8154815290600101906020018083116104c957829003601f168201915b5050505050905090565b5f806104fa610af7565b9050610507818585610afe565b600191505092915050565b5f600254905090565b5f80610525610af7565b9050610532858285610b10565b61053d858585610ba2565b60019150509392505050565b5f6012905090565b610559610c92565b610561610d19565b565b6008602052805f5260405f205f915090505481565b5f600560149054906101000a900460ff16905090565b5f600a60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546105d991906117cb565b9050919050565b6105e8610d7b565b5f6105f23361058e565b90505f8111610636576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062d9061186b565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506106823382610dc5565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106d2610c92565b6106db5f610e44565b565b6106e5610d7b565b6106ed610549565b600a6106f991906119b8565b816107049190611a02565b61070d33610685565b101561074e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074590611ab3565b60405180910390fd5b6107763361075a610549565b600a61076691906119b8565b836107719190611a02565b610f07565b61077e610549565b600a61078a91906119b8565b816107959190611a02565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107e09190611ad1565b9250508190555050565b6107f2610c92565b6107fa610d7b565b5f610803610549565b600a61080f91906119b8565b8261081a9190611a02565b905060065481610828610512565b6108329190611ad1565b1115610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086a90611b74565b60405180910390fd5b61087d8382610dc5565b505050565b61088a610c92565b610892610f86565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108cb90611741565b80601f01602080910402602001604051908101604052809291908181526020018280546108f790611741565b80156109425780601f1061091957610100808354040283529160200191610942565b820191905f5260205f20905b81548152906001019060200180831161092557829003601f168201915b5050505050905090565b6007602052805f5260405f205f915090505481565b610969610d7b565b61099133610975610549565b600a61098191906119b8565b8361098c9190611a02565b610f07565b50565b5f8061099e610af7565b90506109ab818585610ba2565b600191505092915050565b6109be610d7b565b6109e6826109ca610549565b600a6109d691906119b8565b836109e19190611a02565b610994565b505050565b60065481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610a7b610c92565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aeb575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ae291906116bd565b60405180910390fd5b610af481610e44565b50565b5f33905090565b610b0b8383836001610fe9565b505050565b5f610b1b84846109f1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b9c5781811015610b8d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b8493929190611b92565b60405180910390fd5b610b9b84848484035f610fe9565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c12575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c0991906116bd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c82575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c7991906116bd565b60405180910390fd5b610c8d8383836111b8565b505050565b610c9a610af7565b73ffffffffffffffffffffffffffffffffffffffff16610cb8610894565b73ffffffffffffffffffffffffffffffffffffffff1614610d1757610cdb610af7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d0e91906116bd565b60405180910390fd5b565b610d216113d1565b5f600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610d64610af7565b604051610d7191906116bd565b60405180910390a1565b610d83610578565b15610dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dba90611c11565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e35575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e2c91906116bd565b60405180910390fd5b610e405f83836111b8565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f77575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610f6e91906116bd565b60405180910390fd5b610f82825f836111b8565b5050565b610f8e610d7b565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fd2610af7565b604051610fdf91906116bd565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611059575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161105091906116bd565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110c9575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110c091906116bd565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111b2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111a991906115bb565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611208578060025f8282546111fc9190611ad1565b925050819055506112d6565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611291578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161128893929190611b92565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361131d578060025f8282540392505081905550611367565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113c491906115bb565b60405180910390a3505050565b6113d9610578565b611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140f90611c79565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61145c8261141a565b6114668185611424565b9350611476818560208601611434565b61147f81611442565b840191505092915050565b5f6020820190508181035f8301526114a28184611452565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114d7826114ae565b9050919050565b6114e7816114cd565b81146114f1575f80fd5b50565b5f81359050611502816114de565b92915050565b5f819050919050565b61151a81611508565b8114611524575f80fd5b50565b5f8135905061153581611511565b92915050565b5f8060408385031215611551576115506114aa565b5b5f61155e858286016114f4565b925050602061156f85828601611527565b9150509250929050565b5f8115159050919050565b61158d81611579565b82525050565b5f6020820190506115a65f830184611584565b92915050565b6115b581611508565b82525050565b5f6020820190506115ce5f8301846115ac565b92915050565b5f805f606084860312156115eb576115ea6114aa565b5b5f6115f8868287016114f4565b9350506020611609868287016114f4565b925050604061161a86828701611527565b9150509250925092565b5f60ff82169050919050565b61163981611624565b82525050565b5f6020820190506116525f830184611630565b92915050565b5f6020828403121561166d5761166c6114aa565b5b5f61167a848285016114f4565b91505092915050565b5f60208284031215611698576116976114aa565b5b5f6116a584828501611527565b91505092915050565b6116b7816114cd565b82525050565b5f6020820190506116d05f8301846116ae565b92915050565b5f80604083850312156116ec576116eb6114aa565b5b5f6116f9858286016114f4565b925050602061170a858286016114f4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061175857607f821691505b60208210810361176b5761176a611714565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117d582611508565b91506117e083611508565b9250826117f0576117ef611771565b5b828204905092915050565b7f4e6f207469656e6573207265636f6d70656e7361732070656e6469656e7465735f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f611855602183611424565b9150611860826117fb565b604082019050919050565b5f6020820190508181035f83015261188281611849565b9050919050565b5f8160011c9050919050565b5f808291508390505b60018511156118de578086048111156118ba576118b961179e565b5b60018516156118c95780820291505b80810290506118d785611889565b945061189e565b94509492505050565b5f826118f657600190506119b1565b81611903575f90506119b1565b8160018114611919576002811461192357611952565b60019150506119b1565b60ff8411156119355761193461179e565b5b8360020a91508482111561194c5761194b61179e565b5b506119b1565b5060208310610133831016604e8410600b84101617156119875782820a9050838111156119825761198161179e565b5b6119b1565b6119948484846001611895565b925090508184048111156119ab576119aa61179e565b5b81810290505b9392505050565b5f6119c282611508565b91506119cd83611624565b92506119fa7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846118e7565b905092915050565b5f611a0c82611508565b9150611a1783611508565b9250828202611a2581611508565b91508282048414831517611a3c57611a3b61179e565b5b5092915050565b7f4e6f207469656e657320737566696369656e74657320746f6b656e73207061725f8201527f61206861636572207374616b696e672e00000000000000000000000000000000602082015250565b5f611a9d603083611424565b9150611aa882611a43565b604082019050919050565b5f6020820190508181035f830152611aca81611a91565b9050919050565b5f611adb82611508565b9150611ae683611508565b9250828201905080821115611afe57611afd61179e565b5b92915050565b7f4e6f2073652070756564656e206163756e696172206d617320746f6b656e732c5f8201527f2073652065786365646520656c206d6178696d6f2e0000000000000000000000602082015250565b5f611b5e603583611424565b9150611b6982611b04565b604082019050919050565b5f6020820190508181035f830152611b8b81611b52565b9050919050565b5f606082019050611ba55f8301866116ae565b611bb260208301856115ac565b611bbf60408301846115ac565b949350505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f611bfb601083611424565b9150611c0682611bc7565b602082019050919050565b5f6020820190508181035f830152611c2881611bef565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611c63601483611424565b9150611c6e82611c2f565b602082019050919050565b5f6020820190508181035f830152611c9081611c57565b905091905056fea26469706673582212205b53c6c796d8343d8516514998be4a42d5ccb016e5996ddd6cf8f886b37707e364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7547C7A3 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA6E158F8 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA6E158F8 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x444 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x81A4AF15 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xA5B39CFB EQ PUSH2 0x35E JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x499D7F96 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x499D7F96 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x64AB8675 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x6B69E05B EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D6 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x214 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x162 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B0 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x551 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH2 0x578 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH2 0x6CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x6DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH2 0x882 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32A PUSH2 0x894 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x378 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x961 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x153B JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FE PUSH2 0x9EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x46F SWAP1 PUSH2 0x1741 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x1741 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4FA PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP2 DUP6 DUP6 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x525 PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x532 DUP6 DUP3 DUP6 PUSH2 0xB10 JUMP JUMPDEST PUSH2 0x53D DUP6 DUP6 DUP6 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x559 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x561 PUSH2 0xD19 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x17CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E8 PUSH2 0xD7B JUMP JUMPDEST PUSH0 PUSH2 0x5F2 CALLER PUSH2 0x58E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62D SWAP1 PUSH2 0x186B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x682 CALLER DUP3 PUSH2 0xDC5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D2 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x6DB PUSH0 PUSH2 0xE44 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6E5 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x6ED PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP2 PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x70D CALLER PUSH2 0x685 JUMP JUMPDEST LT ISZERO PUSH2 0x74E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x745 SWAP1 PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x776 CALLER PUSH2 0x75A PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP4 PUSH2 0x771 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x77E PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x78A SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP2 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7E0 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x7F2 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x7FA PUSH2 0xD7B JUMP JUMPDEST PUSH0 PUSH2 0x803 PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x80F SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP3 PUSH2 0x81A SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 PUSH2 0x828 PUSH2 0x512 JUMP JUMPDEST PUSH2 0x832 SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST GT ISZERO PUSH2 0x873 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86A SWAP1 PUSH2 0x1B74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87D DUP4 DUP3 PUSH2 0xDC5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x88A PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x892 PUSH2 0xF86 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8CB SWAP1 PUSH2 0x1741 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8F7 SWAP1 PUSH2 0x1741 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x942 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x919 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x942 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x925 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x969 PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x991 CALLER PUSH2 0x975 PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP4 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0xF07 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x99E PUSH2 0xAF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x9AB DUP2 DUP6 DUP6 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9BE PUSH2 0xD7B JUMP JUMPDEST PUSH2 0x9E6 DUP3 PUSH2 0x9CA PUSH2 0x549 JUMP JUMPDEST PUSH1 0xA PUSH2 0x9D6 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST DUP4 PUSH2 0x9E1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x994 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA7B PUSH2 0xC92 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF4 DUP2 PUSH2 0xE44 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB0B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFE9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB1B DUP5 DUP5 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xB9C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB8D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB84 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB9B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xFE9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC79 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8D DUP4 DUP4 DUP4 PUSH2 0x11B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC9A PUSH2 0xAF7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB8 PUSH2 0x894 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD17 JUMPI PUSH2 0xCDB PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0E SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xD21 PUSH2 0x13D1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xD64 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD71 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xD83 PUSH2 0x578 JUMP JUMPDEST ISZERO PUSH2 0xDC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBA SWAP1 PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE35 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2C SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE40 PUSH0 DUP4 DUP4 PUSH2 0x11B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF77 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6E SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF82 DUP3 PUSH0 DUP4 PUSH2 0x11B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF8E PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFD2 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFDF SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1059 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1050 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11B2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1208 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11FC SWAP2 SWAP1 PUSH2 0x1AD1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12D6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1291 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x131D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1367 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13C4 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13D9 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1418 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140F SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x145C DUP3 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x1466 DUP2 DUP6 PUSH2 0x1424 JUMP JUMPDEST SWAP4 POP PUSH2 0x1476 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x147F DUP2 PUSH2 0x1442 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14A2 DUP2 DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14D7 DUP3 PUSH2 0x14AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E7 DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP2 EQ PUSH2 0x14F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1502 DUP2 PUSH2 0x14DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151A DUP2 PUSH2 0x1508 JUMP JUMPDEST DUP2 EQ PUSH2 0x1524 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1535 DUP2 PUSH2 0x1511 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1551 JUMPI PUSH2 0x1550 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x155E DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x156F DUP6 DUP3 DUP7 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x158D DUP2 PUSH2 0x1579 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x1508 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CE PUSH0 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15EB JUMPI PUSH2 0x15EA PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F8 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1609 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x161A DUP7 DUP3 DUP8 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1639 DUP2 PUSH2 0x1624 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1652 PUSH0 DUP4 ADD DUP5 PUSH2 0x1630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x166D JUMPI PUSH2 0x166C PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x167A DUP5 DUP3 DUP6 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1698 JUMPI PUSH2 0x1697 PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16A5 DUP5 DUP3 DUP6 ADD PUSH2 0x1527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B7 DUP2 PUSH2 0x14CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x16AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16EC JUMPI PUSH2 0x16EB PUSH2 0x14AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F9 DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x170A DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1758 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x176B JUMPI PUSH2 0x176A PUSH2 0x1714 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17D5 DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x17E0 DUP4 PUSH2 0x1508 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x17F0 JUMPI PUSH2 0x17EF PUSH2 0x1771 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207469656E6573207265636F6D70656E7361732070656E6469656E746573 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1855 PUSH1 0x21 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0x1860 DUP3 PUSH2 0x17FB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1882 DUP2 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x18DE JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18B9 PUSH2 0x179E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x18C9 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x18D7 DUP6 PUSH2 0x1889 JUMP JUMPDEST SWAP5 POP PUSH2 0x189E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x18F6 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x19B1 JUMP JUMPDEST DUP2 PUSH2 0x1903 JUMPI PUSH0 SWAP1 POP PUSH2 0x19B1 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1919 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1923 JUMPI PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1935 JUMPI PUSH2 0x1934 PUSH2 0x179E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x194C JUMPI PUSH2 0x194B PUSH2 0x179E JUMP JUMPDEST JUMPDEST POP PUSH2 0x19B1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1987 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1982 JUMPI PUSH2 0x1981 PUSH2 0x179E JUMP JUMPDEST JUMPDEST PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x1994 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1895 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x19AB JUMPI PUSH2 0x19AA PUSH2 0x179E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19C2 DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CD DUP4 PUSH2 0x1624 JUMP JUMPDEST SWAP3 POP PUSH2 0x19FA PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x18E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A0C DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A17 DUP4 PUSH2 0x1508 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A25 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A3C JUMPI PUSH2 0x1A3B PUSH2 0x179E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207469656E657320737566696369656E74657320746F6B656E7320706172 PUSH0 DUP3 ADD MSTORE PUSH32 0x61206861636572207374616B696E672E00000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A9D PUSH1 0x30 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA8 DUP3 PUSH2 0x1A43 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ACA DUP2 PUSH2 0x1A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ADB DUP3 PUSH2 0x1508 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE6 DUP4 PUSH2 0x1508 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AFE JUMPI PUSH2 0x1AFD PUSH2 0x179E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2073652070756564656E206163756E696172206D617320746F6B656E732C PUSH0 DUP3 ADD MSTORE PUSH32 0x2073652065786365646520656C206D6178696D6F2E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5E PUSH1 0x35 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B69 DUP3 PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B8B DUP2 PUSH2 0x1B52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BA5 PUSH0 DUP4 ADD DUP7 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x1BB2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x1BBF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFB PUSH1 0x10 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C06 DUP3 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C28 DUP2 PUSH2 0x1BEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C63 PUSH1 0x14 DUP4 PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6E DUP3 PUSH2 0x1C2F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C90 DUP2 PUSH2 0x1C57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST MSTORE8 0xC6 0xC7 SWAP7 0xD8 CALLVALUE RETURNDATASIZE DUP6 AND MLOAD BLOBHASH SWAP9 0xBE BLOBBASEFEE TIMESTAMP 0xD5 0xCC 0xB0 AND 0xE5 SWAP10 PUSH14 0xDD6CF8F886B37707E364736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "289:3224:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2007:67:7;;;:::i;:::-;;482:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3022:171:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2611:334;;;:::i;:::-;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2153:395:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;997:380;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1856:63;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;407:47:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1434:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1623:149:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;344:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:3;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2007:67:7:-;1531:13:0;:11;:13::i;:::-;2056:10:7::1;:8;:10::i;:::-;2007:67::o:0;482:49::-;;;;;;;;;;;;;;;;;:::o;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;3022:171:7:-;3085:7;3135:2;3112:12;:20;3125:6;3112:20;;;;;;;;;;;;;;;;:25;;;;:::i;:::-;3105:32;;3022:171;;;:::o;2611:334::-;1239:19:2;:17;:19::i;:::-;2676:15:7::1;2694:28;2711:10;2694:16;:28::i;:::-;2676:46;;2751:1;2741:7;:11;2733:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2830:1;2801:14;:26;2816:10;2801:26;;;;;;;;;;;;;;;:30;;;;2872:26;2878:10;2890:7;2872:5;:26::i;:::-;2665:280;2611:334::o:0;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2153:395:7:-;1239:19:2;:17;:19::i;:::-;2273:10:7::1;:8;:10::i;:::-;2267:2;:16;;;;:::i;:::-;2257:6;:27;;;;:::i;:::-;2232:21;2242:10;2232:9;:21::i;:::-;:52;;2224:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;2348:46;2354:10;2382;:8;:10::i;:::-;2376:2;:16;;;;:::i;:::-;2366:6;:27;;;;:::i;:::-;2348:5;:46::i;:::-;2491:10;:8;:10::i;:::-;2485:2;:16;;;;:::i;:::-;2475:6;:27;;;;:::i;:::-;2447:12;:24;2460:10;2447:24;;;;;;;;;;;;;;;;:55;;;;;;;:::i;:::-;;;;;;;;2153:395:::0;:::o;997:380::-;1531:13:0;:11;:13::i;:::-;1239:19:2::1;:17;:19::i;:::-;1098:26:7::2;1143:10;:8;:10::i;:::-;1137:2;:16;;;;:::i;:::-;1127:6;:27;;;;:::i;:::-;1098:56;;1211:9;;1189:18;1173:13;:11;:13::i;:::-;:34;;;;:::i;:::-;:47;;1165:113;;;;;;;;;;;;:::i;:::-;;;;;;;;;1289:36;1295:9;1306:18;1289:5;:36::i;:::-;1087:290;997:380:::0;;:::o;1856:63::-;1531:13:0;:11;:13::i;:::-;1903:8:7::1;:6;:8::i;:::-;1856:63::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;407:47:7:-;;;;;;;;;;;;;;;;;:::o;1434:126::-;1239:19:2;:17;:19::i;:::-;1506:46:7::1;1512:10;1540;:8;:10::i;:::-;1534:2;:16;;;;:::i;:::-;1524:6;:27;;;;:::i;:::-;1506:5;:46::i;:::-;1434:126:::0;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1623:149:7:-;1239:19:2;:17;:19::i;:::-;1716:48:7::1;1725:9;1752:10;:8;:10::i;:::-;1746:2;:16;;;;:::i;:::-;1736:6;:27;;;;:::i;:::-;1716:8;:48::i;:::-;;1623:149:::0;;:::o;344:24::-;;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;1767:106::-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;7721:208:3:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8247:206:3:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;1945:106:2:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:180::-;6808:77;6805:1;6798:88;6905:4;6902:1;6895:15;6929:4;6926:1;6919:15;6946:180;6994:77;6991:1;6984:88;7091:4;7088:1;7081:15;7115:4;7112:1;7105:15;7132:185;7172:1;7189:20;7207:1;7189:20;:::i;:::-;7184:25;;7223:20;7241:1;7223:20;:::i;:::-;7218:25;;7262:1;7252:35;;7267:18;;:::i;:::-;7252:35;7309:1;7306;7302:9;7297:14;;7132:185;;;;:::o;7323:220::-;7463:34;7459:1;7451:6;7447:14;7440:58;7532:3;7527:2;7519:6;7515:15;7508:28;7323:220;:::o;7549:366::-;7691:3;7712:67;7776:2;7771:3;7712:67;:::i;:::-;7705:74;;7788:93;7877:3;7788:93;:::i;:::-;7906:2;7901:3;7897:12;7890:19;;7549:366;;;:::o;7921:419::-;8087:4;8125:2;8114:9;8110:18;8102:26;;8174:9;8168:4;8164:20;8160:1;8149:9;8145:17;8138:47;8202:131;8328:4;8202:131;:::i;:::-;8194:139;;7921:419;;;:::o;8346:102::-;8388:8;8435:5;8432:1;8428:13;8407:34;;8346:102;;;:::o;8454:848::-;8515:5;8522:4;8546:6;8537:15;;8570:5;8561:14;;8584:712;8605:1;8595:8;8592:15;8584:712;;;8700:4;8695:3;8691:14;8685:4;8682:24;8679:50;;;8709:18;;:::i;:::-;8679:50;8759:1;8749:8;8745:16;8742:451;;;9174:4;9167:5;9163:16;9154:25;;8742:451;9224:4;9218;9214:15;9206:23;;9254:32;9277:8;9254:32;:::i;:::-;9242:44;;8584:712;;;8454:848;;;;;;;:::o;9308:1073::-;9362:5;9553:8;9543:40;;9574:1;9565:10;;9576:5;;9543:40;9602:4;9592:36;;9619:1;9610:10;;9621:5;;9592:36;9688:4;9736:1;9731:27;;;;9772:1;9767:191;;;;9681:277;;9731:27;9749:1;9740:10;;9751:5;;;9767:191;9812:3;9802:8;9799:17;9796:43;;;9819:18;;:::i;:::-;9796:43;9868:8;9865:1;9861:16;9852:25;;9903:3;9896:5;9893:14;9890:40;;;9910:18;;:::i;:::-;9890:40;9943:5;;;9681:277;;10067:2;10057:8;10054:16;10048:3;10042:4;10039:13;10035:36;10017:2;10007:8;10004:16;9999:2;9993:4;9990:12;9986:35;9970:111;9967:246;;;10123:8;10117:4;10113:19;10104:28;;10158:3;10151:5;10148:14;10145:40;;;10165:18;;:::i;:::-;10145:40;10198:5;;9967:246;10238:42;10276:3;10266:8;10260:4;10257:1;10238:42;:::i;:::-;10223:57;;;;10312:4;10307:3;10303:14;10296:5;10293:25;10290:51;;;10321:18;;:::i;:::-;10290:51;10370:4;10363:5;10359:16;10350:25;;9308:1073;;;;;;:::o;10387:281::-;10445:5;10469:23;10487:4;10469:23;:::i;:::-;10461:31;;10513:25;10529:8;10513:25;:::i;:::-;10501:37;;10557:104;10594:66;10584:8;10578:4;10557:104;:::i;:::-;10548:113;;10387:281;;;;:::o;10674:410::-;10714:7;10737:20;10755:1;10737:20;:::i;:::-;10732:25;;10771:20;10789:1;10771:20;:::i;:::-;10766:25;;10826:1;10823;10819:9;10848:30;10866:11;10848:30;:::i;:::-;10837:41;;11027:1;11018:7;11014:15;11011:1;11008:22;10988:1;10981:9;10961:83;10938:139;;11057:18;;:::i;:::-;10938:139;10722:362;10674:410;;;;:::o;11090:235::-;11230:34;11226:1;11218:6;11214:14;11207:58;11299:18;11294:2;11286:6;11282:15;11275:43;11090:235;:::o;11331:366::-;11473:3;11494:67;11558:2;11553:3;11494:67;:::i;:::-;11487:74;;11570:93;11659:3;11570:93;:::i;:::-;11688:2;11683:3;11679:12;11672:19;;11331:366;;;:::o;11703:419::-;11869:4;11907:2;11896:9;11892:18;11884:26;;11956:9;11950:4;11946:20;11942:1;11931:9;11927:17;11920:47;11984:131;12110:4;11984:131;:::i;:::-;11976:139;;11703:419;;;:::o;12128:191::-;12168:3;12187:20;12205:1;12187:20;:::i;:::-;12182:25;;12221:20;12239:1;12221:20;:::i;:::-;12216:25;;12264:1;12261;12257:9;12250:16;;12285:3;12282:1;12279:10;12276:36;;;12292:18;;:::i;:::-;12276:36;12128:191;;;;:::o;12325:240::-;12465:34;12461:1;12453:6;12449:14;12442:58;12534:23;12529:2;12521:6;12517:15;12510:48;12325:240;:::o;12571:366::-;12713:3;12734:67;12798:2;12793:3;12734:67;:::i;:::-;12727:74;;12810:93;12899:3;12810:93;:::i;:::-;12928:2;12923:3;12919:12;12912:19;;12571:366;;;:::o;12943:419::-;13109:4;13147:2;13136:9;13132:18;13124:26;;13196:9;13190:4;13186:20;13182:1;13171:9;13167:17;13160:47;13224:131;13350:4;13224:131;:::i;:::-;13216:139;;12943:419;;;:::o;13368:442::-;13517:4;13555:2;13544:9;13540:18;13532:26;;13568:71;13636:1;13625:9;13621:17;13612:6;13568:71;:::i;:::-;13649:72;13717:2;13706:9;13702:18;13693:6;13649:72;:::i;:::-;13731;13799:2;13788:9;13784:18;13775:6;13731:72;:::i;:::-;13368:442;;;;;;:::o;13816:166::-;13956:18;13952:1;13944:6;13940:14;13933:42;13816:166;:::o;13988:366::-;14130:3;14151:67;14215:2;14210:3;14151:67;:::i;:::-;14144:74;;14227:93;14316:3;14227:93;:::i;:::-;14345:2;14340:3;14336:12;14329:19;;13988:366;;;:::o;14360:419::-;14526:4;14564:2;14553:9;14549:18;14541:26;;14613:9;14607:4;14603:20;14599:1;14588:9;14584:17;14577:47;14641:131;14767:4;14641:131;:::i;:::-;14633:139;;14360:419;;;:::o;14785:170::-;14925:22;14921:1;14913:6;14909:14;14902:46;14785:170;:::o;14961:366::-;15103:3;15124:67;15188:2;15183:3;15124:67;:::i;:::-;15117:74;;15200:93;15289:3;15200:93;:::i;:::-;15318:2;15313:3;15309:12;15302:19;;14961:366;;;:::o;15333:419::-;15499:4;15537:2;15526:9;15522:18;15514:26;;15586:9;15580:4;15576:20;15572:1;15561:9;15557:17;15550:47;15614:131;15740:4;15614:131;:::i;:::-;15606:139;;15333:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1474600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"calculateRewards(address)": "infinite",
								"claimStakingRewards()": "infinite",
								"decimals()": "450",
								"maxSupply()": "2513",
								"name()": "infinite",
								"owner()": "2604",
								"pause()": "infinite",
								"paused()": "2569",
								"redeemTokens(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardTokens(address,uint256)": "infinite",
								"stakeTokens(uint256)": "infinite",
								"stakedTokens(address)": "2935",
								"stakingRewards(address)": "2825",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"transferTokens(address,uint256)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 3513,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 906,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 596,
									"end": 906,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 596,
									"end": 906,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 596,
									"end": 906,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 596,
									"end": 906,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 596,
									"end": 906,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 596,
									"end": 906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 596,
									"end": 906,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 686,
									"end": 696,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "54616D626F546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "5442540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 741,
									"end": 751,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 741,
									"end": 749,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 741,
									"end": 749,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 741,
									"end": 749,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 741,
									"end": 751,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 741,
									"end": 751,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 741,
									"end": 751,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 741,
									"end": 751,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 741,
									"end": 751,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 735,
									"end": 737,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 735,
									"end": 751,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 735,
									"end": 751,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 735,
									"end": 751,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 735,
									"end": 751,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 735,
									"end": 751,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 735,
									"end": 751,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 735,
									"end": 751,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 721,
									"end": 731,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 721,
									"end": 752,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 721,
									"end": 752,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 721,
									"end": 752,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 721,
									"end": 752,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 721,
									"end": 752,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 721,
									"end": 752,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 721,
									"end": 752,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 718,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 709,
									"end": 752,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 709,
									"end": 752,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 709,
									"end": 752,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 709,
									"end": 752,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 798,
									"end": 851,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 804,
									"end": 814,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 839,
									"end": 849,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 839,
									"end": 847,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 839,
									"end": 847,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 839,
									"end": 847,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 839,
									"end": 849,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 839,
									"end": 849,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 839,
									"end": 849,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 839,
									"end": 849,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 839,
									"end": 849,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 833,
									"end": 835,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 833,
									"end": 849,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 833,
									"end": 849,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 833,
									"end": 849,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 833,
									"end": 849,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 833,
									"end": 849,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 833,
									"end": 849,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 833,
									"end": 849,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 816,
									"end": 829,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 816,
									"end": 850,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 816,
									"end": 850,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 816,
									"end": 850,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 816,
									"end": 850,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 816,
									"end": 850,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 816,
									"end": 850,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 816,
									"end": 850,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 798,
									"end": 803,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 798,
									"end": 803,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 798,
									"end": 803,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 798,
									"end": 851,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 798,
									"end": 851,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 798,
									"end": 851,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 798,
									"end": 851,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 798,
									"end": 851,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 596,
									"end": 906,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 3,
									"value": "49"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "94"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 773,
									"end": 779,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 787,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 830,
									"end": 832,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 827,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 809,
									"end": 816,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 805,
									"end": 828,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 801,
									"end": 833,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 798,
									"end": 917,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 798,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 836,
									"end": 915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 836,
									"end": 915,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 798,
									"end": 917,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 1037,
									"end": 1044,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 981,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 927,
									"end": 1055,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1094,
									"end": 1096,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1176,
									"end": 1183,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1152,
									"end": 1174,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1120,
									"end": 1184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1065,
									"end": 1194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 1201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1259,
									"end": 1265,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1293,
									"end": 1298,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1287,
									"end": 1299,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1277,
									"end": 1299,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1277,
									"end": 1299,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1207,
									"end": 1306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1492,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1312,
									"end": 1492,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1360,
									"end": 1437,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1357,
									"end": 1358,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1438,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1457,
									"end": 1461,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1454,
									"end": 1455,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1447,
									"end": 1462,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1481,
									"end": 1485,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1478,
									"end": 1479,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1486,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1498,
									"end": 1678,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1498,
									"end": 1678,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1623,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1543,
									"end": 1544,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1624,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1643,
									"end": 1647,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1640,
									"end": 1641,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1633,
									"end": 1648,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1667,
									"end": 1671,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1664,
									"end": 1665,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1672,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1728,
									"end": 1734,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1765,
									"end": 1766,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 1767,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1745,
									"end": 1767,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1745,
									"end": 1767,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1810,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1802,
									"end": 1814,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1833,
									"end": 1851,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1881,
									"end": 1887,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1877,
									"end": 1894,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1867,
									"end": 1894,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1867,
									"end": 1894,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1953,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1943,
									"end": 1949,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1940,
									"end": 1954,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1920,
									"end": 1938,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1955,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1970,
									"end": 1988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1735,
									"end": 2004,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 2004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2059,
									"end": 2063,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2074,
									"end": 2085,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2074,
									"end": 2085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2105,
									"end": 2108,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2102,
									"end": 2103,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2095,
									"end": 2109,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2139,
									"end": 2143,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2136,
									"end": 2137,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2241,
									"end": 2243,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2229,
									"end": 2234,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2225,
									"end": 2239,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2221,
									"end": 2244,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2244,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2244,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2157,
									"end": 2250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2300,
									"end": 2308,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2350,
									"end": 2355,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2344,
									"end": 2348,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2340,
									"end": 2356,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2319,
									"end": 2356,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2319,
									"end": 2356,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2363,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2438,
									"end": 2444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2488,
									"end": 2489,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2476,
									"end": 2486,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2472,
									"end": 2490,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 2541,
									"end": 2607,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2530,
									"end": 2539,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2511,
									"end": 2608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 2659,
									"end": 2667,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2648,
									"end": 2657,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 2629,
									"end": 2668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "tag",
									"source": 8,
									"value": "112"
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2617,
									"end": 2668,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2617,
									"end": 2668,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2701,
									"end": 2705,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2697,
									"end": 2706,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2690,
									"end": 2695,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2686,
									"end": 2707,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2707,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2677,
									"end": 2707,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2750,
									"end": 2754,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2740,
									"end": 2748,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2755,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2729,
									"end": 2734,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2756,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2716,
									"end": 2756,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2716,
									"end": 2756,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2445,
									"end": 2762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2445,
									"end": 2762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2369,
									"end": 2762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2796,
									"end": 2799,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2817,
									"end": 2822,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2810,
									"end": 2822,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2810,
									"end": 2822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2768,
									"end": 2828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2884,
									"end": 2893,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 2962,
									"end": 2967,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2944,
									"end": 2968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "tag",
									"source": 8,
									"value": "117"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2935,
									"end": 2969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2917,
									"end": 2970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2904,
									"end": 2970,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2904,
									"end": 2970,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2834,
									"end": 2976,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3025,
									"end": 3028,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3046,
									"end": 3051,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3039,
									"end": 3051,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3039,
									"end": 3051,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2982,
									"end": 3057,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3204,
									"end": 3211,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 3173,
									"end": 3212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 3307,
									"end": 3323,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 3283,
									"end": 3324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3275,
									"end": 3281,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3268,
									"end": 3272,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3262,
									"end": 3273,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3234,
									"end": 3325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3228,
									"end": 3232,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3221,
									"end": 3326,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3139,
									"end": 3332,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3063,
									"end": 3332,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3338,
									"end": 3411,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3338,
									"end": 3411,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3383,
									"end": 3386,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3338,
									"end": 3411,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3338,
									"end": 3411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 3494,
									"end": 3526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3593,
									"end": 3599,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3585,
									"end": 3591,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3579,
									"end": 3583,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 3535,
									"end": 3600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3470,
									"end": 3606,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3417,
									"end": 3606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3689,
									"end": 3692,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3682,
									"end": 3687,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3679,
									"end": 3693,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3780,
									"end": 3781,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3773,
									"end": 3778,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 3743,
									"end": 3782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3716,
									"end": 3717,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3709,
									"end": 3714,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3705,
									"end": 3718,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3696,
									"end": 3718,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3696,
									"end": 3718,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3612,
									"end": 3798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3905,
									"end": 3907,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 3900,
									"end": 3903,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3897,
									"end": 3908,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 3971,
									"end": 3976,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 3939,
									"end": 3977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "tag",
									"source": 8,
									"value": "134"
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 4041,
									"end": 4051,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4023,
									"end": 4052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4013,
									"end": 4021,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4009,
									"end": 4053,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4206,
									"end": 4208,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4204,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4191,
									"end": 4209,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4227,
									"end": 4235,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4324,
									"end": 4327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4306,
									"end": 4328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4296,
									"end": 4304,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4292,
									"end": 4329,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4279,
									"end": 4290,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 4250,
									"end": 4330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4340,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3909,
									"end": 4340,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "tag",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3804,
									"end": 4347,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4407,
									"end": 4415,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4457,
									"end": 4462,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4451,
									"end": 4455,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4447,
									"end": 4463,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4426,
									"end": 4463,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4426,
									"end": 4463,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4353,
									"end": 4470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4520,
									"end": 4526,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4601,
									"end": 4602,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4597,
									"end": 4603,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4589,
									"end": 4594,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4586,
									"end": 4587,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 4582,
									"end": 4595,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 4553,
									"end": 4604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4549,
									"end": 4605,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4634,
									"end": 4638,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4628,
									"end": 4632,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4624,
									"end": 4639,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4614,
									"end": 4639,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4614,
									"end": 4639,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4527,
									"end": 4645,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4476,
									"end": 4645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4726,
									"end": 4730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4897,
									"end": 4900,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4891,
									"end": 4895,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 4872,
									"end": 4901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4901,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4901,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4934,
									"end": 4937,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4931,
									"end": 4932,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4927,
									"end": 4938,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4921,
									"end": 4925,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4918,
									"end": 4939,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4910,
									"end": 4939,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4910,
									"end": 4939,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4650,
									"end": 4945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5100,
									"end": 5103,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 5067,
									"end": 5104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5169,
									"end": 5187,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5161,
									"end": 5167,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5158,
									"end": 5188,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 5191,
									"end": 5209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 5267,
									"end": 5271,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5261,
									"end": 5272,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 5235,
									"end": 5273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5380,
									"end": 5386,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5372,
									"end": 5378,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5366,
									"end": 5370,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 5320,
									"end": 5387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5414,
									"end": 5415,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5438,
									"end": 5442,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5425,
									"end": 5442,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5425,
									"end": 5442,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5470,
									"end": 5472,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5462,
									"end": 5468,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5459,
									"end": 5473,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5487,
									"end": 5488,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6144,
									"end": 6145,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6161,
									"end": 6167,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6210,
									"end": 6219,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6205,
									"end": 6208,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6201,
									"end": 6220,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6195,
									"end": 6221,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6186,
									"end": 6221,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6186,
									"end": 6221,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6321,
									"end": 6327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6314,
									"end": 6319,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 6261,
									"end": 6328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6255,
									"end": 6259,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6248,
									"end": 6329,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6117,
									"end": 6339,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5534,
									"end": 5538,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5530,
									"end": 5539,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5522,
									"end": 5528,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5518,
									"end": 5540,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 5568,
									"end": 5605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5627,
									"end": 5628,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5655,
									"end": 5662,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5652,
									"end": 5653,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5649,
									"end": 5663,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5743,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5729,
									"end": 5732,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 5725,
									"end": 5744,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5719,
									"end": 5745,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5711,
									"end": 5717,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5704,
									"end": 5746,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5785,
									"end": 5786,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5777,
									"end": 5783,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5773,
									"end": 5787,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5832,
									"end": 5834,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5821,
									"end": 5830,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5817,
									"end": 5835,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5804,
									"end": 5835,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 5804,
									"end": 5835,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5675,
									"end": 5676,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5671,
									"end": 5683,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5683,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5683,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5877,
									"end": 5883,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5868,
									"end": 5875,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5865,
									"end": 5884,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5935,
									"end": 5944,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5930,
									"end": 5933,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 5926,
									"end": 5945,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5920,
									"end": 5946,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 6020,
									"end": 6024,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6012,
									"end": 6018,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6008,
									"end": 6025,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5997,
									"end": 6006,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 5978,
									"end": 6026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "tag",
									"source": 8,
									"value": "159"
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5970,
									"end": 5976,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6027,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5885,
									"end": 6041,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6087,
									"end": 6088,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6075,
									"end": 6081,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6071,
									"end": 6085,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6067,
									"end": 6089,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6061,
									"end": 6065,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6054,
									"end": 6090,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5489,
									"end": 6100,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5489,
									"end": 6100,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5489,
									"end": 6100,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "tag",
									"source": 8,
									"value": "150"
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5042,
									"end": 6345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5042,
									"end": 6345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5042,
									"end": 6345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4950,
									"end": 6345,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6477,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 6351,
									"end": 6477,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6428,
									"end": 6470,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6421,
									"end": 6426,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6417,
									"end": 6471,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6406,
									"end": 6471,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6406,
									"end": 6471,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6477,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6477,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6477,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6351,
									"end": 6477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6483,
									"end": 6579,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 6483,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6520,
									"end": 6527,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6549,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 6567,
									"end": 6572,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6549,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 6549,
									"end": 6573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6549,
									"end": 6573,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 6549,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6538,
									"end": 6573,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6538,
									"end": 6573,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6483,
									"end": 6579,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6483,
									"end": 6579,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6483,
									"end": 6579,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6483,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6690,
									"end": 6695,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 6672,
									"end": 6696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "tag",
									"source": 8,
									"value": "164"
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6660,
									"end": 6697,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6585,
									"end": 6703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6840,
									"end": 6842,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6829,
									"end": 6838,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6843,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6921,
									"end": 6922,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6919,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6906,
									"end": 6923,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6897,
									"end": 6903,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 6853,
									"end": 6924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6709,
									"end": 6931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6937,
									"end": 7117,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 6937,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6985,
									"end": 7062,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6982,
									"end": 6983,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6975,
									"end": 7063,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7082,
									"end": 7086,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7079,
									"end": 7080,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7072,
									"end": 7087,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7106,
									"end": 7110,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7096,
									"end": 7111,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7165,
									"end": 7173,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7217,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7209,
									"end": 7210,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7205,
									"end": 7218,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 7184,
									"end": 7218,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7184,
									"end": 7218,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7123,
									"end": 7225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7292,
									"end": 7297,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7299,
									"end": 7303,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7323,
									"end": 7329,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7314,
									"end": 7329,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7314,
									"end": 7329,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7347,
									"end": 7352,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7338,
									"end": 7352,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7338,
									"end": 7352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7382,
									"end": 7383,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7372,
									"end": 7380,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7369,
									"end": 7384,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7477,
									"end": 7481,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7472,
									"end": 7475,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7468,
									"end": 7482,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 7462,
									"end": 7466,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7459,
									"end": 7483,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 7486,
									"end": 7504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "tag",
									"source": 8,
									"value": "174"
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7536,
									"end": 7537,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 7526,
									"end": 7534,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7951,
									"end": 7955,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7944,
									"end": 7949,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7940,
									"end": 7956,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7931,
									"end": 7956,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7931,
									"end": 7956,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8001,
									"end": 8005,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7995,
									"end": 7999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7991,
									"end": 8006,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7983,
									"end": 8006,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7983,
									"end": 8006,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 8054,
									"end": 8062,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 8031,
									"end": 8063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "tag",
									"source": 8,
									"value": "176"
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8019,
									"end": 8063,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 8019,
									"end": 8063,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "tag",
									"source": 8,
									"value": "172"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7231,
									"end": 8079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8139,
									"end": 8144,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8330,
									"end": 8338,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8351,
									"end": 8352,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8342,
									"end": 8352,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8342,
									"end": 8352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8353,
									"end": 8358,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 8353,
									"end": 8358,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8379,
									"end": 8383,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8396,
									"end": 8397,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8397,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8387,
									"end": 8397,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8465,
									"end": 8469,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8513,
									"end": 8514,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8549,
									"end": 8550,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8526,
									"end": 8527,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8517,
									"end": 8527,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8517,
									"end": 8527,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 8579,
									"end": 8587,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8576,
									"end": 8593,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 8596,
									"end": 8614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8645,
									"end": 8653,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8642,
									"end": 8643,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8638,
									"end": 8654,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 8629,
									"end": 8654,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8629,
									"end": 8654,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8680,
									"end": 8683,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8673,
									"end": 8678,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8670,
									"end": 8684,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 8687,
									"end": 8705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8844,
									"end": 8846,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8834,
									"end": 8842,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8831,
									"end": 8847,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8825,
									"end": 8828,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 8819,
									"end": 8823,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8816,
									"end": 8829,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8812,
									"end": 8848,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8794,
									"end": 8796,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 8784,
									"end": 8792,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8781,
									"end": 8797,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8776,
									"end": 8778,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 8770,
									"end": 8774,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8767,
									"end": 8779,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8763,
									"end": 8798,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8747,
									"end": 8858,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8900,
									"end": 8908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8894,
									"end": 8898,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8890,
									"end": 8909,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 8881,
									"end": 8909,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8881,
									"end": 8909,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8935,
									"end": 8938,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8928,
									"end": 8933,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8925,
									"end": 8939,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "tag",
									"source": 8,
									"value": "188"
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8975,
									"end": 8980,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 8975,
									"end": 8980,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 9053,
									"end": 9056,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9043,
									"end": 9051,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9037,
									"end": 9041,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9034,
									"end": 9035,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 9015,
									"end": 9057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9089,
									"end": 9093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9084,
									"end": 9087,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9080,
									"end": 9094,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 9073,
									"end": 9078,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9070,
									"end": 9095,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 9098,
									"end": 9116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "tag",
									"source": 8,
									"value": "192"
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9147,
									"end": 9151,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9140,
									"end": 9145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9136,
									"end": 9152,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8085,
									"end": 9158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9199,
									"end": 9206,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9239,
									"end": 9243,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 9232,
									"end": 9237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9228,
									"end": 9244,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9164,
									"end": 9250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9314,
									"end": 9319,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 9356,
									"end": 9360,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 9338,
									"end": 9361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "tag",
									"source": 8,
									"value": "195"
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9330,
									"end": 9361,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9330,
									"end": 9361,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 9398,
									"end": 9406,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 9382,
									"end": 9407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "tag",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9370,
									"end": 9407,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9370,
									"end": 9407,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 9463,
									"end": 9529,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9453,
									"end": 9461,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9447,
									"end": 9451,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 9426,
									"end": 9530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "tag",
									"source": 8,
									"value": "197"
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9417,
									"end": 9530,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9417,
									"end": 9530,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9256,
									"end": 9537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9583,
									"end": 9590,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9624,
									"end": 9625,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 9606,
									"end": 9626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "tag",
									"source": 8,
									"value": "199"
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9601,
									"end": 9626,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9601,
									"end": 9626,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 9658,
									"end": 9659,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 9640,
									"end": 9660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "tag",
									"source": 8,
									"value": "200"
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9635,
									"end": 9660,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9635,
									"end": 9660,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9695,
									"end": 9696,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9692,
									"end": 9693,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9688,
									"end": 9697,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "201"
								},
								{
									"begin": 9735,
									"end": 9746,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 9717,
									"end": 9747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "tag",
									"source": 8,
									"value": "201"
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9706,
									"end": 9747,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9706,
									"end": 9747,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9896,
									"end": 9897,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9887,
									"end": 9894,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9883,
									"end": 9898,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9877,
									"end": 9899,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 9857,
									"end": 9858,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9850,
									"end": 9859,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 9830,
									"end": 9913,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 9926,
									"end": 9944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "tag",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "tag",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9591,
									"end": 9953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9543,
									"end": 9953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9999,
									"end": 10002,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 10036,
									"end": 10037,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 10018,
									"end": 10038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "tag",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10013,
									"end": 10038,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10013,
									"end": 10038,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 10070,
									"end": 10071,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 10052,
									"end": 10072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "tag",
									"source": 8,
									"value": "206"
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10047,
									"end": 10072,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10047,
									"end": 10072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10095,
									"end": 10096,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10092,
									"end": 10093,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10088,
									"end": 10097,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10081,
									"end": 10097,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10081,
									"end": 10097,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10116,
									"end": 10119,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 10113,
									"end": 10114,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10110,
									"end": 10120,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "207"
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 10123,
									"end": 10141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "tag",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "tag",
									"source": 8,
									"value": "207"
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9959,
									"end": 10150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 10261,
									"end": 10266,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 10243,
									"end": 10267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "tag",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10238,
									"end": 10241,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10231,
									"end": 10268,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10156,
									"end": 10274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10429,
									"end": 10433,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10467,
									"end": 10469,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 10456,
									"end": 10465,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10452,
									"end": 10470,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10444,
									"end": 10470,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10444,
									"end": 10470,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 10548,
									"end": 10549,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10537,
									"end": 10546,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10533,
									"end": 10550,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10524,
									"end": 10530,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 10480,
									"end": 10551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "tag",
									"source": 8,
									"value": "212"
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "213"
								},
								{
									"begin": 10629,
									"end": 10631,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10618,
									"end": 10627,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10614,
									"end": 10632,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10605,
									"end": 10611,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 10561,
									"end": 10633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "tag",
									"source": 8,
									"value": "213"
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 10711,
									"end": 10713,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 10700,
									"end": 10709,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10696,
									"end": 10714,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10687,
									"end": 10693,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 10643,
									"end": 10715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "tag",
									"source": 8,
									"value": "214"
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10280,
									"end": 10722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10821,
									"end": 10825,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10859,
									"end": 10861,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10848,
									"end": 10857,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10844,
									"end": 10862,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10836,
									"end": 10862,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10836,
									"end": 10862,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 10940,
									"end": 10941,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10929,
									"end": 10938,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10925,
									"end": 10942,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10916,
									"end": 10922,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 10872,
									"end": 10943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "tag",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10728,
									"end": 10950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 3513,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b53c6c796d8343d8516514998be4a42d5ccb016e5996ddd6cf8f886b37707e364736f6c634300081a0033",
									".code": [
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "7547C7A3"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "A6E158F8"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "A6E158F8"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "BEC3FA17"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "D5ABEB01"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "7547C7A3"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "81A4AF15"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "A5B39CFB"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "499D7F96"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "499D7F96"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "64AB8675"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "6B69E05B"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 289,
											"end": 3513,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2074,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2007,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2007,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2007,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2074,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2007,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2074,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 482,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 482,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 482,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3022,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3022,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3022,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2945,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2611,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2611,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2611,
											"end": 2945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2945,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2611,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2945,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2153,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2153,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 997,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 997,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1856,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 407,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 407,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 407,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 407,
											"end": 454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1434,
											"end": 1560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1434,
											"end": 1560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1623,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1623,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 344,
											"end": 368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 344,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 344,
											"end": 368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 344,
											"end": 368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 368,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 344,
											"end": 368,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 344,
											"end": 368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 344,
											"end": 368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 368,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2074,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2007,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2056,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2056,
											"end": 2066,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2056,
											"end": 2066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 482,
											"end": 531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 3112,
											"end": 3124,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3131,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3132,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3112,
											"end": 3137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 3112,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 3112,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2945,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2611,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2711,
											"end": 2721,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2694,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2694,
											"end": 2722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2694,
											"end": 2722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 2694,
											"end": 2722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2676,
											"end": 2722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2752,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 2733,
											"end": 2790,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2733,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2826,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2827,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2831,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2801,
											"end": 2831,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2878,
											"end": 2888,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2890,
											"end": 2897,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2872,
											"end": 2898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2872,
											"end": 2898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2273,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2273,
											"end": 2283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2273,
											"end": 2283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2267,
											"end": 2283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2267,
											"end": 2283,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2283,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2267,
											"end": 2283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2267,
											"end": 2283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2263,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2257,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2257,
											"end": 2284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2257,
											"end": 2284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2242,
											"end": 2252,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2232,
											"end": 2253,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2253,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2232,
											"end": 2253,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2284,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2284,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2224,
											"end": 2337,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2224,
											"end": 2337,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2354,
											"end": 2364,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2382,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2382,
											"end": 2390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2382,
											"end": 2392,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2382,
											"end": 2392,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2382,
											"end": 2392,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2376,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2376,
											"end": 2392,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2392,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2376,
											"end": 2392,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2392,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2376,
											"end": 2392,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2366,
											"end": 2393,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2393,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2366,
											"end": 2393,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2393,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2366,
											"end": 2393,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2348,
											"end": 2394,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2348,
											"end": 2394,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2348,
											"end": 2394,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2491,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2491,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2491,
											"end": 2501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2491,
											"end": 2501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2491,
											"end": 2501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2485,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2485,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2485,
											"end": 2501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2485,
											"end": 2501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2475,
											"end": 2502,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2475,
											"end": 2502,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2475,
											"end": 2502,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2475,
											"end": 2502,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2460,
											"end": 2470,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 2447,
											"end": 2502,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2502,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2153,
											"end": 2548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1153,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1143,
											"end": 1151,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1143,
											"end": 1153,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1153,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1143,
											"end": 1153,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1139,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1137,
											"end": 1153,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1137,
											"end": 1153,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1153,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1153,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1137,
											"end": 1153,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1137,
											"end": 1153,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1137,
											"end": 1153,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1127,
											"end": 1133,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1127,
											"end": 1154,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1127,
											"end": 1154,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1127,
											"end": 1154,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1127,
											"end": 1154,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1127,
											"end": 1154,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1127,
											"end": 1154,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1127,
											"end": 1154,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1154,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1154,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1211,
											"end": 1220,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1189,
											"end": 1207,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1186,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1173,
											"end": 1184,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1173,
											"end": 1186,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1186,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1173,
											"end": 1186,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1173,
											"end": 1207,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1207,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 1173,
											"end": 1207,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1207,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1173,
											"end": 1207,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1220,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1220,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1165,
											"end": 1278,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1165,
											"end": 1278,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1289,
											"end": 1325,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1295,
											"end": 1304,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1324,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1289,
											"end": 1294,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1289,
											"end": 1325,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1289,
											"end": 1325,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1289,
											"end": 1325,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1377,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1903,
											"end": 1911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1903,
											"end": 1909,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 1903,
											"end": 1911,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1903,
											"end": 1911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1903,
											"end": 1911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 407,
											"end": 454,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 407,
											"end": 454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1512,
											"end": 1522,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1540,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1540,
											"end": 1550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 1540,
											"end": 1550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1534,
											"end": 1550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1534,
											"end": 1550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1530,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1524,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1524,
											"end": 1551,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1551,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1524,
											"end": 1551,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1506,
											"end": 1552,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1552,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1506,
											"end": 1552,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1725,
											"end": 1734,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1752,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1752,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1752,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1746,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1746,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 1746,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 1746,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1742,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 1736,
											"end": 1763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1736,
											"end": 1763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 1736,
											"end": 1763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1716,
											"end": 1764,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1764,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1716,
											"end": 1764,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1764,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 344,
											"end": 368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 344,
											"end": 368,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 344,
											"end": 368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6940,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6760,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 6885,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6886,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6905,
											"end": 6909,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6902,
											"end": 6903,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6895,
											"end": 6910,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6929,
											"end": 6933,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6926,
											"end": 6927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6934,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6946,
											"end": 7126,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6946,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6994,
											"end": 7071,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6991,
											"end": 6992,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 7072,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7095,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7088,
											"end": 7089,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7081,
											"end": 7096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7115,
											"end": 7119,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7112,
											"end": 7113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7317,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 7132,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7189,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 7207,
											"end": 7208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7189,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 7189,
											"end": 7209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7189,
											"end": 7209,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 7189,
											"end": 7209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7184,
											"end": 7209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7223,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7223,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 7223,
											"end": 7243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7223,
											"end": 7243,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 7223,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7218,
											"end": 7243,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7218,
											"end": 7243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7262,
											"end": 7263,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7252,
											"end": 7287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 7252,
											"end": 7287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 7267,
											"end": 7285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 7267,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7252,
											"end": 7287,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 7252,
											"end": 7287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7309,
											"end": 7310,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7306,
											"end": 7307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7297,
											"end": 7311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7297,
											"end": 7311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7317,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7317,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7317,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7317,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7323,
											"end": 7543,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 7323,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7497,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F207469656E6573207265636F6D70656E7361732070656E6469656E746573"
										},
										{
											"begin": 7459,
											"end": 7460,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7457,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7447,
											"end": 7461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7440,
											"end": 7498,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7532,
											"end": 7535,
											"name": "PUSH",
											"source": 8,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7527,
											"end": 7529,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7525,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7515,
											"end": 7530,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7536,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7323,
											"end": 7543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7323,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7549,
											"end": 7915,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 7549,
											"end": 7915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7691,
											"end": 7694,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7776,
											"end": 7778,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 7771,
											"end": 7774,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7712,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 7712,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7712,
											"end": 7779,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 7712,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7779,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7877,
											"end": 7880,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 7788,
											"end": 7881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7881,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 7788,
											"end": 7881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7901,
											"end": 7904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7897,
											"end": 7909,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7890,
											"end": 7909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7890,
											"end": 7909,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7549,
											"end": 7915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7549,
											"end": 7915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7549,
											"end": 7915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7549,
											"end": 7915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 8340,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7921,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8087,
											"end": 8091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8127,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 8123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8110,
											"end": 8128,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8102,
											"end": 8128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8102,
											"end": 8128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8184,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8160,
											"end": 8161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8158,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8145,
											"end": 8162,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8138,
											"end": 8185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 8328,
											"end": 8332,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 8202,
											"end": 8333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8202,
											"end": 8333,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 8202,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8194,
											"end": 8333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8194,
											"end": 8333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 8340,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 8340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 8340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 8340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8448,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 8346,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8388,
											"end": 8396,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8435,
											"end": 8440,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8432,
											"end": 8433,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 8407,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8407,
											"end": 8441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 9302,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8454,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8515,
											"end": 8520,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8546,
											"end": 8552,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8537,
											"end": 8552,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8537,
											"end": 8552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8570,
											"end": 8575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8561,
											"end": 8575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8561,
											"end": 8575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 9296,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 8584,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8605,
											"end": 8606,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8595,
											"end": 8603,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8592,
											"end": 8607,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 9296,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 8584,
											"end": 9296,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8700,
											"end": 8704,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8695,
											"end": 8698,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8691,
											"end": 8705,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8682,
											"end": 8706,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8679,
											"end": 8729,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8679,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 8679,
											"end": 8729,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 8709,
											"end": 8727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8679,
											"end": 8729,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 8679,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8749,
											"end": 8757,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8745,
											"end": 8761,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8742,
											"end": 9193,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8742,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 8742,
											"end": 9193,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9174,
											"end": 9178,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9167,
											"end": 9172,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9163,
											"end": 9179,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9179,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9154,
											"end": 9179,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8742,
											"end": 9193,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 8742,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9224,
											"end": 9228,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9218,
											"end": 9222,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 9206,
											"end": 9229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9206,
											"end": 9229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9254,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9254,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 9254,
											"end": 9286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9254,
											"end": 9286,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 9254,
											"end": 9286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9242,
											"end": 9286,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 9242,
											"end": 9286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 8584,
											"end": 9296,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 9296,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 8584,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 9302,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 9302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 9302,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 9302,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 9302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 9302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 9302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 9302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 10381,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 9308,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9362,
											"end": 9367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9553,
											"end": 9561,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9543,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 9543,
											"end": 9583,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9574,
											"end": 9575,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9565,
											"end": 9575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9565,
											"end": 9575,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 9576,
											"end": 9581,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9543,
											"end": 9583,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 9543,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9602,
											"end": 9606,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9592,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 9592,
											"end": 9628,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9619,
											"end": 9620,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9610,
											"end": 9620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9621,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 9621,
											"end": 9626,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9592,
											"end": 9628,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 9592,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9688,
											"end": 9692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9736,
											"end": 9737,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9731,
											"end": 9758,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9731,
											"end": 9758,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9731,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 9731,
											"end": 9758,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 9773,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9767,
											"end": 9958,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9767,
											"end": 9958,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9767,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 9767,
											"end": 9958,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9681,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 9681,
											"end": 9958,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9731,
											"end": 9758,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 9731,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9749,
											"end": 9750,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9740,
											"end": 9750,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9740,
											"end": 9750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9751,
											"end": 9756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9751,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 9751,
											"end": 9756,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9767,
											"end": 9958,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 9767,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9812,
											"end": 9815,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 9802,
											"end": 9810,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9816,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 9839,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 9796,
											"end": 9839,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 9819,
											"end": 9837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9796,
											"end": 9839,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 9796,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9868,
											"end": 9876,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9861,
											"end": 9877,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9877,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9852,
											"end": 9877,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9903,
											"end": 9906,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9896,
											"end": 9901,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9893,
											"end": 9907,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 9930,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 9930,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 9890,
											"end": 9930,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 9910,
											"end": 9928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9890,
											"end": 9930,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 9890,
											"end": 9930,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9943,
											"end": 9948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9943,
											"end": 9948,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 9943,
											"end": 9948,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9681,
											"end": 9958,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 9681,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9681,
											"end": 9958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10067,
											"end": 10069,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10057,
											"end": 10065,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10054,
											"end": 10070,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10048,
											"end": 10051,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 10042,
											"end": 10046,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10039,
											"end": 10052,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10035,
											"end": 10071,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10017,
											"end": 10019,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 10007,
											"end": 10015,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10004,
											"end": 10020,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9999,
											"end": 10001,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 9993,
											"end": 9997,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9990,
											"end": 10002,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9986,
											"end": 10021,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9970,
											"end": 10081,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 9967,
											"end": 10213,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9967,
											"end": 10213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 9967,
											"end": 10213,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10123,
											"end": 10131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10113,
											"end": 10132,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 10104,
											"end": 10132,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10104,
											"end": 10132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10158,
											"end": 10161,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10151,
											"end": 10156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10148,
											"end": 10162,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10145,
											"end": 10185,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10145,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 10145,
											"end": 10185,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 10165,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10145,
											"end": 10185,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 10145,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10198,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 10198,
											"end": 10203,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9967,
											"end": 10213,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 9967,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10238,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 10276,
											"end": 10279,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10266,
											"end": 10274,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10260,
											"end": 10264,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10258,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10238,
											"end": 10280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 10238,
											"end": 10280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10238,
											"end": 10280,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 10238,
											"end": 10280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10223,
											"end": 10280,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10223,
											"end": 10280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10223,
											"end": 10280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10223,
											"end": 10280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10307,
											"end": 10310,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10303,
											"end": 10317,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10296,
											"end": 10301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10293,
											"end": 10318,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10290,
											"end": 10341,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10290,
											"end": 10341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 10290,
											"end": 10341,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 10321,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 10321,
											"end": 10339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10321,
											"end": 10339,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 10321,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10290,
											"end": 10341,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 10290,
											"end": 10341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10370,
											"end": 10374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10363,
											"end": 10368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10359,
											"end": 10375,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 10381,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 9308,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 10381,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 10381,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 10381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 10381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 10381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10668,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 10387,
											"end": 10668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10445,
											"end": 10450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10469,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 10487,
											"end": 10491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10469,
											"end": 10492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10469,
											"end": 10492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10469,
											"end": 10492,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 10469,
											"end": 10492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10461,
											"end": 10492,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10461,
											"end": 10492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10513,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 10529,
											"end": 10537,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10513,
											"end": 10538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 10513,
											"end": 10538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10513,
											"end": 10538,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 10513,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10501,
											"end": 10538,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10501,
											"end": 10538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10557,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 10594,
											"end": 10660,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10584,
											"end": 10592,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10578,
											"end": 10582,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10557,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 10557,
											"end": 10661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10557,
											"end": 10661,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 10557,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10668,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10387,
											"end": 10668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10674,
											"end": 11084,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 10674,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10737,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 10755,
											"end": 10756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10737,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10737,
											"end": 10757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10737,
											"end": 10757,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 10737,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10757,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10732,
											"end": 10757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 10789,
											"end": 10790,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10771,
											"end": 10791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 10771,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10766,
											"end": 10791,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10766,
											"end": 10791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10826,
											"end": 10827,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10823,
											"end": 10824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10828,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 10848,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 10866,
											"end": 10877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10848,
											"end": 10878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 10848,
											"end": 10878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10848,
											"end": 10878,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 10848,
											"end": 10878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10837,
											"end": 10878,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10837,
											"end": 10878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11027,
											"end": 11028,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11018,
											"end": 11025,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11014,
											"end": 11029,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11011,
											"end": 11012,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11008,
											"end": 11030,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 10989,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10981,
											"end": 10990,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10961,
											"end": 11044,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 10938,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 10938,
											"end": 11077,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11057,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 11057,
											"end": 11075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 11057,
											"end": 11075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11057,
											"end": 11075,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 11057,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10938,
											"end": 11077,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 10938,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10722,
											"end": 11084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10674,
											"end": 11084,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10674,
											"end": 11084,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10674,
											"end": 11084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10674,
											"end": 11084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10674,
											"end": 11084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11090,
											"end": 11325,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 11090,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11230,
											"end": 11264,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F207469656E657320737566696369656E74657320746F6B656E7320706172"
										},
										{
											"begin": 11226,
											"end": 11227,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11218,
											"end": 11224,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11214,
											"end": 11228,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11207,
											"end": 11265,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11299,
											"end": 11317,
											"name": "PUSH",
											"source": 8,
											"value": "61206861636572207374616B696E672E00000000000000000000000000000000"
										},
										{
											"begin": 11294,
											"end": 11296,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11286,
											"end": 11292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11282,
											"end": 11297,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11275,
											"end": 11318,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11090,
											"end": 11325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11090,
											"end": 11325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11697,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 11331,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11473,
											"end": 11476,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11494,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 11558,
											"end": 11560,
											"name": "PUSH",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 11553,
											"end": 11556,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 11494,
											"end": 11561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11494,
											"end": 11561,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 11494,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11487,
											"end": 11561,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11487,
											"end": 11561,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11570,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 11659,
											"end": 11662,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11570,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 11570,
											"end": 11663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11570,
											"end": 11663,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 11570,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 11690,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11686,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11679,
											"end": 11691,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11672,
											"end": 11691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11672,
											"end": 11691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11697,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11331,
											"end": 11697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11703,
											"end": 12122,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 11703,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11907,
											"end": 11909,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11896,
											"end": 11905,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11892,
											"end": 11910,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11884,
											"end": 11910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11884,
											"end": 11910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11956,
											"end": 11965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11950,
											"end": 11954,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11946,
											"end": 11966,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11942,
											"end": 11943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11931,
											"end": 11940,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11927,
											"end": 11944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11920,
											"end": 11967,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 12115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 12110,
											"end": 12114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 12115,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 11984,
											"end": 12115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11984,
											"end": 12115,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 11984,
											"end": 12115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11976,
											"end": 12115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11976,
											"end": 12115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11703,
											"end": 12122,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11703,
											"end": 12122,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11703,
											"end": 12122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11703,
											"end": 12122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12128,
											"end": 12319,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 12128,
											"end": 12319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12168,
											"end": 12171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12187,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 12205,
											"end": 12206,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12187,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 12187,
											"end": 12207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12187,
											"end": 12207,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 12187,
											"end": 12207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12182,
											"end": 12207,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12182,
											"end": 12207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12221,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 12239,
											"end": 12240,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12221,
											"end": 12241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 12221,
											"end": 12241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12221,
											"end": 12241,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 12221,
											"end": 12241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12241,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12264,
											"end": 12265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12261,
											"end": 12262,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12257,
											"end": 12266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12250,
											"end": 12266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12250,
											"end": 12266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12285,
											"end": 12288,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12282,
											"end": 12283,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12279,
											"end": 12289,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12276,
											"end": 12312,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12276,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 12276,
											"end": 12312,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12292,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 12292,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 12292,
											"end": 12310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12292,
											"end": 12310,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 12292,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12276,
											"end": 12312,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 12276,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12128,
											"end": 12319,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12128,
											"end": 12319,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12128,
											"end": 12319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12128,
											"end": 12319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12128,
											"end": 12319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12325,
											"end": 12565,
											"name": "tag",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 12325,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12465,
											"end": 12499,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F2073652070756564656E206163756E696172206D617320746F6B656E732C"
										},
										{
											"begin": 12461,
											"end": 12462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12459,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12449,
											"end": 12463,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12442,
											"end": 12500,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12534,
											"end": 12557,
											"name": "PUSH",
											"source": 8,
											"value": "2073652065786365646520656C206D6178696D6F2E0000000000000000000000"
										},
										{
											"begin": 12529,
											"end": 12531,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12521,
											"end": 12527,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12517,
											"end": 12532,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12510,
											"end": 12558,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12325,
											"end": 12565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12325,
											"end": 12565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12571,
											"end": 12937,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 12571,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12713,
											"end": 12716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12734,
											"end": 12801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 12798,
											"end": 12800,
											"name": "PUSH",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 12793,
											"end": 12796,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12734,
											"end": 12801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 12734,
											"end": 12801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12734,
											"end": 12801,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 12734,
											"end": 12801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 12801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12727,
											"end": 12801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12810,
											"end": 12903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 12899,
											"end": 12902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12810,
											"end": 12903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 12810,
											"end": 12903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12810,
											"end": 12903,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 12810,
											"end": 12903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12928,
											"end": 12930,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12923,
											"end": 12926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12919,
											"end": 12931,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12912,
											"end": 12931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12912,
											"end": 12931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12571,
											"end": 12937,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12571,
											"end": 12937,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12571,
											"end": 12937,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12571,
											"end": 12937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12943,
											"end": 13362,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 12943,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13109,
											"end": 13113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13147,
											"end": 13149,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13136,
											"end": 13145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13132,
											"end": 13150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13124,
											"end": 13150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13124,
											"end": 13150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13196,
											"end": 13205,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13190,
											"end": 13194,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13186,
											"end": 13206,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13182,
											"end": 13183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13171,
											"end": 13180,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13167,
											"end": 13184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13160,
											"end": 13207,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13224,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 13350,
											"end": 13354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13224,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 13224,
											"end": 13355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13224,
											"end": 13355,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 13224,
											"end": 13355,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13216,
											"end": 13355,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13216,
											"end": 13355,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12943,
											"end": 13362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12943,
											"end": 13362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12943,
											"end": 13362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12943,
											"end": 13362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13517,
											"end": 13521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13557,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13544,
											"end": 13553,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13532,
											"end": 13558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13532,
											"end": 13558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13568,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 13636,
											"end": 13637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13625,
											"end": 13634,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13621,
											"end": 13638,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13612,
											"end": 13618,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13568,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 13568,
											"end": 13639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13568,
											"end": 13639,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 13568,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13649,
											"end": 13721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 13717,
											"end": 13719,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13706,
											"end": 13715,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13702,
											"end": 13720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13693,
											"end": 13699,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13649,
											"end": 13721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 13649,
											"end": 13721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13649,
											"end": 13721,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 13649,
											"end": 13721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13731,
											"end": 13803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 13799,
											"end": 13801,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13788,
											"end": 13797,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13784,
											"end": 13802,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13775,
											"end": 13781,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13731,
											"end": 13803,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 13731,
											"end": 13803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13731,
											"end": 13803,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 13731,
											"end": 13803,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13368,
											"end": 13810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13368,
											"end": 13810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13816,
											"end": 13982,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 13816,
											"end": 13982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13956,
											"end": 13974,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 13952,
											"end": 13953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13944,
											"end": 13950,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13940,
											"end": 13954,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13933,
											"end": 13975,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13816,
											"end": 13982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13816,
											"end": 13982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13988,
											"end": 14354,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 13988,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14130,
											"end": 14133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14151,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 14215,
											"end": 14217,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 14210,
											"end": 14213,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14151,
											"end": 14218,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 14151,
											"end": 14218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14151,
											"end": 14218,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 14151,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14144,
											"end": 14218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14144,
											"end": 14218,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14227,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 14316,
											"end": 14319,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14227,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 14227,
											"end": 14320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14227,
											"end": 14320,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 14227,
											"end": 14320,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14345,
											"end": 14347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14340,
											"end": 14343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14336,
											"end": 14348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14329,
											"end": 14348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14329,
											"end": 14348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13988,
											"end": 14354,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13988,
											"end": 14354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13988,
											"end": 14354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13988,
											"end": 14354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14360,
											"end": 14779,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 14360,
											"end": 14779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14564,
											"end": 14566,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14553,
											"end": 14562,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 14567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14541,
											"end": 14567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14541,
											"end": 14567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14613,
											"end": 14622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14607,
											"end": 14611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14603,
											"end": 14623,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14599,
											"end": 14600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14588,
											"end": 14597,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14584,
											"end": 14601,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14577,
											"end": 14624,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14641,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 14767,
											"end": 14771,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14641,
											"end": 14772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 14641,
											"end": 14772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14641,
											"end": 14772,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 14641,
											"end": 14772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14633,
											"end": 14772,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14633,
											"end": 14772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14360,
											"end": 14779,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14360,
											"end": 14779,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14360,
											"end": 14779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14360,
											"end": 14779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14785,
											"end": 14955,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 14785,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14925,
											"end": 14947,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 14921,
											"end": 14922,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14913,
											"end": 14919,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14909,
											"end": 14923,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14902,
											"end": 14948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14785,
											"end": 14955,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14785,
											"end": 14955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 15327,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 14961,
											"end": 15327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15103,
											"end": 15106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15124,
											"end": 15191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 15188,
											"end": 15190,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 15183,
											"end": 15186,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15124,
											"end": 15191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 15124,
											"end": 15191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15124,
											"end": 15191,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 15124,
											"end": 15191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15117,
											"end": 15191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15117,
											"end": 15191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15200,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 15289,
											"end": 15292,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15200,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 15200,
											"end": 15293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15200,
											"end": 15293,
											"name": "tag",
											"source": 8,
											"value": "495"
										},
										{
											"begin": 15200,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15318,
											"end": 15320,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15313,
											"end": 15316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15309,
											"end": 15321,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15302,
											"end": 15321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15302,
											"end": 15321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 15327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 15327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 15327,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14961,
											"end": 15327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15333,
											"end": 15752,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 15333,
											"end": 15752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15499,
											"end": 15503,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15537,
											"end": 15539,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15526,
											"end": 15535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15540,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15514,
											"end": 15540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15514,
											"end": 15540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15586,
											"end": 15595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15580,
											"end": 15584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15576,
											"end": 15596,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15572,
											"end": 15573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15561,
											"end": 15570,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15557,
											"end": 15574,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15550,
											"end": 15597,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15614,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 15740,
											"end": 15744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15614,
											"end": 15745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 15614,
											"end": 15745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15614,
											"end": 15745,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 15614,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15606,
											"end": 15745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15606,
											"end": 15745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15333,
											"end": 15752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15333,
											"end": 15752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15333,
											"end": 15752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15333,
											"end": 15752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/TamboToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"calculateRewards(address)": "64ab8675",
							"claimStakingRewards()": "6b69e05b",
							"decimals()": "313ce567",
							"maxSupply()": "d5abeb01",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"redeemTokens(uint256)": "a6e158f8",
							"renounceOwnership()": "715018a6",
							"rewardTokens(address,uint256)": "81a4af15",
							"stakeTokens(uint256)": "7547c7a3",
							"stakedTokens(address)": "a5b39cfb",
							"stakingRewards(address)": "499d7f96",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferTokens(address,uint256)": "bec3fa17",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimStakingRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeemTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rewardTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TamboToken.sol\":\"TamboToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/TamboToken.sol\":{\"keccak256\":\"0xc5a4865fc490a3835855320210897f8fab7d41cb1ed126793a46aee37b49435d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c4d4112f0f9a2d2fa7b4dca6391fae17d5f9e467694a8ddb076387f2a6fb051\",\"dweb:/ipfs/QmbFVydsccJ9xDJsCwfkocb9YwuoznVLYtMSUcNDxbvuL8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 415,
								"contract": "contracts/TamboToken.sol:TamboToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 421,
								"contract": "contracts/TamboToken.sol:TamboToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 423,
								"contract": "contracts/TamboToken.sol:TamboToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 425,
								"contract": "contracts/TamboToken.sol:TamboToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 427,
								"contract": "contracts/TamboToken.sol:TamboToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/TamboToken.sol:TamboToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 302,
								"contract": "contracts/TamboToken.sol:TamboToken",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 1054,
								"contract": "contracts/TamboToken.sol:TamboToken",
								"label": "maxSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1058,
								"contract": "contracts/TamboToken.sol:TamboToken",
								"label": "stakedTokens",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1062,
								"contract": "contracts/TamboToken.sol:TamboToken",
								"label": "stakingRewards",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1042,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1041
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1042,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1041
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1011
						]
					},
					"id": 908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 986,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 395,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1012,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 397,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1011,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 1042,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 399,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1041,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 908,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 404,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1041,
										"src": "1428:7:3"
									},
									"id": 405,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 406,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "1437:6:3"
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 408,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1011,
										"src": "1445:14:3"
									},
									"id": 409,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 410,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:3"
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 907,
							"linearizedBaseContracts": [
								907,
								189,
								1011,
								985,
								1041
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 415,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 414,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 412,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 413,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 421,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 420,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 416,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 419,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 417,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 422,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 424,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 907,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 435,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 436,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 444,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 907,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										998
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 450,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 449,
												"id": 451,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 907,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1004
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 459,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 458,
												"id": 460,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 907,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1010
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 467,
												"id": 469,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 465,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 907,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 477,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 423,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 478,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 907,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 488,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 415,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 490,
													"indexExpression": {
														"id": 489,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 487,
												"id": 491,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 907,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										952
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 503,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 510,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 508,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 502,
												"id": 515,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 907,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										962
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 527,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 529,
														"indexExpression": {
															"id": 528,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 531,
													"indexExpression": {
														"id": 530,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 532,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 907,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										972
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 544,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 546,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 798,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 543,
												"id": 556,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 907,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										984
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 570,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 572,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 582,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 581,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 569,
												"id": 588,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 907,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 606,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 612,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 629,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 628,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 621,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 627,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 907,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																659
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 659,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 684,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 658,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 663,
															"initialValue": {
																"baseExpression": {
																	"id": 660,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 662,
																"indexExpression": {
																	"id": 661,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 664,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 668,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 669,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 659,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 670,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 667,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 672,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 683,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 675,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 677,
																			"indexExpression": {
																				"id": 676,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 640,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 678,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 679,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 644,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 682,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 685,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 657,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 653,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 654,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 656,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 686,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 687,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 704,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 698,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 700,
																			"indexExpression": {
																				"id": 699,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 642,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 703,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 696,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 692,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 693,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 695,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 708,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 907,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 722,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 723,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 735,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 729,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 728,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 734,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 907,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 756,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 768,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 762,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 761,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 767,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 772,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 770,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 907,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 790,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															798,
															858
														],
														"referencedDeclaration": 858,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 907,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 817,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 816,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 825,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 826,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 832,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 831,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 837,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 840,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 843,
															"indexExpression": {
																"id": 841,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 844,
														"indexExpression": {
															"id": 842,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 845,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 848,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 807,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 850,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 851,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 852,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 849,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 928,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 806,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 907,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 868,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 874,
												"initialValue": {
													"arguments": [
														{
															"id": 871,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 870,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 877,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 876,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 882,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 883,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 892,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 891,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 886,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 887,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 888,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 885,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 890,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 902,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 894,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 895,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 896,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 897,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 893,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				798,
																				858
																			],
																			"referencedDeclaration": 858,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 907,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 908,
							"src": "1401:9741:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 910,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 919,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 928,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 985,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 985,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 985,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 985,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 985,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 985,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 986,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							985
						],
						"IERC20Metadata": [
							1011
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 986,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 988,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 991,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 985,
										"src": "305:6:5"
									},
									"id": 992,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 990,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1011,
							"linearizedBaseContracts": [
								1011,
								985
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 998,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 995,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 1011,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 1011,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1007,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 1011,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1012,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								919,
								928
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1041
						]
					},
					"id": 1042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1041,
							"linearizedBaseContracts": [
								1041
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1019,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1021,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1041,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1028,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1030,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1041,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1036,
												"id": 1038,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1041,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1042,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/TamboToken.sol": {
				"ast": {
					"absolutePath": "contracts/TamboToken.sol",
					"exportedSymbols": {
						"Context": [
							1041
						],
						"ERC20": [
							907
						],
						"IERC20": [
							985
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1011
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"TamboToken": [
							1317
						]
					},
					"id": 1318,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1318,
							"sourceUnit": 908,
							"src": "119:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1318,
							"sourceUnit": 148,
							"src": "176:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1318,
							"sourceUnit": 393,
							"src": "230:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1047,
										"name": "ERC20",
										"nameLocations": [
											"312:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 907,
										"src": "312:5:7"
									},
									"id": 1048,
									"nodeType": "InheritanceSpecifier",
									"src": "312:5:7"
								},
								{
									"baseName": {
										"id": 1049,
										"name": "Ownable",
										"nameLocations": [
											"319:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "319:7:7"
									},
									"id": 1050,
									"nodeType": "InheritanceSpecifier",
									"src": "319:7:7"
								},
								{
									"baseName": {
										"id": 1051,
										"name": "Pausable",
										"nameLocations": [
											"328:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "328:8:7"
									},
									"id": 1052,
									"nodeType": "InheritanceSpecifier",
									"src": "328:8:7"
								}
							],
							"canonicalName": "TamboToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1317,
							"linearizedBaseContracts": [
								1317,
								392,
								147,
								907,
								189,
								1011,
								985,
								1041
							],
							"name": "TamboToken",
							"nameLocation": "298:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 1054,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "359:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1317,
									"src": "344:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1053,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a5b39cfb",
									"id": 1058,
									"mutability": "mutable",
									"name": "stakedTokens",
									"nameLocation": "442:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1317,
									"src": "407:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1057,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1055,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "415:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "407:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1056,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "426:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "499d7f96",
									"id": 1062,
									"mutability": "mutable",
									"name": "stakingRewards",
									"nameLocation": "517:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1317,
									"src": "482:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1061,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1059,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "490:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "482:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1060,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "501:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "698:208:7",
										"statements": [
											{
												"expression": {
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1077,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "709:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1078,
															"name": "_maxSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "721:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "735:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1080,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "741:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "741:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "735:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1083,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "734:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "721:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "709:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "709:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1088,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "804:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "808:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "804:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1090,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "816:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "833:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1092,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 471,
																				"src": "839:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "839:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "833:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1095,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "832:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "816:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1087,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "798:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "798:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "798:53:7"
											}
										]
									},
									"id": 1100,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "54616d626f546f6b656e",
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "657:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_dd00b2e14437acf0cca4dfa436e6022b684c08bd8e3806a7a5af1ddedefeb264",
														"typeString": "literal_string \"TamboToken\""
													},
													"value": "TamboToken"
												},
												{
													"hexValue": "544254",
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "671:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_74f9fb06bee41b7173ae90e93067dc03e5c1f7be266d2bbb0e68a6e2988f49b5",
														"typeString": "literal_string \"TBT\""
													},
													"value": "TBT"
												}
											],
											"id": 1071,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1068,
												"name": "ERC20",
												"nameLocations": [
													"651:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 907,
												"src": "651:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "651:26:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1073,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "686:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "690:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "686:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1075,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1072,
												"name": "Ownable",
												"nameLocations": [
													"678:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "678:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "678:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "616:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "608:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "_maxSupply",
												"nameLocation": "639:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "631:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:43:7"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:0:7"
									},
									"scope": 1317,
									"src": "596:310:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "1087:290:7",
										"statements": [
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "amountWithDecimals",
														"nameLocation": "1106:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "1098:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1098:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1127:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1137:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1115,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "1143:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1143:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1137:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1136:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1127:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1098:56:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1122,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "1173:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1173:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1124,
																	"name": "amountWithDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "1189:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1173:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1126,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "1211:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1173:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073652070756564656e206163756e696172206d617320746f6b656e732c2073652065786365646520656c206d6178696d6f2e",
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1222:55:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114",
																"typeString": "literal_string \"No se pueden acuniar mas tokens, se excede el maximo.\""
															},
															"value": "No se pueden acuniar mas tokens, se excede el maximo."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6215bf64f63b197538bf4c7b2bb9de0f86a421ab0e3f9256a630735b9ad7114",
																"typeString": "literal_string \"No se pueden acuniar mas tokens, se excede el maximo.\""
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1165:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1165:113:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "1165:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1132,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "1295:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "amountWithDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "1306:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1131,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1289:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "1289:36:7"
											}
										]
									},
									"functionSelector": "81a4af15",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1107,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1106,
												"name": "onlyOwner",
												"nameLocations": [
													"1063:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1063:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1063:9:7"
										},
										{
											"id": 1109,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1108,
												"name": "whenNotPaused",
												"nameLocations": [
													"1073:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "1073:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1073:13:7"
										}
									],
									"name": "rewardTokens",
									"nameLocation": "1006:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1027:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1019:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1046:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "1038:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:35:7"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:0:7"
									},
									"scope": 1317,
									"src": "997:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "1495:65:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1145,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1512:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1516:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1512:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1147,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "1524:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1534:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1149,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 471,
																				"src": "1540:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1540:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "1534:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1152,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1533:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1524:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1144,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "1506:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "1506:46:7"
											}
										]
									},
									"functionSelector": "a6e158f8",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1141,
												"name": "whenNotPaused",
												"nameLocations": [
													"1481:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "1481:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1481:13:7"
										}
									],
									"name": "redeemTokens",
									"nameLocation": "1443:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1464:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1456:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1455:16:7"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1495:0:7"
									},
									"scope": 1317,
									"src": "1434:126:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "1705:67:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1167,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "1725:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1168,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "1736:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1746:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1170,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 471,
																				"src": "1752:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1752:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "1746:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1745:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1736:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1166,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "1716:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1716:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "1716:48:7"
											}
										]
									},
									"functionSelector": "bec3fa17",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1164,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1163,
												"name": "whenNotPaused",
												"nameLocations": [
													"1691:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "1691:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1691:13:7"
										}
									],
									"name": "transferTokens",
									"nameLocation": "1632:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1655:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1647:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1674:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "1666:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1646:35:7"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1705:0:7"
									},
									"scope": 1317,
									"src": "1623:149:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "1892:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1183,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "1903:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1903:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "1903:8:7"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1180,
												"name": "onlyOwner",
												"nameLocations": [
													"1882:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1882:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1882:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "1865:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1870:2:7"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1892:0:7"
									},
									"scope": 1317,
									"src": "1856:63:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "2045:29:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1192,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "2056:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2056:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "2056:10:7"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1190,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1189,
												"name": "onlyOwner",
												"nameLocations": [
													"2035:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2035:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2035:9:7"
										}
									],
									"name": "unpause",
									"nameLocation": "2016:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2023:2:7"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2045:0:7"
									},
									"scope": 1317,
									"src": "2007:67:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "2213:335:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1205,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2242:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2246:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2242:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1204,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "2232:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2232:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1208,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "2257:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2267:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1210,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 471,
																					"src": "2273:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																						"typeString": "function () view returns (uint8)"
																					}
																				},
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2273:10:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2267:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1213,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2266:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2257:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2232:52:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207469656e657320737566696369656e74657320746f6b656e732070617261206861636572207374616b696e672e",
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2286:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38",
																"typeString": "literal_string \"No tienes suficientes tokens para hacer staking.\""
															},
															"value": "No tienes suficientes tokens para hacer staking."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e083d9c30793f92422d8572eee7ef74814303d75b751e5bc50edcb4e9dcc7d38",
																"typeString": "literal_string \"No tienes suficientes tokens para hacer staking.\""
															}
														],
														"id": 1203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2224:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:113:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "2224:113:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1220,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2354:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2358:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2354:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "2366:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2376:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1224,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 471,
																				"src": "2382:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																					"typeString": "function () view returns (uint8)"
																				}
																			},
																			"id": 1225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2382:10:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "2376:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2375:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2366:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1219,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "2348:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2348:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "2348:46:7"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1231,
															"name": "stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "2447:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1234,
														"indexExpression": {
															"expression": {
																"id": 1232,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2460:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2464:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2460:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2447:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1235,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "2475:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2485:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1237,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "2491:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																				"typeString": "function () view returns (uint8)"
																			}
																		},
																		"id": 1238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2491:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2485:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1240,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2484:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2475:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2447:55:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "2447:55:7"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1200,
												"name": "whenNotPaused",
												"nameLocations": [
													"2199:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2199:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2199:13:7"
										}
									],
									"name": "stakeTokens",
									"nameLocation": "2162:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2182:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "2174:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2174:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2173:16:7"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2213:0:7"
									},
									"scope": 1317,
									"src": "2153:395:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "2665:280:7",
										"statements": [
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2684:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "2676:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2676:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1256,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1253,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2711:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2715:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2711:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1252,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "2694:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2694:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2676:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1258,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "2741:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2751:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2741:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207469656e6573207265636f6d70656e7361732070656e6469656e7465732e",
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26",
																"typeString": "literal_string \"No tienes recompensas pendientes.\""
															},
															"value": "No tienes recompensas pendientes."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3ba1242aed9b112cac7962ccfc895e3f005934ed1f2eb6017878bb915fbeb26",
																"typeString": "literal_string \"No tienes recompensas pendientes.\""
															}
														],
														"id": 1257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2733:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2733:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "2733:57:7"
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1264,
															"name": "stakingRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "2801:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1267,
														"indexExpression": {
															"expression": {
																"id": 1265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2816:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2820:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2816:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2801:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2830:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2801:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "2801:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1272,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2878:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2882:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2878:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1274,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "2890:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1271,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "2872:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2872:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "2872:26:7"
											}
										]
									},
									"functionSelector": "6b69e05b",
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1248,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1247,
												"name": "whenNotPaused",
												"nameLocations": [
													"2651:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2651:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2651:13:7"
										}
									],
									"name": "claimStakingRewards",
									"nameLocation": "2620:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2639:2:7"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:0:7"
									},
									"scope": 1317,
									"src": "2611:334:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "3094:99:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1285,
															"name": "stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "3112:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1287,
														"indexExpression": {
															"id": 1286,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "3125:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3112:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3135:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "3112:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1290,
												"nodeType": "Return",
												"src": "3105:32:7"
											}
										]
									},
									"functionSelector": "64ab8675",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "3031:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "3056:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3048:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3048:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3047:16:7"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3085:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3085:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3084:9:7"
									},
									"scope": 1317,
									"src": "3022:171:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0d3ecba324ef5a283bcbd5d1a966cab18661432ab3575740c588f7a0144b0dfa",
									"id": 1298,
									"name": "TokensRewarded",
									"nameLocation": "3251:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3282:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "3266:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3266:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3301:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "3293:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3293:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3265:43:7"
									},
									"src": "3245:64:7"
								},
								{
									"anonymous": false,
									"eventSelector": "cdd4c59de26b3f8623e6012ab9bc32a995eda3452d89c941fc8af6b74276ad38",
									"id": 1304,
									"name": "TokensRedeemed",
									"nameLocation": "3321:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"indexed": true,
												"mutability": "mutable",
												"name": "redeemer",
												"nameLocation": "3352:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "3336:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3336:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3370:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "3362:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3362:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:42:7"
									},
									"src": "3315:63:7"
								},
								{
									"anonymous": false,
									"eventSelector": "b539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef",
									"id": 1310,
									"name": "TokensStaked",
									"nameLocation": "3390:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "3419:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "3403:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3435:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "3427:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3402:40:7"
									},
									"src": "3384:59:7"
								},
								{
									"anonymous": false,
									"eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
									"id": 1316,
									"name": "RewardsClaimed",
									"nameLocation": "3455:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "3486:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "3470:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3502:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "3494:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3494:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:40:7"
									},
									"src": "3449:61:7"
								}
							],
							"scope": 1318,
							"src": "289:3224:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								295,
								300,
								919,
								928,
								1298,
								1304,
								1310,
								1316
							]
						}
					],
					"src": "33:3480:7"
				},
				"id": 7
			}
		}
	}
}